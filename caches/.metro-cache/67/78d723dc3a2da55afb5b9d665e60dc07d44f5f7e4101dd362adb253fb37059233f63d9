{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}},{"start":{"line":16,"column":18,"index":715},"end":{"line":16,"column":42,"index":739}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":2}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":537},"end":{"line":12,"column":46,"index":563}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18,"index":583},"end":{"line":13,"column":42,"index":607}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":625},"end":{"line":14,"column":38,"index":647}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var _asyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[4], \"./GoTrueAdminApi\"));\n  var constants_1 = require(_dependencyMap[5], \"./lib/constants\");\n  var errors_1 = require(_dependencyMap[6], \"./lib/errors\");\n  var fetch_1 = require(_dependencyMap[7], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[8], \"./lib/helpers\");\n  var local_storage_1 = require(_dependencyMap[9], \"./lib/local-storage\");\n  var polyfills_1 = require(_dependencyMap[10], \"./lib/polyfills\");\n  var version_1 = require(_dependencyMap[11], \"./lib/version\");\n  var locks_1 = require(_dependencyMap[12], \"./lib/locks\");\n  var base64url_1 = require(_dependencyMap[13], \"./lib/base64url\");\n  var helpers_2 = require(_dependencyMap[8], \"./lib/helpers\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the the auth state is known and it's save to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n          keys: []\n        };\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email,\n                  password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email,\n                  password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Only Solana supported at this time, using the Sign in with Solana standard.\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          if (chain === 'solana') {\n            return yield this.signInWithSolana(credentials);\n          }\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x1) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n              }),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x10) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider,\n                id_token: token,\n                access_token,\n                nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data,\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x11) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield5 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield6 = _slicedToArray(_yield5, 2);\n                codeChallenge = _yield6[0];\n                codeChallengeMethod = _yield6[1];\n              }\n              var _yield7 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield7.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                }),\n                data = _yield8.data,\n                _error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x12) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield9.data,\n              error = _yield9.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x13) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield0 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield1 = _slicedToArray(_yield0, 2);\n              codeChallenge = _yield1[0];\n              codeChallengeMethod = _yield1[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n              }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x14) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield10 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield10.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error\n                };\n              });\n              return function (_x15) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield11 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield11.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield12.data,\n                _error2 = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x16) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x17) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = [..._this8.pendingInLock];\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x18, _x19) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x20) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: (target, prop, receiver) => {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n                      console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.session,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error\n              };\n            }\n            return {\n              data: {\n                session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this9 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this9._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x21) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this0.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this0.fetch, 'GET', `${_this0.url}/user`, {\n                  headers: _this0.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x23) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x22) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this1 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this1._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x24) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this10.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield13 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this10.storage, _this10.storageKey);\n                  var _yield14 = _slicedToArray(_yield13, 2);\n                  codeChallenge = _yield14[0];\n                  codeChallengeMethod = _yield14[1];\n                }\n                var _yield15 = yield (0, fetch_1._request)(_this10.fetch, 'PUT', `${_this10.url}/user`, {\n                    headers: _this10.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield15.data,\n                  userError = _yield15.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this10._saveSession(session);\n                yield _this10._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x26) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x25) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this11 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this11._setSession(currentSession);\n          }));\n        });\n        function setSession(_x27) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.session,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x28) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x29) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this13$_callR = yield _this13._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this13$_callR.session,\n                  error = _yield$_this13$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session\n                  },\n                  error: null\n                };\n              });\n              return function (_x31) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x30) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token,\n              provider_refresh_token,\n              access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token,\n              token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x32, _x33) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x34) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this14 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this14._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n              if (accessToken) {\n                var _yield$_this15$admin$ = yield _this15.admin.signOut(accessToken, scope),\n                  error = _yield$_this15$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this15._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this15.storage, `${_this15.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x35) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n      /**\n       * Receive a notification every time an auth event happens.\n       * @param callback A callback function to be invoked when an auth event happens.\n       */\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this16 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id,\n          callback,\n          unsubscribe: () => {\n            this._debug('#unsubscribe()', 'state change callback with id removed', id);\n            this.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this16.initializePromise;\n          yield _this16._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this16._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this17 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this17.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this17.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n              }\n            });\n            return function (_x37) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x36) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield16 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield17 = _slicedToArray(_yield16, 2);\n            codeChallenge = _yield17[0];\n            codeChallengeMethod = _yield17[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x38) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }()\n      /**\n       * Links an oauth identity to an existing user.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"linkIdentity\",\n      value: (function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          var _this18 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this18._getUrlForProvider(`${_this18.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this18.fetch, 'GET', url, {\n                    headers: _this18.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                  });\n                });\n                return function (_x40) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === void 0 ? void 0 : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentity(_x39) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n      )\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this19 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref27 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this19.fetch, 'DELETE', `${_this19.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this19.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n              });\n              return function (_x42) {\n                return _ref27.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x41) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this20 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this20._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this20.fetch, 'POST', `${_this20.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this20.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x44) {\n                return _ref28.apply(this, arguments);\n              };\n            }(), (attempt, error) => {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x43) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider,\n              url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x45, _x46) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  console.error(error);\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                console.error('Error getting user data:', getUserError);\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              session: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                session: null,\n                error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x47) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event,\n                session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x50) {\n                return _ref29.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x48, _x49) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_2.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_2.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x51) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {\n          console.error('removing visibilitychange callback failed', e);\n        }\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this21 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this21.initializePromise;\n            yield _this21._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this22._useSession(/*#__PURE__*/function () {\n                    var _ref32 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this22._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this22._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this22._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x52) {\n                      return _ref32.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {\n                  console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                }\n              } finally {\n                _this22._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this23._onVisibilityChanged(false);\n            });\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {\n            console.error('_handleVisibilityChange', error);\n          }\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this24 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this24._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this24._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x53) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield18 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield19 = _slicedToArray(_yield18, 2),\n              codeChallenge = _yield19[0],\n              codeChallengeMethod = _yield19[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x54, _x55, _x56) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this25 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref35 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this25.fetch, 'DELETE', `${_this25.url}/factors/${params.factorId}`, {\n                  headers: _this25.headers,\n                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n              });\n              return function (_x58) {\n                return _ref35.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x57) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : {\n                  issuer: params.issuer\n                });\n                var _yield20 = yield (0, fetch_1._request)(_this26.fetch, 'POST', `${_this26.url}/factors`, {\n                    body,\n                    headers: _this26.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  }),\n                  data = _yield20.data,\n                  error = _yield20.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data,\n                  error: null\n                };\n              });\n              return function (_x60) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x59) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n      /**\n       * {@see GoTrueMFAApi#verify}\n       */\n    }, {\n      key: \"_verify\",\n      value: (function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this27._useSession(/*#__PURE__*/function () {\n                var _ref38 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var _yield21 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors/${params.factorId}/verify`, {\n                      body: {\n                        code: params.code,\n                        challenge_id: params.challengeId\n                      },\n                      headers: _this27.headers,\n                      jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    }),\n                    data = _yield21.data,\n                    error = _yield21.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error\n                    };\n                  }\n                  yield _this27._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this27._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data,\n                    error\n                  };\n                });\n                return function (_x62) {\n                  return _ref38.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x61) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challenge}\n       */\n      )\n    }, {\n      key: \"_challenge\",\n      value: (function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref40 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  return yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/challenge`, {\n                    body: {\n                      channel: params.channel\n                    },\n                    headers: _this28.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  });\n                });\n                return function (_x64) {\n                  return _ref40.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x63) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n      )\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x65) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n          var totp = factors.filter(factor => factor.factor_type === 'totp' && factor.status === 'verified');\n          var phone = factors.filter(factor => factor.factor_type === 'phone' && factor.status === 'verified');\n          return {\n            data: {\n              all: factors,\n              totp,\n              phone\n            },\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this29._useSession(/*#__PURE__*/function () {\n              var _ref42 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref43 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref43.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel,\n                    nextLevel,\n                    currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x66) {\n                return _ref42.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(key => key.kid === kid);\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(key => key.kid === kid);\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield22 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield22.data,\n            error = _yield22.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(key => key.kid === kid);\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x67) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref44 = (0, helpers_1.decodeJWT)(token),\n              header = _ref44.header,\n              payload = _ref44.payload,\n              signature = _ref44.signature,\n              _ref44$raw = _ref44.raw,\n              rawHeader = _ref44$raw.header,\n              rawPayload = _ref44$raw.payload;\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header,\n                  signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header,\n                signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x68) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  exports.default = GoTrueClient;\n  GoTrueClient.nextInstanceID = 0;\n});","lineCount":3524,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,1,13],[7,6,1,13,"_asyncToGenerator"],[7,23,1,13],[7,26,1,13,"require"],[7,33,1,13],[7,34,1,13,"_dependencyMap"],[7,48,1,13],[7,96,1,13,"default"],[7,103,1,13],[8,2,2,0],[8,6,2,4,"__importDefault"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__importDefault"],[8,52,2,51],[8,56,2,56],[8,66,2,66,"mod"],[8,69,2,69],[8,71,2,71],[9,4,3,4],[9,11,3,12,"mod"],[9,14,3,15],[9,18,3,19,"mod"],[9,21,3,22],[9,22,3,23,"__esModule"],[9,32,3,33],[9,35,3,37,"mod"],[9,38,3,40],[9,41,3,43],[10,6,3,45],[10,15,3,54],[10,17,3,56,"mod"],[11,4,3,60],[11,5,3,61],[12,2,4,0],[12,3,4,1],[13,2,5,0,"Object"],[13,8,5,6],[13,9,5,7,"defineProperty"],[13,23,5,21],[13,24,5,22,"exports"],[13,31,5,29],[13,33,5,31],[13,45,5,43],[13,47,5,45],[14,4,5,47,"value"],[14,9,5,52],[14,11,5,54],[15,2,5,59],[15,3,5,60],[15,4,5,61],[16,2,6,0],[16,6,6,6,"GoTrueAdminApi_1"],[16,22,6,22],[16,25,6,25,"__importDefault"],[16,40,6,40],[16,41,6,41,"require"],[16,48,6,48],[16,49,6,48,"_dependencyMap"],[16,63,6,48],[16,86,6,67],[16,87,6,68],[16,88,6,69],[17,2,7,0],[17,6,7,6,"constants_1"],[17,17,7,17],[17,20,7,20,"require"],[17,27,7,27],[17,28,7,27,"_dependencyMap"],[17,42,7,27],[17,64,7,45],[17,65,7,46],[18,2,8,0],[18,6,8,6,"errors_1"],[18,14,8,14],[18,17,8,17,"require"],[18,24,8,24],[18,25,8,24,"_dependencyMap"],[18,39,8,24],[18,58,8,39],[18,59,8,40],[19,2,9,0],[19,6,9,6,"fetch_1"],[19,13,9,13],[19,16,9,16,"require"],[19,23,9,23],[19,24,9,23,"_dependencyMap"],[19,38,9,23],[19,56,9,37],[19,57,9,38],[20,2,10,0],[20,6,10,6,"helpers_1"],[20,15,10,15],[20,18,10,18,"require"],[20,25,10,25],[20,26,10,25,"_dependencyMap"],[20,40,10,25],[20,60,10,41],[20,61,10,42],[21,2,11,0],[21,6,11,6,"local_storage_1"],[21,21,11,21],[21,24,11,24,"require"],[21,31,11,31],[21,32,11,31,"_dependencyMap"],[21,46,11,31],[21,72,11,53],[21,73,11,54],[22,2,12,0],[22,6,12,6,"polyfills_1"],[22,17,12,17],[22,20,12,20,"require"],[22,27,12,27],[22,28,12,27,"_dependencyMap"],[22,42,12,27],[22,65,12,45],[22,66,12,46],[23,2,13,0],[23,6,13,6,"version_1"],[23,15,13,15],[23,18,13,18,"require"],[23,25,13,25],[23,26,13,25,"_dependencyMap"],[23,40,13,25],[23,61,13,41],[23,62,13,42],[24,2,14,0],[24,6,14,6,"locks_1"],[24,13,14,13],[24,16,14,16,"require"],[24,23,14,23],[24,24,14,23,"_dependencyMap"],[24,38,14,23],[24,57,14,37],[24,58,14,38],[25,2,15,0],[25,6,15,6,"base64url_1"],[25,17,15,17],[25,20,15,20,"require"],[25,27,15,27],[25,28,15,27,"_dependencyMap"],[25,42,15,27],[25,65,15,45],[25,66,15,46],[26,2,16,0],[26,6,16,6,"helpers_2"],[26,15,16,15],[26,18,16,18,"require"],[26,25,16,25],[26,26,16,25,"_dependencyMap"],[26,40,16,25],[26,60,16,41],[26,61,16,42],[27,2,17,0],[27,3,17,1],[27,4,17,2],[27,6,17,4,"polyfills_1"],[27,17,17,15],[27,18,17,16,"polyfillGlobalThis"],[27,36,17,34],[27,38,17,36],[27,39,17,37],[27,40,17,38],[27,41,17,39],[28,2,18,0],[28,6,18,6,"DEFAULT_OPTIONS"],[28,21,18,21],[28,24,18,24],[29,4,19,4,"url"],[29,7,19,7],[29,9,19,9,"constants_1"],[29,20,19,20],[29,21,19,21,"GOTRUE_URL"],[29,31,19,31],[30,4,20,4,"storageKey"],[30,14,20,14],[30,16,20,16,"constants_1"],[30,27,20,27],[30,28,20,28,"STORAGE_KEY"],[30,39,20,39],[31,4,21,4,"autoRefreshToken"],[31,20,21,20],[31,22,21,22],[31,26,21,26],[32,4,22,4,"persistSession"],[32,18,22,18],[32,20,22,20],[32,24,22,24],[33,4,23,4,"detectSessionInUrl"],[33,22,23,22],[33,24,23,24],[33,28,23,28],[34,4,24,4,"headers"],[34,11,24,11],[34,13,24,13,"constants_1"],[34,24,24,24],[34,25,24,25,"DEFAULT_HEADERS"],[34,40,24,40],[35,4,25,4,"flowType"],[35,12,25,12],[35,14,25,14],[35,24,25,24],[36,4,26,4,"debug"],[36,9,26,9],[36,11,26,11],[36,16,26,16],[37,4,27,4,"hasCustomAuthorizationHeader"],[37,32,27,32],[37,34,27,34],[38,2,28,0],[38,3,28,1],[39,2,28,2],[39,11,29,15,"lockNoOp"],[39,19,29,23,"lockNoOp"],[39,20,29,23,"_x"],[39,22,29,23],[39,24,29,23,"_x2"],[39,27,29,23],[39,29,29,23,"_x3"],[39,32,29,23],[40,4,29,23],[40,11,29,23,"_lockNoOp"],[40,20,29,23],[40,21,29,23,"apply"],[40,26,29,23],[40,33,29,23,"arguments"],[40,42,29,23],[41,2,29,23],[42,2,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,2,32,0],[50,11,32,0,"_lockNoOp"],[50,21,32,0],[51,4,32,0,"_lockNoOp"],[51,13,32,0],[51,16,32,0,"_asyncToGenerator"],[51,33,32,0],[51,34,29,0],[51,45,29,24,"name"],[51,49,29,28],[51,51,29,30,"acquireTimeout"],[51,65,29,44],[51,67,29,46,"fn"],[51,69,29,48],[51,71,29,50],[52,6,30,4],[52,19,30,17,"fn"],[52,21,30,19],[52,22,30,20],[52,23,30,21],[53,4,31,0],[53,5,31,1],[54,4,31,1],[54,11,31,1,"_lockNoOp"],[54,20,31,1],[54,21,31,1,"apply"],[54,26,31,1],[54,33,31,1,"arguments"],[54,42,31,1],[55,2,31,1],[56,2,40,0],[56,6,40,6,"GLOBAL_JWKS"],[56,17,40,17],[56,20,40,20],[56,21,40,21],[56,22,40,22],[57,2,40,23],[57,6,41,6,"GoTrueClient"],[57,18,41,18],[58,4,42,4],[59,0,43,0],[60,0,44,0],[61,4,45,4],[61,13,45,4,"GoTrueClient"],[61,26,45,16,"options"],[61,33,45,23],[61,35,45,25],[62,6,45,25],[62,10,45,25,"_this"],[62,15,45,25],[63,6,45,25,"_classCallCheck"],[63,21,45,25],[63,28,45,25,"GoTrueClient"],[63,40,45,25],[64,6,46,8],[64,10,46,12,"_a"],[64,12,46,14],[64,14,46,16,"_b"],[64,16,46,18],[65,6,47,8],[66,0,48,0],[67,0,49,0],[68,6,50,8],[68,10,50,12],[68,11,50,13,"userStorage"],[68,22,50,24],[68,25,50,27],[68,29,50,31],[69,6,51,8],[69,10,51,12],[69,11,51,13,"memoryStorage"],[69,24,51,26],[69,27,51,29],[69,31,51,33],[70,6,52,8],[70,10,52,12],[70,11,52,13,"stateChangeEmitters"],[70,30,52,32],[70,33,52,35],[70,37,52,39,"Map"],[70,40,52,42],[70,41,52,43],[70,42,52,44],[71,6,53,8],[71,10,53,12],[71,11,53,13,"autoRefreshTicker"],[71,28,53,30],[71,31,53,33],[71,35,53,37],[72,6,54,8],[72,10,54,12],[72,11,54,13,"visibilityChangedCallback"],[72,36,54,38],[72,39,54,41],[72,43,54,45],[73,6,55,8],[73,10,55,12],[73,11,55,13,"refreshingDeferred"],[73,29,55,31],[73,32,55,34],[73,36,55,38],[74,6,56,8],[75,0,57,0],[76,0,58,0],[77,0,59,0],[78,0,60,0],[79,0,61,0],[80,6,62,8],[80,10,62,12],[80,11,62,13,"initializePromise"],[80,28,62,30],[80,31,62,33],[80,35,62,37],[81,6,63,8],[81,10,63,12],[81,11,63,13,"detectSessionInUrl"],[81,29,63,31],[81,32,63,34],[81,36,63,38],[82,6,64,8],[82,10,64,12],[82,11,64,13,"hasCustomAuthorizationHeader"],[82,39,64,41],[82,42,64,44],[82,47,64,49],[83,6,65,8],[83,10,65,12],[83,11,65,13,"suppressGetSessionWarning"],[83,36,65,38],[83,39,65,41],[83,44,65,46],[84,6,66,8],[84,10,66,12],[84,11,66,13,"lockAcquired"],[84,23,66,25],[84,26,66,28],[84,31,66,33],[85,6,67,8],[85,10,67,12],[85,11,67,13,"pendingInLock"],[85,24,67,26],[85,27,67,29],[85,29,67,31],[86,6,68,8],[87,0,69,0],[88,0,70,0],[89,6,71,8],[89,10,71,12],[89,11,71,13,"broadcastChannel"],[89,27,71,29],[89,30,71,32],[89,34,71,36],[90,6,72,8],[90,10,72,12],[90,11,72,13,"logger"],[90,17,72,19],[90,20,72,22,"console"],[90,27,72,29],[90,28,72,30,"log"],[90,31,72,33],[91,6,73,8],[91,10,73,12],[91,11,73,13,"instanceID"],[91,21,73,23],[91,24,73,26,"GoTrueClient"],[91,36,73,38],[91,37,73,39,"nextInstanceID"],[91,51,73,53],[92,6,74,8,"GoTrueClient"],[92,18,74,20],[92,19,74,21,"nextInstanceID"],[92,33,74,35],[92,37,74,39],[92,38,74,40],[93,6,75,8],[93,10,75,12],[93,14,75,16],[93,15,75,17,"instanceID"],[93,25,75,27],[93,28,75,30],[93,29,75,31],[93,33,75,35],[93,34,75,36],[93,35,75,37],[93,37,75,39,"helpers_1"],[93,46,75,48],[93,47,75,49,"isBrowser"],[93,56,75,58],[93,58,75,60],[93,59,75,61],[93,61,75,63],[94,8,76,12,"console"],[94,15,76,19],[94,16,76,20,"warn"],[94,20,76,24],[94,21,76,25],[94,227,76,231],[94,228,76,232],[95,6,77,8],[96,6,78,8],[96,10,78,14,"settings"],[96,18,78,22],[96,21,78,25,"Object"],[96,27,78,31],[96,28,78,32,"assign"],[96,34,78,38],[96,35,78,39,"Object"],[96,41,78,45],[96,42,78,46,"assign"],[96,48,78,52],[96,49,78,53],[96,50,78,54],[96,51,78,55],[96,53,78,57,"DEFAULT_OPTIONS"],[96,68,78,72],[96,69,78,73],[96,71,78,75,"options"],[96,78,78,82],[96,79,78,83],[97,6,79,8],[97,10,79,12],[97,11,79,13,"logDebugMessages"],[97,27,79,29],[97,30,79,32],[97,31,79,33],[97,32,79,34,"settings"],[97,40,79,42],[97,41,79,43,"debug"],[97,46,79,48],[98,6,80,8],[98,10,80,12],[98,17,80,19,"settings"],[98,25,80,27],[98,26,80,28,"debug"],[98,31,80,33],[98,36,80,38],[98,46,80,48],[98,48,80,50],[99,8,81,12],[99,12,81,16],[99,13,81,17,"logger"],[99,19,81,23],[99,22,81,26,"settings"],[99,30,81,34],[99,31,81,35,"debug"],[99,36,81,40],[100,6,82,8],[101,6,83,8],[101,10,83,12],[101,11,83,13,"persistSession"],[101,25,83,27],[101,28,83,30,"settings"],[101,36,83,38],[101,37,83,39,"persistSession"],[101,51,83,53],[102,6,84,8],[102,10,84,12],[102,11,84,13,"storageKey"],[102,21,84,23],[102,24,84,26,"settings"],[102,32,84,34],[102,33,84,35,"storageKey"],[102,43,84,45],[103,6,85,8],[103,10,85,12],[103,11,85,13,"autoRefreshToken"],[103,27,85,29],[103,30,85,32,"settings"],[103,38,85,40],[103,39,85,41,"autoRefreshToken"],[103,55,85,57],[104,6,86,8],[104,10,86,12],[104,11,86,13,"admin"],[104,16,86,18],[104,19,86,21],[104,23,86,25,"GoTrueAdminApi_1"],[104,39,86,41],[104,40,86,42,"default"],[104,47,86,49],[104,48,86,50],[105,8,87,12,"url"],[105,11,87,15],[105,13,87,17,"settings"],[105,21,87,25],[105,22,87,26,"url"],[105,25,87,29],[106,8,88,12,"headers"],[106,15,88,19],[106,17,88,21,"settings"],[106,25,88,29],[106,26,88,30,"headers"],[106,33,88,37],[107,8,89,12,"fetch"],[107,13,89,17],[107,15,89,19,"settings"],[107,23,89,27],[107,24,89,28,"fetch"],[108,6,90,8],[108,7,90,9],[108,8,90,10],[109,6,91,8],[109,10,91,12],[109,11,91,13,"url"],[109,14,91,16],[109,17,91,19,"settings"],[109,25,91,27],[109,26,91,28,"url"],[109,29,91,31],[110,6,92,8],[110,10,92,12],[110,11,92,13,"headers"],[110,18,92,20],[110,21,92,23,"settings"],[110,29,92,31],[110,30,92,32,"headers"],[110,37,92,39],[111,6,93,8],[111,10,93,12],[111,11,93,13,"fetch"],[111,16,93,18],[111,19,93,21],[111,20,93,22],[111,21,93,23],[111,23,93,25,"helpers_1"],[111,32,93,34],[111,33,93,35,"resolveFetch"],[111,45,93,47],[111,47,93,49,"settings"],[111,55,93,57],[111,56,93,58,"fetch"],[111,61,93,63],[111,62,93,64],[112,6,94,8],[112,10,94,12],[112,11,94,13,"lock"],[112,15,94,17],[112,18,94,20,"settings"],[112,26,94,28],[112,27,94,29,"lock"],[112,31,94,33],[112,35,94,37,"lockNoOp"],[112,43,94,45],[113,6,95,8],[113,10,95,12],[113,11,95,13,"detectSessionInUrl"],[113,29,95,31],[113,32,95,34,"settings"],[113,40,95,42],[113,41,95,43,"detectSessionInUrl"],[113,59,95,61],[114,6,96,8],[114,10,96,12],[114,11,96,13,"flowType"],[114,19,96,21],[114,22,96,24,"settings"],[114,30,96,32],[114,31,96,33,"flowType"],[114,39,96,41],[115,6,97,8],[115,10,97,12],[115,11,97,13,"hasCustomAuthorizationHeader"],[115,39,97,41],[115,42,97,44,"settings"],[115,50,97,52],[115,51,97,53,"hasCustomAuthorizationHeader"],[115,79,97,81],[116,6,98,8],[116,10,98,12,"settings"],[116,18,98,20],[116,19,98,21,"lock"],[116,23,98,25],[116,25,98,27],[117,8,99,12],[117,12,99,16],[117,13,99,17,"lock"],[117,17,99,21],[117,20,99,24,"settings"],[117,28,99,32],[117,29,99,33,"lock"],[117,33,99,37],[118,6,100,8],[118,7,100,9],[118,13,101,13],[118,17,101,17],[118,18,101,18],[118,19,101,19],[118,21,101,21,"helpers_1"],[118,30,101,30],[118,31,101,31,"isBrowser"],[118,40,101,40],[118,42,101,42],[118,43,101,43],[118,48,101,48],[118,49,101,49,"_a"],[118,51,101,51],[118,54,101,54,"globalThis"],[118,64,101,64],[118,69,101,69],[118,73,101,73],[118,77,101,77,"globalThis"],[118,87,101,87],[118,92,101,92],[118,97,101,97],[118,98,101,98],[118,101,101,101],[118,106,101,106],[118,107,101,107],[118,110,101,110,"globalThis"],[118,120,101,120],[118,121,101,121,"navigator"],[118,130,101,130],[118,136,101,136],[118,140,101,140],[118,144,101,144,"_a"],[118,146,101,146],[118,151,101,151],[118,156,101,156],[118,157,101,157],[118,160,101,160],[118,165,101,165],[118,166,101,166],[118,169,101,169,"_a"],[118,171,101,171],[118,172,101,172,"locks"],[118,177,101,177],[118,178,101,178],[118,180,101,180],[119,8,102,12],[119,12,102,16],[119,13,102,17,"lock"],[119,17,102,21],[119,20,102,24,"locks_1"],[119,27,102,31],[119,28,102,32,"navigatorLock"],[119,41,102,45],[120,6,103,8],[120,7,103,9],[120,13,104,13],[121,8,105,12],[121,12,105,16],[121,13,105,17,"lock"],[121,17,105,21],[121,20,105,24,"lockNoOp"],[121,28,105,32],[122,6,106,8],[123,6,107,8],[123,10,107,12],[123,11,107,13],[123,15,107,17],[123,16,107,18,"jwks"],[123,20,107,22],[123,22,107,24],[124,8,108,12],[124,12,108,16],[124,13,108,17,"jwks"],[124,17,108,21],[124,20,108,24],[125,10,108,26,"keys"],[125,14,108,30],[125,16,108,32],[126,8,108,35],[126,9,108,36],[127,8,109,12],[127,12,109,16],[127,13,109,17,"jwks_cached_at"],[127,27,109,31],[127,30,109,34,"Number"],[127,36,109,40],[127,37,109,41,"MIN_SAFE_INTEGER"],[127,53,109,57],[128,6,110,8],[129,6,111,8],[129,10,111,12],[129,11,111,13,"mfa"],[129,14,111,16],[129,17,111,19],[130,8,112,12,"verify"],[130,14,112,18],[130,16,112,20],[130,20,112,24],[130,21,112,25,"_verify"],[130,28,112,32],[130,29,112,33,"bind"],[130,33,112,37],[130,34,112,38],[130,38,112,42],[130,39,112,43],[131,8,113,12,"enroll"],[131,14,113,18],[131,16,113,20],[131,20,113,24],[131,21,113,25,"_enroll"],[131,28,113,32],[131,29,113,33,"bind"],[131,33,113,37],[131,34,113,38],[131,38,113,42],[131,39,113,43],[132,8,114,12,"unenroll"],[132,16,114,20],[132,18,114,22],[132,22,114,26],[132,23,114,27,"_unenroll"],[132,32,114,36],[132,33,114,37,"bind"],[132,37,114,41],[132,38,114,42],[132,42,114,46],[132,43,114,47],[133,8,115,12,"challenge"],[133,17,115,21],[133,19,115,23],[133,23,115,27],[133,24,115,28,"_challenge"],[133,34,115,38],[133,35,115,39,"bind"],[133,39,115,43],[133,40,115,44],[133,44,115,48],[133,45,115,49],[134,8,116,12,"listFactors"],[134,19,116,23],[134,21,116,25],[134,25,116,29],[134,26,116,30,"_listFactors"],[134,38,116,42],[134,39,116,43,"bind"],[134,43,116,47],[134,44,116,48],[134,48,116,52],[134,49,116,53],[135,8,117,12,"challengeAndVerify"],[135,26,117,30],[135,28,117,32],[135,32,117,36],[135,33,117,37,"_challengeAndVerify"],[135,52,117,56],[135,53,117,57,"bind"],[135,57,117,61],[135,58,117,62],[135,62,117,66],[135,63,117,67],[136,8,118,12,"getAuthenticatorAssuranceLevel"],[136,38,118,42],[136,40,118,44],[136,44,118,48],[136,45,118,49,"_getAuthenticatorAssuranceLevel"],[136,76,118,80],[136,77,118,81,"bind"],[136,81,118,85],[136,82,118,86],[136,86,118,90],[137,6,119,8],[137,7,119,9],[138,6,120,8],[138,10,120,12],[138,14,120,16],[138,15,120,17,"persistSession"],[138,29,120,31],[138,31,120,33],[139,8,121,12],[139,12,121,16,"settings"],[139,20,121,24],[139,21,121,25,"storage"],[139,28,121,32],[139,30,121,34],[140,10,122,16],[140,14,122,20],[140,15,122,21,"storage"],[140,22,122,28],[140,25,122,31,"settings"],[140,33,122,39],[140,34,122,40,"storage"],[140,41,122,47],[141,8,123,12],[141,9,123,13],[141,15,124,17],[142,10,125,16],[142,14,125,20],[142,15,125,21],[142,16,125,22],[142,18,125,24,"helpers_1"],[142,27,125,33],[142,28,125,34,"supportsLocalStorage"],[142,48,125,54],[142,50,125,56],[142,51,125,57],[142,53,125,59],[143,12,126,20],[143,16,126,24],[143,17,126,25,"storage"],[143,24,126,32],[143,27,126,35,"globalThis"],[143,37,126,45],[143,38,126,46,"localStorage"],[143,50,126,58],[144,10,127,16],[144,11,127,17],[144,17,128,21],[145,12,129,20],[145,16,129,24],[145,17,129,25,"memoryStorage"],[145,30,129,38],[145,33,129,41],[145,34,129,42],[145,35,129,43],[146,12,130,20],[146,16,130,24],[146,17,130,25,"storage"],[146,24,130,32],[146,27,130,35],[146,28,130,36],[146,29,130,37],[146,31,130,39,"local_storage_1"],[146,46,130,54],[146,47,130,55,"memoryLocalStorageAdapter"],[146,72,130,80],[146,74,130,82],[146,78,130,86],[146,79,130,87,"memoryStorage"],[146,92,130,100],[146,93,130,101],[147,10,131,16],[148,8,132,12],[149,8,133,12],[149,12,133,16,"settings"],[149,20,133,24],[149,21,133,25,"userStorage"],[149,32,133,36],[149,34,133,38],[150,10,134,16],[150,14,134,20],[150,15,134,21,"userStorage"],[150,26,134,32],[150,29,134,35,"settings"],[150,37,134,43],[150,38,134,44,"userStorage"],[150,49,134,55],[151,8,135,12],[152,6,136,8],[152,7,136,9],[152,13,137,13],[153,8,138,12],[153,12,138,16],[153,13,138,17,"memoryStorage"],[153,26,138,30],[153,29,138,33],[153,30,138,34],[153,31,138,35],[154,8,139,12],[154,12,139,16],[154,13,139,17,"storage"],[154,20,139,24],[154,23,139,27],[154,24,139,28],[154,25,139,29],[154,27,139,31,"local_storage_1"],[154,42,139,46],[154,43,139,47,"memoryLocalStorageAdapter"],[154,68,139,72],[154,70,139,74],[154,74,139,78],[154,75,139,79,"memoryStorage"],[154,88,139,92],[154,89,139,93],[155,6,140,8],[156,6,141,8],[156,10,141,12],[156,11,141,13],[156,12,141,14],[156,14,141,16,"helpers_1"],[156,23,141,25],[156,24,141,26,"isBrowser"],[156,33,141,35],[156,35,141,37],[156,36,141,38],[156,40,141,42,"globalThis"],[156,50,141,52],[156,51,141,53,"BroadcastChannel"],[156,67,141,69],[156,71,141,73],[156,75,141,77],[156,76,141,78,"persistSession"],[156,90,141,92],[156,94,141,96],[156,98,141,100],[156,99,141,101,"storageKey"],[156,109,141,111],[156,111,141,113],[157,8,142,12],[157,12,142,16],[158,10,143,16],[158,14,143,20],[158,15,143,21,"broadcastChannel"],[158,31,143,37],[158,34,143,40],[158,38,143,44,"globalThis"],[158,48,143,54],[158,49,143,55,"BroadcastChannel"],[158,65,143,71],[158,66,143,72],[158,70,143,76],[158,71,143,77,"storageKey"],[158,81,143,87],[158,82,143,88],[159,8,144,12],[159,9,144,13],[159,10,145,12],[159,17,145,19,"e"],[159,18,145,20],[159,20,145,22],[160,10,146,16,"console"],[160,17,146,23],[160,18,146,24,"error"],[160,23,146,29],[160,24,146,30],[160,112,146,118],[160,114,146,120,"e"],[160,115,146,121],[160,116,146,122],[161,8,147,12],[162,8,148,12],[162,9,148,13,"_b"],[162,11,148,15],[162,14,148,18],[162,18,148,22],[162,19,148,23,"broadcastChannel"],[162,35,148,39],[162,41,148,45],[162,45,148,49],[162,49,148,53,"_b"],[162,51,148,55],[162,56,148,60],[162,61,148,65],[162,62,148,66],[162,65,148,69],[162,70,148,74],[162,71,148,75],[162,74,148,78,"_b"],[162,76,148,80],[162,77,148,81,"addEventListener"],[162,93,148,97],[162,94,148,98],[162,103,148,107],[163,10,148,107],[163,14,148,107,"_ref"],[163,18,148,107],[163,21,148,107,"_asyncToGenerator"],[163,38,148,107],[163,39,148,109],[163,50,148,116,"event"],[163,55,148,121],[163,57,148,126],[164,12,149,16,"_this"],[164,17,149,20],[164,18,149,21,"_debug"],[164,24,149,27],[164,25,149,28],[164,83,149,86],[164,85,149,88,"event"],[164,90,149,93],[164,91,149,94],[165,12,150,16],[165,18,150,22,"_this"],[165,23,150,26],[165,24,150,27,"_notifyAllSubscribers"],[165,45,150,48],[165,46,150,49,"event"],[165,51,150,54],[165,52,150,55,"data"],[165,56,150,59],[165,57,150,60,"event"],[165,62,150,65],[165,64,150,67,"event"],[165,69,150,72],[165,70,150,73,"data"],[165,74,150,77],[165,75,150,78,"session"],[165,82,150,85],[165,84,150,87],[165,89,150,92],[165,90,150,93],[165,91,150,94],[165,92,150,95],[166,10,151,12],[166,11,151,13],[167,10,151,13],[167,27,151,13,"_x4"],[167,30,151,13],[168,12,151,13],[168,19,151,13,"_ref"],[168,23,151,13],[168,24,151,13,"apply"],[168,29,151,13],[168,36,151,13,"arguments"],[168,45,151,13],[169,10,151,13],[170,8,151,13],[170,12,151,14],[171,6,152,8],[172,6,153,8],[172,10,153,12],[172,11,153,13,"initialize"],[172,21,153,23],[172,22,153,24],[172,23,153,25],[173,4,154,4],[174,4,155,4],[175,0,156,0],[176,0,157,0],[177,4,155,4],[177,11,155,4,"_createClass"],[177,23,155,4],[177,24,155,4,"GoTrueClient"],[177,36,155,4],[178,6,155,4,"key"],[178,9,155,4],[179,6,155,4,"get"],[179,9,155,4],[179,11,158,4],[179,20,158,4,"get"],[179,21,158,4],[179,23,158,15],[180,8,159,8],[180,12,159,12,"_a"],[180,14,159,14],[180,16,159,16,"_b"],[180,18,159,18],[181,8,160,8],[181,15,160,15],[181,16,160,16,"_b"],[181,18,160,18],[181,21,160,21],[181,22,160,22,"_a"],[181,24,160,24],[181,27,160,27,"GLOBAL_JWKS"],[181,38,160,38],[181,39,160,39],[181,43,160,43],[181,44,160,44,"storageKey"],[181,54,160,54],[181,55,160,55],[181,61,160,61],[181,65,160,65],[181,69,160,69,"_a"],[181,71,160,71],[181,76,160,76],[181,81,160,81],[181,82,160,82],[181,85,160,85],[181,90,160,90],[181,91,160,91],[181,94,160,94,"_a"],[181,96,160,96],[181,97,160,97,"jwks"],[181,101,160,101],[181,107,160,107],[181,111,160,111],[181,115,160,115,"_b"],[181,117,160,117],[181,122,160,122],[181,127,160,127],[181,128,160,128],[181,131,160,131,"_b"],[181,133,160,133],[181,136,160,136],[182,10,160,138,"keys"],[182,14,160,142],[182,16,160,144],[183,8,160,147],[183,9,160,148],[184,6,161,4],[184,7,161,5],[185,6,161,5,"set"],[185,9,161,5],[185,11,162,4],[185,20,162,4,"set"],[185,21,162,13,"value"],[185,26,162,18],[185,28,162,20],[186,8,163,8,"GLOBAL_JWKS"],[186,19,163,19],[186,20,163,20],[186,24,163,24],[186,25,163,25,"storageKey"],[186,35,163,35],[186,36,163,36],[186,39,163,39,"Object"],[186,45,163,45],[186,46,163,46,"assign"],[186,52,163,52],[186,53,163,53,"Object"],[186,59,163,59],[186,60,163,60,"assign"],[186,66,163,66],[186,67,163,67],[186,68,163,68],[186,69,163,69],[186,71,163,71,"GLOBAL_JWKS"],[186,82,163,82],[186,83,163,83],[186,87,163,87],[186,88,163,88,"storageKey"],[186,98,163,98],[186,99,163,99],[186,100,163,100],[186,102,163,102],[187,10,163,104,"jwks"],[187,14,163,108],[187,16,163,110,"value"],[188,8,163,116],[188,9,163,117],[188,10,163,118],[189,6,164,4],[190,4,164,5],[191,6,164,5,"key"],[191,9,164,5],[192,6,164,5,"get"],[192,9,164,5],[192,11,165,4],[192,20,165,4,"get"],[192,21,165,4],[192,23,165,25],[193,8,166,8],[193,12,166,12,"_a"],[193,14,166,14],[193,16,166,16,"_b"],[193,18,166,18],[194,8,167,8],[194,15,167,15],[194,16,167,16,"_b"],[194,18,167,18],[194,21,167,21],[194,22,167,22,"_a"],[194,24,167,24],[194,27,167,27,"GLOBAL_JWKS"],[194,38,167,38],[194,39,167,39],[194,43,167,43],[194,44,167,44,"storageKey"],[194,54,167,54],[194,55,167,55],[194,61,167,61],[194,65,167,65],[194,69,167,69,"_a"],[194,71,167,71],[194,76,167,76],[194,81,167,81],[194,82,167,82],[194,85,167,85],[194,90,167,90],[194,91,167,91],[194,94,167,94,"_a"],[194,96,167,96],[194,97,167,97,"cachedAt"],[194,105,167,105],[194,111,167,111],[194,115,167,115],[194,119,167,119,"_b"],[194,121,167,121],[194,126,167,126],[194,131,167,131],[194,132,167,132],[194,135,167,135,"_b"],[194,137,167,137],[194,140,167,140,"Number"],[194,146,167,146],[194,147,167,147,"MIN_SAFE_INTEGER"],[194,163,167,163],[195,6,168,4],[195,7,168,5],[196,6,168,5,"set"],[196,9,168,5],[196,11,169,4],[196,20,169,4,"set"],[196,21,169,23,"value"],[196,26,169,28],[196,28,169,30],[197,8,170,8,"GLOBAL_JWKS"],[197,19,170,19],[197,20,170,20],[197,24,170,24],[197,25,170,25,"storageKey"],[197,35,170,35],[197,36,170,36],[197,39,170,39,"Object"],[197,45,170,45],[197,46,170,46,"assign"],[197,52,170,52],[197,53,170,53,"Object"],[197,59,170,59],[197,60,170,60,"assign"],[197,66,170,66],[197,67,170,67],[197,68,170,68],[197,69,170,69],[197,71,170,71,"GLOBAL_JWKS"],[197,82,170,82],[197,83,170,83],[197,87,170,87],[197,88,170,88,"storageKey"],[197,98,170,98],[197,99,170,99],[197,100,170,100],[197,102,170,102],[198,10,170,104,"cachedAt"],[198,18,170,112],[198,20,170,114,"value"],[199,8,170,120],[199,9,170,121],[199,10,170,122],[200,6,171,4],[201,4,171,5],[202,6,171,5,"key"],[202,9,171,5],[203,6,171,5,"value"],[203,11,171,5],[203,13,172,4],[203,22,172,4,"_debug"],[203,28,172,10,"_debug"],[203,29,172,10],[203,31,172,20],[204,8,173,8],[204,12,173,12],[204,16,173,16],[204,17,173,17,"logDebugMessages"],[204,33,173,33],[204,35,173,35],[205,10,173,35],[205,19,173,35,"_len"],[205,23,173,35],[205,26,173,35,"arguments"],[205,35,173,35],[205,36,173,35,"length"],[205,42,173,35],[205,44,172,14,"args"],[205,48,172,18],[205,55,172,18,"Array"],[205,60,172,18],[205,61,172,18,"_len"],[205,65,172,18],[205,68,172,18,"_key"],[205,72,172,18],[205,78,172,18,"_key"],[205,82,172,18],[205,85,172,18,"_len"],[205,89,172,18],[205,91,172,18,"_key"],[205,95,172,18],[206,12,172,14,"args"],[206,16,172,18],[206,17,172,18,"_key"],[206,21,172,18],[206,25,172,18,"arguments"],[206,34,172,18],[206,35,172,18,"_key"],[206,39,172,18],[207,10,172,18],[208,10,174,12],[208,14,174,16],[208,15,174,17,"logger"],[208,21,174,23],[208,22,174,24],[208,38,174,40],[208,42,174,44],[208,43,174,45,"instanceID"],[208,53,174,55],[208,58,174,60,"version_1"],[208,67,174,69],[208,68,174,70,"version"],[208,75,174,77],[208,80,174,82],[208,84,174,86,"Date"],[208,88,174,90],[208,89,174,91],[208,90,174,92],[208,91,174,93,"toISOString"],[208,102,174,104],[208,103,174,105],[208,104,174,106],[208,106,174,108],[208,108,174,110],[208,111,174,113,"args"],[208,115,174,117],[208,116,174,118],[209,8,175,8],[210,8,176,8],[210,15,176,15],[210,19,176,19],[211,6,177,4],[212,6,178,4],[213,0,179,0],[214,0,180,0],[215,0,181,0],[216,0,182,0],[217,4,178,4],[218,6,178,4,"key"],[218,9,178,4],[219,6,178,4,"value"],[219,11,178,4],[220,8,178,4],[220,12,178,4,"_initialize2"],[220,24,178,4],[220,27,178,4,"_asyncToGenerator"],[220,44,178,4],[220,45,183,4],[220,58,183,23],[221,10,183,23],[221,14,183,23,"_this2"],[221,20,183,23],[222,10,184,8],[222,14,184,12],[222,18,184,16],[222,19,184,17,"initializePromise"],[222,36,184,34],[222,38,184,36],[223,12,185,12],[223,25,185,25],[223,29,185,29],[223,30,185,30,"initializePromise"],[223,47,185,47],[224,10,186,8],[225,10,187,8],[225,14,187,12],[225,15,187,13,"initializePromise"],[225,32,187,30],[225,35,187,33,"_asyncToGenerator"],[225,52,187,33],[225,53,187,34],[225,66,187,46],[226,12,188,12],[226,25,188,25,"_this2"],[226,31,188,29],[226,32,188,30,"_acquireLock"],[226,44,188,42],[226,45,188,43],[226,46,188,44],[226,47,188,45],[226,62,188,45,"_asyncToGenerator"],[226,79,188,45],[226,80,188,47],[226,93,188,59],[227,14,189,16],[227,27,189,29,"_this2"],[227,33,189,33],[227,34,189,34,"_initialize"],[227,45,189,45],[227,46,189,46],[227,47,189,47],[228,12,190,12],[228,13,190,13],[228,15,190,14],[229,10,191,8],[229,11,191,9],[229,13,191,11],[229,14,191,12],[230,10,192,8],[230,23,192,21],[230,27,192,25],[230,28,192,26,"initializePromise"],[230,45,192,43],[231,8,193,4],[231,9,193,5],[232,8,193,5],[232,17,183,10,"initialize"],[232,27,183,20,"initialize"],[232,28,183,20],[233,10,183,20],[233,17,183,20,"_initialize2"],[233,29,183,20],[233,30,183,20,"apply"],[233,35,183,20],[233,42,183,20,"arguments"],[233,51,183,20],[234,8,183,20],[235,8,183,20],[235,15,183,10,"initialize"],[235,25,183,20],[236,6,183,20],[237,6,194,4],[238,0,195,0],[239,0,196,0],[240,0,197,0],[241,0,198,0],[242,0,199,0],[243,6,194,4],[244,4,194,4],[245,6,194,4,"key"],[245,9,194,4],[246,6,194,4,"value"],[246,11,194,4],[247,8,194,4],[247,12,194,4,"_initialize3"],[247,24,194,4],[247,27,194,4,"_asyncToGenerator"],[247,44,194,4],[247,45,200,4],[247,58,200,24],[248,10,200,24],[248,14,200,24,"_this3"],[248,20,200,24],[249,10,201,8],[249,14,201,12,"_a"],[249,16,201,14],[250,10,202,8],[250,14,202,12],[251,12,203,12],[251,16,203,18,"params"],[251,22,203,24],[251,25,203,27],[251,26,203,28],[251,27,203,29],[251,29,203,31,"helpers_1"],[251,38,203,40],[251,39,203,41,"parseParametersFromURL"],[251,61,203,63],[251,63,203,65,"window"],[251,69,203,71],[251,70,203,72,"location"],[251,78,203,80],[251,79,203,81,"href"],[251,83,203,85],[251,84,203,86],[252,12,204,12],[252,16,204,16,"callbackUrlType"],[252,31,204,31],[252,34,204,34],[252,40,204,40],[253,12,205,12],[253,16,205,16],[253,20,205,20],[253,21,205,21,"_isImplicitGrantCallback"],[253,45,205,45],[253,46,205,46,"params"],[253,52,205,52],[253,53,205,53],[253,55,205,55],[254,14,206,16,"callbackUrlType"],[254,29,206,31],[254,32,206,34],[254,42,206,44],[255,12,207,12],[255,13,207,13],[255,19,208,17],[255,29,208,27],[255,33,208,31],[255,34,208,32,"_isPKCECallback"],[255,49,208,47],[255,50,208,48,"params"],[255,56,208,54],[255,57,208,55],[255,59,208,57],[256,14,209,16,"callbackUrlType"],[256,29,209,31],[256,32,209,34],[256,38,209,40],[257,12,210,12],[258,12,211,12],[259,0,212,0],[260,0,213,0],[261,0,214,0],[262,0,215,0],[263,0,216,0],[264,12,217,12],[264,16,217,16],[264,17,217,17],[264,18,217,18],[264,20,217,20,"helpers_1"],[264,29,217,29],[264,30,217,30,"isBrowser"],[264,39,217,39],[264,41,217,41],[264,42,217,42],[264,46,217,46],[264,50,217,50],[264,51,217,51,"detectSessionInUrl"],[264,69,217,69],[264,73,217,73,"callbackUrlType"],[264,88,217,88],[264,93,217,93],[264,99,217,99],[264,101,217,101],[265,14,218,16],[265,18,218,16,"_yield$this$_getSessi"],[265,39,218,16],[265,48,218,46],[265,52,218,50],[265,53,218,51,"_getSessionFromURL"],[265,71,218,69],[265,72,218,70,"params"],[265,78,218,76],[265,80,218,78,"callbackUrlType"],[265,95,218,93],[265,96,218,94],[266,16,218,24,"data"],[266,20,218,28],[266,23,218,28,"_yield$this$_getSessi"],[266,44,218,28],[266,45,218,24,"data"],[266,49,218,28],[267,16,218,30,"error"],[267,21,218,35],[267,24,218,35,"_yield$this$_getSessi"],[267,45,218,35],[267,46,218,30,"error"],[267,51,218,35],[268,14,219,16],[268,18,219,20,"error"],[268,23,219,25],[268,25,219,27],[269,16,220,20],[269,20,220,24],[269,21,220,25,"_debug"],[269,27,220,31],[269,28,220,32],[269,44,220,48],[269,46,220,50],[269,80,220,84],[269,82,220,86,"error"],[269,87,220,91],[269,88,220,92],[270,16,221,20],[270,20,221,24],[270,21,221,25],[270,22,221,26],[270,24,221,28,"errors_1"],[270,32,221,36],[270,33,221,37,"isAuthImplicitGrantRedirectError"],[270,65,221,69],[270,67,221,71,"error"],[270,72,221,76],[270,73,221,77],[270,75,221,79],[271,18,222,24],[271,22,222,30,"errorCode"],[271,31,222,39],[271,34,222,42],[271,35,222,43,"_a"],[271,37,222,45],[271,40,222,48,"error"],[271,45,222,53],[271,46,222,54,"details"],[271,53,222,61],[271,59,222,67],[271,63,222,71],[271,67,222,75,"_a"],[271,69,222,77],[271,74,222,82],[271,79,222,87],[271,80,222,88],[271,83,222,91],[271,88,222,96],[271,89,222,97],[271,92,222,100,"_a"],[271,94,222,102],[271,95,222,103,"code"],[271,99,222,107],[272,18,223,24],[272,22,223,28,"errorCode"],[272,31,223,37],[272,36,223,42],[272,61,223,67],[272,65,224,28,"errorCode"],[272,74,224,37],[272,79,224,42],[272,99,224,62],[272,103,225,28,"errorCode"],[272,112,225,37],[272,117,225,42],[272,148,225,73],[272,150,225,75],[273,20,226,28],[273,27,226,35],[274,22,226,37,"error"],[275,20,226,43],[275,21,226,44],[276,18,227,24],[277,16,228,20],[278,16,229,20],[279,16,230,20],[280,16,231,20],[280,22,231,26],[280,26,231,30],[280,27,231,31,"_removeSession"],[280,41,231,45],[280,42,231,46],[280,43,231,47],[281,16,232,20],[281,23,232,27],[282,18,232,29,"error"],[283,16,232,35],[283,17,232,36],[284,14,233,16],[285,14,234,16],[285,18,234,24,"session"],[285,25,234,31],[285,28,234,50,"data"],[285,32,234,54],[285,33,234,24,"session"],[285,40,234,31],[286,16,234,33,"redirectType"],[286,28,234,45],[286,31,234,50,"data"],[286,35,234,54],[286,36,234,33,"redirectType"],[286,48,234,45],[287,14,235,16],[287,18,235,20],[287,19,235,21,"_debug"],[287,25,235,27],[287,26,235,28],[287,42,235,44],[287,44,235,46],[287,69,235,71],[287,71,235,73,"session"],[287,78,235,80],[287,80,235,82],[287,95,235,97],[287,97,235,99,"redirectType"],[287,109,235,111],[287,110,235,112],[288,14,236,16],[288,20,236,22],[288,24,236,26],[288,25,236,27,"_saveSession"],[288,37,236,39],[288,38,236,40,"session"],[288,45,236,47],[288,46,236,48],[289,14,237,16,"setTimeout"],[289,24,237,26],[289,38,237,26,"_asyncToGenerator"],[289,55,237,26],[289,56,237,27],[289,69,237,39],[290,16,238,20],[290,20,238,24,"redirectType"],[290,32,238,36],[290,37,238,41],[290,47,238,51],[290,49,238,53],[291,18,239,24],[291,24,239,30,"_this3"],[291,30,239,34],[291,31,239,35,"_notifyAllSubscribers"],[291,52,239,56],[291,53,239,57],[291,72,239,76],[291,74,239,78,"session"],[291,81,239,85],[291,82,239,86],[292,16,240,20],[292,17,240,21],[292,23,241,25],[293,18,242,24],[293,24,242,30,"_this3"],[293,30,242,34],[293,31,242,35,"_notifyAllSubscribers"],[293,52,242,56],[293,53,242,57],[293,64,242,68],[293,66,242,70,"session"],[293,73,242,77],[293,74,242,78],[294,16,243,20],[295,14,244,16],[295,15,244,17],[295,18,244,19],[295,19,244,20],[295,20,244,21],[296,14,245,16],[296,21,245,23],[297,16,245,25,"error"],[297,21,245,30],[297,23,245,32],[298,14,245,37],[298,15,245,38],[299,12,246,12],[300,12,247,12],[301,12,248,12],[301,18,248,18],[301,22,248,22],[301,23,248,23,"_recoverAndRefresh"],[301,41,248,41],[301,42,248,42],[301,43,248,43],[302,12,249,12],[302,19,249,19],[303,14,249,21,"error"],[303,19,249,26],[303,21,249,28],[304,12,249,33],[304,13,249,34],[305,10,250,8],[305,11,250,9],[305,12,251,8],[305,19,251,15,"error"],[305,24,251,20],[305,26,251,22],[306,12,252,12],[306,16,252,16],[306,17,252,17],[306,18,252,18],[306,20,252,20,"errors_1"],[306,28,252,28],[306,29,252,29,"isAuthError"],[306,40,252,40],[306,42,252,42,"error"],[306,47,252,47],[306,48,252,48],[306,50,252,50],[307,14,253,16],[307,21,253,23],[308,16,253,25,"error"],[309,14,253,31],[309,15,253,32],[310,12,254,12],[311,12,255,12],[311,19,255,19],[312,14,256,16,"error"],[312,19,256,21],[312,21,256,23],[312,25,256,27,"errors_1"],[312,33,256,35],[312,34,256,36,"AuthUnknownError"],[312,50,256,52],[312,51,256,53],[312,91,256,93],[312,93,256,95,"error"],[312,98,256,100],[313,12,257,12],[313,13,257,13],[314,10,258,8],[314,11,258,9],[314,20,259,16],[315,12,260,12],[315,18,260,18],[315,22,260,22],[315,23,260,23,"_handleVisibilityChange"],[315,46,260,46],[315,47,260,47],[315,48,260,48],[316,12,261,12],[316,16,261,16],[316,17,261,17,"_debug"],[316,23,261,23],[316,24,261,24],[316,40,261,40],[316,42,261,42],[316,47,261,47],[316,48,261,48],[317,10,262,8],[318,8,263,4],[318,9,263,5],[319,8,263,5],[319,17,200,10,"_initialize"],[319,28,200,21,"_initialize"],[319,29,200,21],[320,10,200,21],[320,17,200,21,"_initialize3"],[320,29,200,21],[320,30,200,21,"apply"],[320,35,200,21],[320,42,200,21,"arguments"],[320,51,200,21],[321,8,200,21],[322,8,200,21],[322,15,200,10,"_initialize"],[322,26,200,21],[323,6,200,21],[324,6,264,4],[325,0,265,0],[326,0,266,0],[327,0,267,0],[328,0,268,0],[329,6,264,4],[330,4,264,4],[331,6,264,4,"key"],[331,9,264,4],[332,6,264,4,"value"],[332,11,264,4],[333,8,264,4],[333,12,264,4,"_signInAnonymously"],[333,30,264,4],[333,33,264,4,"_asyncToGenerator"],[333,50,264,4],[333,51,269,4],[333,62,269,28,"credentials"],[333,73,269,39],[333,75,269,41],[334,10,270,8],[334,14,270,12,"_a"],[334,16,270,14],[334,18,270,16,"_b"],[334,20,270,18],[334,22,270,20,"_c"],[334,24,270,22],[335,10,271,8],[335,14,271,12],[336,12,272,12],[336,16,272,18,"res"],[336,19,272,21],[336,28,272,30],[336,29,272,31],[336,30,272,32],[336,32,272,34,"fetch_1"],[336,39,272,41],[336,40,272,42,"_request"],[336,48,272,50],[336,50,272,52],[336,54,272,56],[336,55,272,57,"fetch"],[336,60,272,62],[336,62,272,64],[336,68,272,70],[336,70,272,72],[336,73,272,75],[336,77,272,79],[336,78,272,80,"url"],[336,81,272,83],[336,90,272,92],[336,92,272,94],[337,14,273,16,"headers"],[337,21,273,23],[337,23,273,25],[337,27,273,29],[337,28,273,30,"headers"],[337,35,273,37],[338,14,274,16,"body"],[338,18,274,20],[338,20,274,22],[339,16,275,20,"data"],[339,20,275,24],[339,22,275,26],[339,23,275,27,"_b"],[339,25,275,29],[339,28,275,32],[339,29,275,33,"_a"],[339,31,275,35],[339,34,275,38,"credentials"],[339,45,275,49],[339,50,275,54],[339,54,275,58],[339,58,275,62,"credentials"],[339,69,275,73],[339,74,275,78],[339,79,275,83],[339,80,275,84],[339,83,275,87],[339,88,275,92],[339,89,275,93],[339,92,275,96,"credentials"],[339,103,275,107],[339,104,275,108,"options"],[339,111,275,115],[339,117,275,121],[339,121,275,125],[339,125,275,129,"_a"],[339,127,275,131],[339,132,275,136],[339,137,275,141],[339,138,275,142],[339,141,275,145],[339,146,275,150],[339,147,275,151],[339,150,275,154,"_a"],[339,152,275,156],[339,153,275,157,"data"],[339,157,275,161],[339,163,275,167],[339,167,275,171],[339,171,275,175,"_b"],[339,173,275,177],[339,178,275,182],[339,183,275,187],[339,184,275,188],[339,187,275,191,"_b"],[339,189,275,193],[339,192,275,196],[339,193,275,197],[339,194,275,198],[340,16,276,20,"gotrue_meta_security"],[340,36,276,40],[340,38,276,42],[341,18,276,44,"captcha_token"],[341,31,276,57],[341,33,276,59],[341,34,276,60,"_c"],[341,36,276,62],[341,39,276,65,"credentials"],[341,50,276,76],[341,55,276,81],[341,59,276,85],[341,63,276,89,"credentials"],[341,74,276,100],[341,79,276,105],[341,84,276,110],[341,85,276,111],[341,88,276,114],[341,93,276,119],[341,94,276,120],[341,97,276,123,"credentials"],[341,108,276,134],[341,109,276,135,"options"],[341,116,276,142],[341,122,276,148],[341,126,276,152],[341,130,276,156,"_c"],[341,132,276,158],[341,137,276,163],[341,142,276,168],[341,143,276,169],[341,146,276,172],[341,151,276,177],[341,152,276,178],[341,155,276,181,"_c"],[341,157,276,183],[341,158,276,184,"captchaToken"],[342,16,276,197],[343,14,277,16],[343,15,277,17],[344,14,278,16,"xform"],[344,19,278,21],[344,21,278,23,"fetch_1"],[344,28,278,30],[344,29,278,31,"_sessionResponse"],[345,12,279,12],[345,13,279,13],[345,14,279,14],[346,12,280,12],[346,16,280,20,"data"],[346,20,280,24],[346,23,280,36,"res"],[346,26,280,39],[346,27,280,20,"data"],[346,31,280,24],[347,14,280,26,"error"],[347,19,280,31],[347,22,280,36,"res"],[347,25,280,39],[347,26,280,26,"error"],[347,31,280,31],[348,12,281,12],[348,16,281,16,"error"],[348,21,281,21],[348,25,281,25],[348,26,281,26,"data"],[348,30,281,30],[348,32,281,32],[349,14,282,16],[349,21,282,23],[350,16,282,25,"data"],[350,20,282,29],[350,22,282,31],[351,18,282,33,"user"],[351,22,282,37],[351,24,282,39],[351,28,282,43],[352,18,282,45,"session"],[352,25,282,52],[352,27,282,54],[353,16,282,59],[353,17,282,60],[354,16,282,62,"error"],[354,21,282,67],[354,23,282,69,"error"],[355,14,282,75],[355,15,282,76],[356,12,283,12],[357,12,284,12],[357,16,284,18,"session"],[357,23,284,25],[357,26,284,28,"data"],[357,30,284,32],[357,31,284,33,"session"],[357,38,284,40],[358,12,285,12],[358,16,285,18,"user"],[358,20,285,22],[358,23,285,25,"data"],[358,27,285,29],[358,28,285,30,"user"],[358,32,285,34],[359,12,286,12],[359,16,286,16,"data"],[359,20,286,20],[359,21,286,21,"session"],[359,28,286,28],[359,30,286,30],[360,14,287,16],[360,20,287,22],[360,24,287,26],[360,25,287,27,"_saveSession"],[360,37,287,39],[360,38,287,40,"data"],[360,42,287,44],[360,43,287,45,"session"],[360,50,287,52],[360,51,287,53],[361,14,288,16],[361,20,288,22],[361,24,288,26],[361,25,288,27,"_notifyAllSubscribers"],[361,46,288,48],[361,47,288,49],[361,58,288,60],[361,60,288,62,"session"],[361,67,288,69],[361,68,288,70],[362,12,289,12],[363,12,290,12],[363,19,290,19],[364,14,290,21,"data"],[364,18,290,25],[364,20,290,27],[365,16,290,29,"user"],[365,20,290,33],[366,16,290,35,"session"],[367,14,290,43],[367,15,290,44],[368,14,290,46,"error"],[368,19,290,51],[368,21,290,53],[369,12,290,58],[369,13,290,59],[370,10,291,8],[370,11,291,9],[370,12,292,8],[370,19,292,15,"error"],[370,24,292,20],[370,26,292,22],[371,12,293,12],[371,16,293,16],[371,17,293,17],[371,18,293,18],[371,20,293,20,"errors_1"],[371,28,293,28],[371,29,293,29,"isAuthError"],[371,40,293,40],[371,42,293,42,"error"],[371,47,293,47],[371,48,293,48],[371,50,293,50],[372,14,294,16],[372,21,294,23],[373,16,294,25,"data"],[373,20,294,29],[373,22,294,31],[374,18,294,33,"user"],[374,22,294,37],[374,24,294,39],[374,28,294,43],[375,18,294,45,"session"],[375,25,294,52],[375,27,294,54],[376,16,294,59],[376,17,294,60],[377,16,294,62,"error"],[378,14,294,68],[378,15,294,69],[379,12,295,12],[380,12,296,12],[380,18,296,18,"error"],[380,23,296,23],[381,10,297,8],[382,8,298,4],[382,9,298,5],[383,8,298,5],[383,17,269,10,"signInAnonymously"],[383,34,269,27,"signInAnonymously"],[383,35,269,27,"_x5"],[383,38,269,27],[384,10,269,27],[384,17,269,27,"_signInAnonymously"],[384,35,269,27],[384,36,269,27,"apply"],[384,41,269,27],[384,48,269,27,"arguments"],[384,57,269,27],[385,8,269,27],[386,8,269,27],[386,15,269,10,"signInAnonymously"],[386,32,269,27],[387,6,269,27],[388,6,299,4],[389,0,300,0],[390,0,301,0],[391,0,302,0],[392,0,303,0],[393,0,304,0],[394,0,305,0],[395,0,306,0],[396,0,307,0],[397,0,308,0],[398,6,299,4],[399,4,299,4],[400,6,299,4,"key"],[400,9,299,4],[401,6,299,4,"value"],[401,11,299,4],[402,8,299,4],[402,12,299,4,"_signUp"],[402,19,299,4],[402,22,299,4,"_asyncToGenerator"],[402,39,299,4],[402,40,309,4],[402,51,309,17,"credentials"],[402,62,309,28],[402,64,309,30],[403,10,310,8],[403,14,310,12,"_a"],[403,16,310,14],[403,18,310,16,"_b"],[403,20,310,18],[403,22,310,20,"_c"],[403,24,310,22],[404,10,311,8],[404,14,311,12],[405,12,312,12],[405,16,312,16,"res"],[405,19,312,19],[406,12,313,12],[406,16,313,16],[406,23,313,23],[406,27,313,27,"credentials"],[406,38,313,38],[406,40,313,40],[407,14,314,16],[407,18,314,24,"email"],[407,23,314,29],[407,26,314,53,"credentials"],[407,37,314,64],[407,38,314,24,"email"],[407,43,314,29],[408,16,314,31,"password"],[408,24,314,39],[408,27,314,53,"credentials"],[408,38,314,64],[408,39,314,31,"password"],[408,47,314,39],[409,16,314,41,"options"],[409,23,314,48],[409,26,314,53,"credentials"],[409,37,314,64],[409,38,314,41,"options"],[409,45,314,48],[410,14,315,16],[410,18,315,20,"codeChallenge"],[410,31,315,33],[410,34,315,36],[410,38,315,40],[411,14,316,16],[411,18,316,20,"codeChallengeMethod"],[411,37,316,39],[411,40,316,42],[411,44,316,46],[412,14,317,16],[412,18,317,20],[412,22,317,24],[412,23,317,25,"flowType"],[412,31,317,33],[412,36,317,38],[412,42,317,44],[412,44,317,46],[413,16,318,20],[414,16,318,21],[414,20,318,21,"_yield"],[414,26,318,21],[414,35,319,65],[414,36,319,66],[414,37,319,67],[414,39,319,69,"helpers_1"],[414,48,319,78],[414,49,319,79,"getCodeChallengeAndMethod"],[414,74,319,104],[414,76,319,106],[414,80,319,110],[414,81,319,111,"storage"],[414,88,319,118],[414,90,319,120],[414,94,319,124],[414,95,319,125,"storageKey"],[414,105,319,135],[414,106,319,136],[415,16,319,136],[415,20,319,136,"_yield2"],[415,27,319,136],[415,30,319,136,"_slicedToArray"],[415,44,319,136],[415,45,319,136,"_yield"],[415,51,319,136],[416,16,319,21,"codeChallenge"],[416,29,319,34],[416,32,319,34,"_yield2"],[416,39,319,34],[417,16,319,36,"codeChallengeMethod"],[417,35,319,55],[417,38,319,55,"_yield2"],[417,45,319,55],[418,14,320,16],[419,14,321,16,"res"],[419,17,321,19],[419,26,321,28],[419,27,321,29],[419,28,321,30],[419,30,321,32,"fetch_1"],[419,37,321,39],[419,38,321,40,"_request"],[419,46,321,48],[419,48,321,50],[419,52,321,54],[419,53,321,55,"fetch"],[419,58,321,60],[419,60,321,62],[419,66,321,68],[419,68,321,70],[419,71,321,73],[419,75,321,77],[419,76,321,78,"url"],[419,79,321,81],[419,88,321,90],[419,90,321,92],[420,16,322,20,"headers"],[420,23,322,27],[420,25,322,29],[420,29,322,33],[420,30,322,34,"headers"],[420,37,322,41],[421,16,323,20,"redirectTo"],[421,26,323,30],[421,28,323,32,"options"],[421,35,323,39],[421,40,323,44],[421,44,323,48],[421,48,323,52,"options"],[421,55,323,59],[421,60,323,64],[421,65,323,69],[421,66,323,70],[421,69,323,73],[421,74,323,78],[421,75,323,79],[421,78,323,82,"options"],[421,85,323,89],[421,86,323,90,"emailRedirectTo"],[421,101,323,105],[422,16,324,20,"body"],[422,20,324,24],[422,22,324,26],[423,18,325,24,"email"],[423,23,325,29],[424,18,326,24,"password"],[424,26,326,32],[425,18,327,24,"data"],[425,22,327,28],[425,24,327,30],[425,25,327,31,"_a"],[425,27,327,33],[425,30,327,36,"options"],[425,37,327,43],[425,42,327,48],[425,46,327,52],[425,50,327,56,"options"],[425,57,327,63],[425,62,327,68],[425,67,327,73],[425,68,327,74],[425,71,327,77],[425,76,327,82],[425,77,327,83],[425,80,327,86,"options"],[425,87,327,93],[425,88,327,94,"data"],[425,92,327,98],[425,98,327,104],[425,102,327,108],[425,106,327,112,"_a"],[425,108,327,114],[425,113,327,119],[425,118,327,124],[425,119,327,125],[425,122,327,128,"_a"],[425,124,327,130],[425,127,327,133],[425,128,327,134],[425,129,327,135],[426,18,328,24,"gotrue_meta_security"],[426,38,328,44],[426,40,328,46],[427,20,328,48,"captcha_token"],[427,33,328,61],[427,35,328,63,"options"],[427,42,328,70],[427,47,328,75],[427,51,328,79],[427,55,328,83,"options"],[427,62,328,90],[427,67,328,95],[427,72,328,100],[427,73,328,101],[427,76,328,104],[427,81,328,109],[427,82,328,110],[427,85,328,113,"options"],[427,92,328,120],[427,93,328,121,"captchaToken"],[428,18,328,134],[428,19,328,135],[429,18,329,24,"code_challenge"],[429,32,329,38],[429,34,329,40,"codeChallenge"],[429,47,329,53],[430,18,330,24,"code_challenge_method"],[430,39,330,45],[430,41,330,47,"codeChallengeMethod"],[431,16,331,20],[431,17,331,21],[432,16,332,20,"xform"],[432,21,332,25],[432,23,332,27,"fetch_1"],[432,30,332,34],[432,31,332,35,"_sessionResponse"],[433,14,333,16],[433,15,333,17],[433,16,333,18],[434,12,334,12],[434,13,334,13],[434,19,335,17],[434,23,335,21],[434,30,335,28],[434,34,335,32,"credentials"],[434,45,335,43],[434,47,335,45],[435,14,336,16],[435,18,336,24,"phone"],[435,23,336,29],[435,26,336,53,"credentials"],[435,37,336,64],[435,38,336,24,"phone"],[435,43,336,29],[436,16,336,31,"password"],[436,25,336,39],[436,28,336,53,"credentials"],[436,39,336,64],[436,40,336,31,"password"],[436,48,336,39],[437,16,336,41,"options"],[437,24,336,48],[437,27,336,53,"credentials"],[437,38,336,64],[437,39,336,41,"options"],[437,46,336,48],[438,14,337,16,"res"],[438,17,337,19],[438,26,337,28],[438,27,337,29],[438,28,337,30],[438,30,337,32,"fetch_1"],[438,37,337,39],[438,38,337,40,"_request"],[438,46,337,48],[438,48,337,50],[438,52,337,54],[438,53,337,55,"fetch"],[438,58,337,60],[438,60,337,62],[438,66,337,68],[438,68,337,70],[438,71,337,73],[438,75,337,77],[438,76,337,78,"url"],[438,79,337,81],[438,88,337,90],[438,90,337,92],[439,16,338,20,"headers"],[439,23,338,27],[439,25,338,29],[439,29,338,33],[439,30,338,34,"headers"],[439,37,338,41],[440,16,339,20,"body"],[440,20,339,24],[440,22,339,26],[441,18,340,24,"phone"],[441,23,340,29],[442,18,341,24,"password"],[442,26,341,32],[442,28,341,24,"password"],[442,37,341,32],[443,18,342,24,"data"],[443,22,342,28],[443,24,342,30],[443,25,342,31,"_b"],[443,27,342,33],[443,30,342,36,"options"],[443,38,342,43],[443,43,342,48],[443,47,342,52],[443,51,342,56,"options"],[443,59,342,63],[443,64,342,68],[443,69,342,73],[443,70,342,74],[443,73,342,77],[443,78,342,82],[443,79,342,83],[443,82,342,86,"options"],[443,90,342,93],[443,91,342,94,"data"],[443,95,342,98],[443,101,342,104],[443,105,342,108],[443,109,342,112,"_b"],[443,111,342,114],[443,116,342,119],[443,121,342,124],[443,122,342,125],[443,125,342,128,"_b"],[443,127,342,130],[443,130,342,133],[443,131,342,134],[443,132,342,135],[444,18,343,24,"channel"],[444,25,343,31],[444,27,343,33],[444,28,343,34,"_c"],[444,30,343,36],[444,33,343,39,"options"],[444,41,343,46],[444,46,343,51],[444,50,343,55],[444,54,343,59,"options"],[444,62,343,66],[444,67,343,71],[444,72,343,76],[444,73,343,77],[444,76,343,80],[444,81,343,85],[444,82,343,86],[444,85,343,89,"options"],[444,93,343,96],[444,94,343,97,"channel"],[444,101,343,104],[444,107,343,110],[444,111,343,114],[444,115,343,118,"_c"],[444,117,343,120],[444,122,343,125],[444,127,343,130],[444,128,343,131],[444,131,343,134,"_c"],[444,133,343,136],[444,136,343,139],[444,141,343,144],[445,18,344,24,"gotrue_meta_security"],[445,38,344,44],[445,40,344,46],[446,20,344,48,"captcha_token"],[446,33,344,61],[446,35,344,63,"options"],[446,43,344,70],[446,48,344,75],[446,52,344,79],[446,56,344,83,"options"],[446,64,344,90],[446,69,344,95],[446,74,344,100],[446,75,344,101],[446,78,344,104],[446,83,344,109],[446,84,344,110],[446,87,344,113,"options"],[446,95,344,120],[446,96,344,121,"captchaToken"],[447,18,344,134],[448,16,345,20],[448,17,345,21],[449,16,346,20,"xform"],[449,21,346,25],[449,23,346,27,"fetch_1"],[449,30,346,34],[449,31,346,35,"_sessionResponse"],[450,14,347,16],[450,15,347,17],[450,16,347,18],[451,12,348,12],[451,13,348,13],[451,19,349,17],[452,14,350,16],[452,20,350,22],[452,24,350,26,"errors_1"],[452,32,350,34],[452,33,350,35,"AuthInvalidCredentialsError"],[452,60,350,62],[452,61,350,63],[452,126,350,128],[452,127,350,129],[453,12,351,12],[454,12,352,12],[454,16,352,12,"_res"],[454,20,352,12],[454,23,352,36,"res"],[454,26,352,39],[455,14,352,20,"data"],[455,18,352,24],[455,21,352,24,"_res"],[455,25,352,24],[455,26,352,20,"data"],[455,30,352,24],[456,14,352,26,"error"],[456,19,352,31],[456,22,352,31,"_res"],[456,26,352,31],[456,27,352,26,"error"],[456,32,352,31],[457,12,353,12],[457,16,353,16,"error"],[457,21,353,21],[457,25,353,25],[457,26,353,26,"data"],[457,30,353,30],[457,32,353,32],[458,14,354,16],[458,21,354,23],[459,16,354,25,"data"],[459,20,354,29],[459,22,354,31],[460,18,354,33,"user"],[460,22,354,37],[460,24,354,39],[460,28,354,43],[461,18,354,45,"session"],[461,25,354,52],[461,27,354,54],[462,16,354,59],[462,17,354,60],[463,16,354,62,"error"],[463,21,354,67],[463,23,354,69,"error"],[464,14,354,75],[464,15,354,76],[465,12,355,12],[466,12,356,12],[466,16,356,18,"session"],[466,23,356,25],[466,26,356,28,"data"],[466,30,356,32],[466,31,356,33,"session"],[466,38,356,40],[467,12,357,12],[467,16,357,18,"user"],[467,20,357,22],[467,23,357,25,"data"],[467,27,357,29],[467,28,357,30,"user"],[467,32,357,34],[468,12,358,12],[468,16,358,16,"data"],[468,20,358,20],[468,21,358,21,"session"],[468,28,358,28],[468,30,358,30],[469,14,359,16],[469,20,359,22],[469,24,359,26],[469,25,359,27,"_saveSession"],[469,37,359,39],[469,38,359,40,"data"],[469,42,359,44],[469,43,359,45,"session"],[469,50,359,52],[469,51,359,53],[470,14,360,16],[470,20,360,22],[470,24,360,26],[470,25,360,27,"_notifyAllSubscribers"],[470,46,360,48],[470,47,360,49],[470,58,360,60],[470,60,360,62,"session"],[470,67,360,69],[470,68,360,70],[471,12,361,12],[472,12,362,12],[472,19,362,19],[473,14,362,21,"data"],[473,18,362,25],[473,20,362,27],[474,16,362,29,"user"],[474,20,362,33],[475,16,362,35,"session"],[476,14,362,43],[476,15,362,44],[477,14,362,46,"error"],[477,19,362,51],[477,21,362,53],[478,12,362,58],[478,13,362,59],[479,10,363,8],[479,11,363,9],[479,12,364,8],[479,19,364,15,"error"],[479,24,364,20],[479,26,364,22],[480,12,365,12],[480,16,365,16],[480,17,365,17],[480,18,365,18],[480,20,365,20,"errors_1"],[480,28,365,28],[480,29,365,29,"isAuthError"],[480,40,365,40],[480,42,365,42,"error"],[480,47,365,47],[480,48,365,48],[480,50,365,50],[481,14,366,16],[481,21,366,23],[482,16,366,25,"data"],[482,20,366,29],[482,22,366,31],[483,18,366,33,"user"],[483,22,366,37],[483,24,366,39],[483,28,366,43],[484,18,366,45,"session"],[484,25,366,52],[484,27,366,54],[485,16,366,59],[485,17,366,60],[486,16,366,62,"error"],[487,14,366,68],[487,15,366,69],[488,12,367,12],[489,12,368,12],[489,18,368,18,"error"],[489,23,368,23],[490,10,369,8],[491,8,370,4],[491,9,370,5],[492,8,370,5],[492,17,309,10,"signUp"],[492,23,309,16,"signUp"],[492,24,309,16,"_x6"],[492,27,309,16],[493,10,309,16],[493,17,309,16,"_signUp"],[493,24,309,16],[493,25,309,16,"apply"],[493,30,309,16],[493,37,309,16,"arguments"],[493,46,309,16],[494,8,309,16],[495,8,309,16],[495,15,309,10,"signUp"],[495,21,309,16],[496,6,309,16],[497,6,371,4],[498,0,372,0],[499,0,373,0],[500,0,374,0],[501,0,375,0],[502,0,376,0],[503,0,377,0],[504,0,378,0],[505,6,371,4],[506,4,371,4],[507,6,371,4,"key"],[507,9,371,4],[508,6,371,4,"value"],[508,11,371,4],[509,8,371,4],[509,12,371,4,"_signInWithPassword"],[509,31,371,4],[509,34,371,4,"_asyncToGenerator"],[509,51,371,4],[509,52,379,4],[509,63,379,29,"credentials"],[509,74,379,40],[509,76,379,42],[510,10,380,8],[510,14,380,12],[511,12,381,12],[511,16,381,16,"res"],[511,19,381,19],[512,12,382,12],[512,16,382,16],[512,23,382,23],[512,27,382,27,"credentials"],[512,38,382,38],[512,40,382,40],[513,14,383,16],[513,18,383,24,"email"],[513,23,383,29],[513,26,383,53,"credentials"],[513,37,383,64],[513,38,383,24,"email"],[513,43,383,29],[514,16,383,31,"password"],[514,24,383,39],[514,27,383,53,"credentials"],[514,38,383,64],[514,39,383,31,"password"],[514,47,383,39],[515,16,383,41,"options"],[515,23,383,48],[515,26,383,53,"credentials"],[515,37,383,64],[515,38,383,41,"options"],[515,45,383,48],[516,14,384,16,"res"],[516,17,384,19],[516,26,384,28],[516,27,384,29],[516,28,384,30],[516,30,384,32,"fetch_1"],[516,37,384,39],[516,38,384,40,"_request"],[516,46,384,48],[516,48,384,50],[516,52,384,54],[516,53,384,55,"fetch"],[516,58,384,60],[516,60,384,62],[516,66,384,68],[516,68,384,70],[516,71,384,73],[516,75,384,77],[516,76,384,78,"url"],[516,79,384,81],[516,107,384,109],[516,109,384,111],[517,16,385,20,"headers"],[517,23,385,27],[517,25,385,29],[517,29,385,33],[517,30,385,34,"headers"],[517,37,385,41],[518,16,386,20,"body"],[518,20,386,24],[518,22,386,26],[519,18,387,24,"email"],[519,23,387,29],[520,18,388,24,"password"],[520,26,388,32],[521,18,389,24,"gotrue_meta_security"],[521,38,389,44],[521,40,389,46],[522,20,389,48,"captcha_token"],[522,33,389,61],[522,35,389,63,"options"],[522,42,389,70],[522,47,389,75],[522,51,389,79],[522,55,389,83,"options"],[522,62,389,90],[522,67,389,95],[522,72,389,100],[522,73,389,101],[522,76,389,104],[522,81,389,109],[522,82,389,110],[522,85,389,113,"options"],[522,92,389,120],[522,93,389,121,"captchaToken"],[523,18,389,134],[524,16,390,20],[524,17,390,21],[525,16,391,20,"xform"],[525,21,391,25],[525,23,391,27,"fetch_1"],[525,30,391,34],[525,31,391,35,"_sessionResponsePassword"],[526,14,392,16],[526,15,392,17],[526,16,392,18],[527,12,393,12],[527,13,393,13],[527,19,394,17],[527,23,394,21],[527,30,394,28],[527,34,394,32,"credentials"],[527,45,394,43],[527,47,394,45],[528,14,395,16],[528,18,395,24,"phone"],[528,23,395,29],[528,26,395,53,"credentials"],[528,37,395,64],[528,38,395,24,"phone"],[528,43,395,29],[529,16,395,31,"password"],[529,26,395,39],[529,29,395,53,"credentials"],[529,40,395,64],[529,41,395,31,"password"],[529,49,395,39],[530,16,395,41,"options"],[530,25,395,48],[530,28,395,53,"credentials"],[530,39,395,64],[530,40,395,41,"options"],[530,47,395,48],[531,14,396,16,"res"],[531,17,396,19],[531,26,396,28],[531,27,396,29],[531,28,396,30],[531,30,396,32,"fetch_1"],[531,37,396,39],[531,38,396,40,"_request"],[531,46,396,48],[531,48,396,50],[531,52,396,54],[531,53,396,55,"fetch"],[531,58,396,60],[531,60,396,62],[531,66,396,68],[531,68,396,70],[531,71,396,73],[531,75,396,77],[531,76,396,78,"url"],[531,79,396,81],[531,107,396,109],[531,109,396,111],[532,16,397,20,"headers"],[532,23,397,27],[532,25,397,29],[532,29,397,33],[532,30,397,34,"headers"],[532,37,397,41],[533,16,398,20,"body"],[533,20,398,24],[533,22,398,26],[534,18,399,24,"phone"],[534,23,399,29],[535,18,400,24,"password"],[535,26,400,32],[535,28,400,24,"password"],[535,38,400,32],[536,18,401,24,"gotrue_meta_security"],[536,38,401,44],[536,40,401,46],[537,20,401,48,"captcha_token"],[537,33,401,61],[537,35,401,63,"options"],[537,44,401,70],[537,49,401,75],[537,53,401,79],[537,57,401,83,"options"],[537,66,401,90],[537,71,401,95],[537,76,401,100],[537,77,401,101],[537,80,401,104],[537,85,401,109],[537,86,401,110],[537,89,401,113,"options"],[537,98,401,120],[537,99,401,121,"captchaToken"],[538,18,401,134],[539,16,402,20],[539,17,402,21],[540,16,403,20,"xform"],[540,21,403,25],[540,23,403,27,"fetch_1"],[540,30,403,34],[540,31,403,35,"_sessionResponsePassword"],[541,14,404,16],[541,15,404,17],[541,16,404,18],[542,12,405,12],[542,13,405,13],[542,19,406,17],[543,14,407,16],[543,20,407,22],[543,24,407,26,"errors_1"],[543,32,407,34],[543,33,407,35,"AuthInvalidCredentialsError"],[543,60,407,62],[543,61,407,63],[543,126,407,128],[543,127,407,129],[544,12,408,12],[545,12,409,12],[545,16,409,12,"_res2"],[545,21,409,12],[545,24,409,36,"res"],[545,27,409,39],[546,14,409,20,"data"],[546,18,409,24],[546,21,409,24,"_res2"],[546,26,409,24],[546,27,409,20,"data"],[546,31,409,24],[547,14,409,26,"error"],[547,19,409,31],[547,22,409,31,"_res2"],[547,27,409,31],[547,28,409,26,"error"],[547,33,409,31],[548,12,410,12],[548,16,410,16,"error"],[548,21,410,21],[548,23,410,23],[549,14,411,16],[549,21,411,23],[550,16,411,25,"data"],[550,20,411,29],[550,22,411,31],[551,18,411,33,"user"],[551,22,411,37],[551,24,411,39],[551,28,411,43],[552,18,411,45,"session"],[552,25,411,52],[552,27,411,54],[553,16,411,59],[553,17,411,60],[554,16,411,62,"error"],[555,14,411,68],[555,15,411,69],[556,12,412,12],[556,13,412,13],[556,19,413,17],[556,23,413,21],[556,24,413,22,"data"],[556,28,413,26],[556,32,413,30],[556,33,413,31,"data"],[556,37,413,35],[556,38,413,36,"session"],[556,45,413,43],[556,49,413,47],[556,50,413,48,"data"],[556,54,413,52],[556,55,413,53,"user"],[556,59,413,57],[556,61,413,59],[557,14,414,16],[557,21,414,23],[558,16,414,25,"data"],[558,20,414,29],[558,22,414,31],[559,18,414,33,"user"],[559,22,414,37],[559,24,414,39],[559,28,414,43],[560,18,414,45,"session"],[560,25,414,52],[560,27,414,54],[561,16,414,59],[561,17,414,60],[562,16,414,62,"error"],[562,21,414,67],[562,23,414,69],[562,27,414,73,"errors_1"],[562,35,414,81],[562,36,414,82,"AuthInvalidTokenResponseError"],[562,65,414,111],[562,66,414,112],[563,14,414,114],[563,15,414,115],[564,12,415,12],[565,12,416,12],[565,16,416,16,"data"],[565,20,416,20],[565,21,416,21,"session"],[565,28,416,28],[565,30,416,30],[566,14,417,16],[566,20,417,22],[566,24,417,26],[566,25,417,27,"_saveSession"],[566,37,417,39],[566,38,417,40,"data"],[566,42,417,44],[566,43,417,45,"session"],[566,50,417,52],[566,51,417,53],[567,14,418,16],[567,20,418,22],[567,24,418,26],[567,25,418,27,"_notifyAllSubscribers"],[567,46,418,48],[567,47,418,49],[567,58,418,60],[567,60,418,62,"data"],[567,64,418,66],[567,65,418,67,"session"],[567,72,418,74],[567,73,418,75],[568,12,419,12],[569,12,420,12],[569,19,420,19],[570,14,421,16,"data"],[570,18,421,20],[570,20,421,22,"Object"],[570,26,421,28],[570,27,421,29,"assign"],[570,33,421,35],[570,34,421,36],[571,16,421,38,"user"],[571,20,421,42],[571,22,421,44,"data"],[571,26,421,48],[571,27,421,49,"user"],[571,31,421,53],[572,16,421,55,"session"],[572,23,421,62],[572,25,421,64,"data"],[572,29,421,68],[572,30,421,69,"session"],[573,14,421,77],[573,15,421,78],[573,17,421,81,"data"],[573,21,421,85],[573,22,421,86,"weak_password"],[573,35,421,99],[573,38,421,102],[574,16,421,104,"weakPassword"],[574,28,421,116],[574,30,421,118,"data"],[574,34,421,122],[574,35,421,123,"weak_password"],[575,14,421,137],[575,15,421,138],[575,18,421,141],[575,22,421,146],[575,23,421,147],[576,14,422,16,"error"],[577,12,423,12],[577,13,423,13],[578,10,424,8],[578,11,424,9],[578,12,425,8],[578,19,425,15,"error"],[578,24,425,20],[578,26,425,22],[579,12,426,12],[579,16,426,16],[579,17,426,17],[579,18,426,18],[579,20,426,20,"errors_1"],[579,28,426,28],[579,29,426,29,"isAuthError"],[579,40,426,40],[579,42,426,42,"error"],[579,47,426,47],[579,48,426,48],[579,50,426,50],[580,14,427,16],[580,21,427,23],[581,16,427,25,"data"],[581,20,427,29],[581,22,427,31],[582,18,427,33,"user"],[582,22,427,37],[582,24,427,39],[582,28,427,43],[583,18,427,45,"session"],[583,25,427,52],[583,27,427,54],[584,16,427,59],[584,17,427,60],[585,16,427,62,"error"],[586,14,427,68],[586,15,427,69],[587,12,428,12],[588,12,429,12],[588,18,429,18,"error"],[588,23,429,23],[589,10,430,8],[590,8,431,4],[590,9,431,5],[591,8,431,5],[591,17,379,10,"signInWithPassword"],[591,35,379,28,"signInWithPassword"],[591,36,379,28,"_x7"],[591,39,379,28],[592,10,379,28],[592,17,379,28,"_signInWithPassword"],[592,36,379,28],[592,37,379,28,"apply"],[592,42,379,28],[592,49,379,28,"arguments"],[592,58,379,28],[593,8,379,28],[594,8,379,28],[594,15,379,10,"signInWithPassword"],[594,33,379,28],[595,6,379,28],[596,6,432,4],[597,0,433,0],[598,0,434,0],[599,0,435,0],[600,6,432,4],[601,4,432,4],[602,6,432,4,"key"],[602,9,432,4],[603,6,432,4,"value"],[603,11,432,4],[604,8,432,4],[604,12,432,4,"_signInWithOAuth"],[604,28,432,4],[604,31,432,4,"_asyncToGenerator"],[604,48,432,4],[604,49,436,4],[604,60,436,26,"credentials"],[604,71,436,37],[604,73,436,39],[605,10,437,8],[605,14,437,12,"_a"],[605,16,437,14],[605,18,437,16,"_b"],[605,20,437,18],[605,22,437,20,"_c"],[605,24,437,22],[605,26,437,24,"_d"],[605,28,437,26],[606,10,438,8],[606,23,438,21],[606,27,438,25],[606,28,438,26,"_handleProviderSignIn"],[606,49,438,47],[606,50,438,48,"credentials"],[606,61,438,59],[606,62,438,60,"provider"],[606,70,438,68],[606,72,438,70],[607,12,439,12,"redirectTo"],[607,22,439,22],[607,24,439,24],[607,25,439,25,"_a"],[607,27,439,27],[607,30,439,30,"credentials"],[607,41,439,41],[607,42,439,42,"options"],[607,49,439,49],[607,55,439,55],[607,59,439,59],[607,63,439,63,"_a"],[607,65,439,65],[607,70,439,70],[607,75,439,75],[607,76,439,76],[607,79,439,79],[607,84,439,84],[607,85,439,85],[607,88,439,88,"_a"],[607,90,439,90],[607,91,439,91,"redirectTo"],[607,101,439,101],[608,12,440,12,"scopes"],[608,18,440,18],[608,20,440,20],[608,21,440,21,"_b"],[608,23,440,23],[608,26,440,26,"credentials"],[608,37,440,37],[608,38,440,38,"options"],[608,45,440,45],[608,51,440,51],[608,55,440,55],[608,59,440,59,"_b"],[608,61,440,61],[608,66,440,66],[608,71,440,71],[608,72,440,72],[608,75,440,75],[608,80,440,80],[608,81,440,81],[608,84,440,84,"_b"],[608,86,440,86],[608,87,440,87,"scopes"],[608,93,440,93],[609,12,441,12,"queryParams"],[609,23,441,23],[609,25,441,25],[609,26,441,26,"_c"],[609,28,441,28],[609,31,441,31,"credentials"],[609,42,441,42],[609,43,441,43,"options"],[609,50,441,50],[609,56,441,56],[609,60,441,60],[609,64,441,64,"_c"],[609,66,441,66],[609,71,441,71],[609,76,441,76],[609,77,441,77],[609,80,441,80],[609,85,441,85],[609,86,441,86],[609,89,441,89,"_c"],[609,91,441,91],[609,92,441,92,"queryParams"],[609,103,441,103],[610,12,442,12,"skipBrowserRedirect"],[610,31,442,31],[610,33,442,33],[610,34,442,34,"_d"],[610,36,442,36],[610,39,442,39,"credentials"],[610,50,442,50],[610,51,442,51,"options"],[610,58,442,58],[610,64,442,64],[610,68,442,68],[610,72,442,72,"_d"],[610,74,442,74],[610,79,442,79],[610,84,442,84],[610,85,442,85],[610,88,442,88],[610,93,442,93],[610,94,442,94],[610,97,442,97,"_d"],[610,99,442,99],[610,100,442,100,"skipBrowserRedirect"],[611,10,443,8],[611,11,443,9],[611,12,443,10],[612,8,444,4],[612,9,444,5],[613,8,444,5],[613,17,436,10,"signInWithOAuth"],[613,32,436,25,"signInWithOAuth"],[613,33,436,25,"_x8"],[613,36,436,25],[614,10,436,25],[614,17,436,25,"_signInWithOAuth"],[614,33,436,25],[614,34,436,25,"apply"],[614,39,436,25],[614,46,436,25,"arguments"],[614,55,436,25],[615,8,436,25],[616,8,436,25],[616,15,436,10,"signInWithOAuth"],[616,30,436,25],[617,6,436,25],[618,6,445,4],[619,0,446,0],[620,0,447,0],[621,6,445,4],[622,4,445,4],[623,6,445,4,"key"],[623,9,445,4],[624,6,445,4,"value"],[624,11,445,4],[625,8,445,4],[625,12,445,4,"_exchangeCodeForSession2"],[625,36,445,4],[625,39,445,4,"_asyncToGenerator"],[625,56,445,4],[625,57,448,4],[625,68,448,33,"authCode"],[625,76,448,41],[625,78,448,43],[626,10,448,43],[626,14,448,43,"_this4"],[626,20,448,43],[627,10,449,8],[627,16,449,14],[627,20,449,18],[627,21,449,19,"initializePromise"],[627,38,449,36],[628,10,450,8],[628,17,450,15],[628,21,450,19],[628,22,450,20,"_acquireLock"],[628,34,450,32],[628,35,450,33],[628,36,450,34],[628,37,450,35],[628,52,450,35,"_asyncToGenerator"],[628,69,450,35],[628,70,450,37],[628,83,450,49],[629,12,451,12],[629,19,451,19,"_this4"],[629,25,451,23],[629,26,451,24,"_exchangeCodeForSession"],[629,49,451,47],[629,50,451,48,"authCode"],[629,58,451,56],[629,59,451,57],[630,10,452,8],[630,11,452,9],[630,13,452,10],[631,8,453,4],[631,9,453,5],[632,8,453,5],[632,17,448,10,"exchangeCodeForSession"],[632,39,448,32,"exchangeCodeForSession"],[632,40,448,32,"_x9"],[632,43,448,32],[633,10,448,32],[633,17,448,32,"_exchangeCodeForSession2"],[633,41,448,32],[633,42,448,32,"apply"],[633,47,448,32],[633,54,448,32,"arguments"],[633,63,448,32],[634,8,448,32],[635,8,448,32],[635,15,448,10,"exchangeCodeForSession"],[635,37,448,32],[636,6,448,32],[637,6,454,4],[638,0,455,0],[639,0,456,0],[640,0,457,0],[641,6,454,4],[642,4,454,4],[643,6,454,4,"key"],[643,9,454,4],[644,6,454,4,"value"],[644,11,454,4],[645,8,454,4],[645,12,454,4,"_signInWithWeb"],[645,26,454,4],[645,29,454,4,"_asyncToGenerator"],[645,46,454,4],[645,47,458,4],[645,58,458,25,"credentials"],[645,69,458,36],[645,71,458,38],[646,10,459,8],[646,14,459,16,"chain"],[646,19,459,21],[646,22,459,26,"credentials"],[646,33,459,37],[646,34,459,16,"chain"],[646,39,459,21],[647,10,460,8],[647,14,460,12,"chain"],[647,19,460,17],[647,24,460,22],[647,32,460,30],[647,34,460,32],[648,12,461,12],[648,25,461,25],[648,29,461,29],[648,30,461,30,"signInWithSolana"],[648,46,461,46],[648,47,461,47,"credentials"],[648,58,461,58],[648,59,461,59],[649,10,462,8],[650,10,463,8],[650,16,463,14],[650,20,463,18,"Error"],[650,25,463,23],[650,26,463,24],[650,67,463,65,"chain"],[650,72,463,70],[650,75,463,73],[650,76,463,74],[651,8,464,4],[651,9,464,5],[652,8,464,5],[652,17,458,10,"signInWithWeb3"],[652,31,458,24,"signInWithWeb3"],[652,32,458,24,"_x0"],[652,35,458,24],[653,10,458,24],[653,17,458,24,"_signInWithWeb"],[653,31,458,24],[653,32,458,24,"apply"],[653,37,458,24],[653,44,458,24,"arguments"],[653,53,458,24],[654,8,458,24],[655,8,458,24],[655,15,458,10,"signInWithWeb3"],[655,29,458,24],[656,6,458,24],[657,4,458,24],[658,6,458,24,"key"],[658,9,458,24],[659,6,458,24,"value"],[659,11,458,24],[660,8,458,24],[660,12,458,24,"_signInWithSolana"],[660,29,458,24],[660,32,458,24,"_asyncToGenerator"],[660,49,458,24],[660,50,465,4],[660,61,465,27,"credentials"],[660,72,465,38],[660,74,465,40],[661,10,466,8],[661,14,466,12,"_a"],[661,16,466,14],[661,18,466,16,"_b"],[661,20,466,18],[661,22,466,20,"_c"],[661,24,466,22],[661,26,466,24,"_d"],[661,28,466,26],[661,30,466,28,"_e"],[661,32,466,30],[661,34,466,32,"_f"],[661,36,466,34],[661,38,466,36,"_g"],[661,40,466,38],[661,42,466,40,"_h"],[661,44,466,42],[661,46,466,44,"_j"],[661,48,466,46],[661,50,466,48,"_k"],[661,52,466,50],[661,54,466,52,"_l"],[661,56,466,54],[661,58,466,56,"_m"],[661,60,466,58],[662,10,467,8],[662,14,467,12,"message"],[662,21,467,19],[663,10,468,8],[663,14,468,12,"signature"],[663,23,468,21],[664,10,469,8],[664,14,469,12],[664,23,469,21],[664,27,469,25,"credentials"],[664,38,469,36],[664,40,469,38],[665,12,470,12,"message"],[665,19,470,19],[665,22,470,22,"credentials"],[665,33,470,33],[665,34,470,34,"message"],[665,41,470,41],[666,12,471,12,"signature"],[666,21,471,21],[666,24,471,24,"credentials"],[666,35,471,35],[666,36,471,36,"signature"],[666,45,471,45],[667,10,472,8],[667,11,472,9],[667,17,473,13],[668,12,474,12],[668,16,474,20,"chain"],[668,21,474,25],[668,24,474,58,"credentials"],[668,35,474,69],[668,36,474,20,"chain"],[668,41,474,25],[669,14,474,27,"wallet"],[669,20,474,33],[669,23,474,58,"credentials"],[669,34,474,69],[669,35,474,27,"wallet"],[669,41,474,33],[670,14,474,35,"statement"],[670,23,474,44],[670,26,474,58,"credentials"],[670,37,474,69],[670,38,474,35,"statement"],[670,47,474,44],[671,14,474,46,"options"],[671,21,474,53],[671,24,474,58,"credentials"],[671,35,474,69],[671,36,474,46,"options"],[671,43,474,53],[672,12,475,12],[672,16,475,16,"resolvedWallet"],[672,30,475,30],[673,12,476,12],[673,16,476,16],[673,17,476,17],[673,18,476,18],[673,19,476,19],[673,21,476,21,"helpers_1"],[673,30,476,30],[673,31,476,31,"isBrowser"],[673,40,476,40],[673,42,476,42],[673,43,476,43],[673,45,476,45],[674,14,477,16],[674,18,477,20],[674,25,477,27,"wallet"],[674,31,477,33],[674,36,477,38],[674,44,477,46],[674,48,477,50],[674,50,477,52,"options"],[674,57,477,59],[674,62,477,64],[674,66,477,68],[674,70,477,72,"options"],[674,77,477,79],[674,82,477,84],[674,87,477,89],[674,88,477,90],[674,91,477,93],[674,96,477,98],[674,97,477,99],[674,100,477,102,"options"],[674,107,477,109],[674,108,477,110,"url"],[674,111,477,113],[674,112,477,114],[674,114,477,116],[675,16,478,20],[675,22,478,26],[675,26,478,30,"Error"],[675,31,478,35],[675,32,478,36],[675,119,478,123],[675,120,478,124],[676,14,479,16],[677,14,480,16,"resolvedWallet"],[677,28,480,30],[677,31,480,33,"wallet"],[677,37,480,39],[678,12,481,12],[678,13,481,13],[678,19,482,17],[678,23,482,21],[678,30,482,28,"wallet"],[678,36,482,34],[678,41,482,39],[678,49,482,47],[678,51,482,49],[679,14,483,16,"resolvedWallet"],[679,28,483,30],[679,31,483,33,"wallet"],[679,37,483,39],[680,12,484,12],[680,13,484,13],[680,19,485,17],[681,14,486,16],[681,18,486,22,"windowAny"],[681,27,486,31],[681,30,486,34,"window"],[681,36,486,40],[682,14,487,16],[682,18,487,20],[682,26,487,28],[682,30,487,32,"windowAny"],[682,39,487,41],[682,43,488,20],[682,50,488,27,"windowAny"],[682,59,488,36],[682,60,488,37,"solana"],[682,66,488,43],[682,71,488,48],[682,79,488,56],[682,84,489,22],[682,92,489,30],[682,96,489,34,"windowAny"],[682,105,489,43],[682,106,489,44,"solana"],[682,112,489,50],[682,116,489,54],[682,123,489,61,"windowAny"],[682,132,489,70],[682,133,489,71,"solana"],[682,139,489,77],[682,140,489,78,"signIn"],[682,146,489,84],[682,151,489,89],[682,161,489,99],[682,165,490,25],[682,178,490,38],[682,182,490,42,"windowAny"],[682,191,490,51],[682,192,490,52,"solana"],[682,198,490,58],[682,202,491,28],[682,209,491,35,"windowAny"],[682,218,491,44],[682,219,491,45,"solana"],[682,225,491,51],[682,226,491,52,"signMessage"],[682,237,491,63],[682,242,491,68],[682,252,491,79],[682,253,491,80],[682,255,491,82],[683,16,492,20,"resolvedWallet"],[683,30,492,34],[683,33,492,37,"windowAny"],[683,42,492,46],[683,43,492,47,"solana"],[683,49,492,53],[684,14,493,16],[684,15,493,17],[684,21,494,21],[685,16,495,20],[685,22,495,26],[685,26,495,30,"Error"],[685,31,495,35],[685,32,495,36],[685,343,495,347],[685,344,495,348],[686,14,496,16],[687,12,497,12],[688,12,498,12],[688,16,498,18,"url"],[688,19,498,21],[688,22,498,24],[688,26,498,28,"URL"],[688,29,498,31],[688,30,498,32],[688,31,498,33,"_a"],[688,33,498,35],[688,36,498,38,"options"],[688,43,498,45],[688,48,498,50],[688,52,498,54],[688,56,498,58,"options"],[688,63,498,65],[688,68,498,70],[688,73,498,75],[688,74,498,76],[688,77,498,79],[688,82,498,84],[688,83,498,85],[688,86,498,88,"options"],[688,93,498,95],[688,94,498,96,"url"],[688,97,498,99],[688,103,498,105],[688,107,498,109],[688,111,498,113,"_a"],[688,113,498,115],[688,118,498,120],[688,123,498,125],[688,124,498,126],[688,127,498,129,"_a"],[688,129,498,131],[688,132,498,134,"window"],[688,138,498,140],[688,139,498,141,"location"],[688,147,498,149],[688,148,498,150,"href"],[688,152,498,154],[688,153,498,155],[689,12,499,12],[689,16,499,16],[689,24,499,24],[689,28,499,28,"resolvedWallet"],[689,42,499,42],[689,46,499,46,"resolvedWallet"],[689,60,499,60],[689,61,499,61,"signIn"],[689,67,499,67],[689,69,499,69],[690,14,500,16],[690,18,500,22,"output"],[690,24,500,28],[690,33,500,37,"resolvedWallet"],[690,47,500,51],[690,48,500,52,"signIn"],[690,54,500,58],[690,55,500,59,"Object"],[690,61,500,65],[690,62,500,66,"assign"],[690,68,500,72],[690,69,500,73,"Object"],[690,75,500,79],[690,76,500,80,"assign"],[690,82,500,86],[690,83,500,87,"Object"],[690,89,500,93],[690,90,500,94,"assign"],[690,96,500,100],[690,97,500,101],[691,16,500,103,"issuedAt"],[691,24,500,111],[691,26,500,113],[691,30,500,117,"Date"],[691,34,500,121],[691,35,500,122],[691,36,500,123],[691,37,500,124,"toISOString"],[691,48,500,135],[691,49,500,136],[692,14,500,138],[692,15,500,139],[692,17,500,141,"options"],[692,24,500,148],[692,29,500,153],[692,33,500,157],[692,37,500,161,"options"],[692,44,500,168],[692,49,500,173],[692,54,500,178],[692,55,500,179],[692,58,500,182],[692,63,500,187],[692,64,500,188],[692,67,500,191,"options"],[692,74,500,198],[692,75,500,199,"signInWithSolana"],[692,91,500,215],[692,92,500,216],[692,94,500,218],[693,16,501,20],[694,16,502,20,"version"],[694,23,502,27],[694,25,502,29],[694,28,502,32],[695,16,502,34,"domain"],[695,22,502,40],[695,24,502,42,"url"],[695,27,502,45],[695,28,502,46,"host"],[695,32,502,50],[696,16,502,52,"uri"],[696,19,502,55],[696,21,502,57,"url"],[696,24,502,60],[696,25,502,61,"href"],[697,14,502,66],[697,15,502,67],[697,16,502,68],[697,18,502,71,"statement"],[697,27,502,80],[697,30,502,83],[698,16,502,85,"statement"],[699,14,502,95],[699,15,502,96],[699,18,502,99],[699,22,502,104],[699,23,502,105],[699,24,502,106],[700,14,503,16],[700,18,503,20,"outputToProcess"],[700,33,503,35],[701,14,504,16],[701,18,504,20,"Array"],[701,23,504,25],[701,24,504,26,"isArray"],[701,31,504,33],[701,32,504,34,"output"],[701,38,504,40],[701,39,504,41],[701,43,504,45,"output"],[701,49,504,51],[701,50,504,52],[701,51,504,53],[701,52,504,54],[701,56,504,58],[701,63,504,65,"output"],[701,69,504,71],[701,70,504,72],[701,71,504,73],[701,72,504,74],[701,77,504,79],[701,85,504,87],[701,87,504,89],[702,16,505,20,"outputToProcess"],[702,31,505,35],[702,34,505,38,"output"],[702,40,505,44],[702,41,505,45],[702,42,505,46],[702,43,505,47],[703,14,506,16],[703,15,506,17],[703,21,507,21],[703,25,507,25,"output"],[703,31,507,31],[703,35,508,20],[703,42,508,27,"output"],[703,48,508,33],[703,53,508,38],[703,61,508,46],[703,65,509,20],[703,80,509,35],[703,84,509,39,"output"],[703,90,509,45],[703,94,510,20],[703,105,510,31],[703,109,510,35,"output"],[703,115,510,41],[703,117,510,43],[704,16,511,20,"outputToProcess"],[704,31,511,35],[704,34,511,38,"output"],[704,40,511,44],[705,14,512,16],[705,15,512,17],[705,21,513,21],[706,16,514,20],[706,22,514,26],[706,26,514,30,"Error"],[706,31,514,35],[706,32,514,36],[706,103,514,107],[706,104,514,108],[707,14,515,16],[708,14,516,16],[708,18,516,20],[708,33,516,35],[708,37,516,39,"outputToProcess"],[708,52,516,54],[708,56,517,20],[708,67,517,31],[708,71,517,35,"outputToProcess"],[708,86,517,50],[708,91,518,21],[708,98,518,28,"outputToProcess"],[708,113,518,43],[708,114,518,44,"signedMessage"],[708,127,518,57],[708,132,518,62],[708,140,518,70],[708,144,519,24,"outputToProcess"],[708,159,519,39],[708,160,519,40,"signedMessage"],[708,173,519,53],[708,185,519,65,"Uint8Array"],[708,195,519,75],[708,196,519,76],[708,200,520,20,"outputToProcess"],[708,215,520,35],[708,216,520,36,"signature"],[708,225,520,45],[708,237,520,57,"Uint8Array"],[708,247,520,67],[708,249,520,69],[709,16,521,20,"message"],[709,23,521,27],[709,26,522,24],[709,33,522,31,"outputToProcess"],[709,48,522,46],[709,49,522,47,"signedMessage"],[709,62,522,60],[709,67,522,65],[709,75,522,73],[709,78,523,30,"outputToProcess"],[709,93,523,45],[709,94,523,46,"signedMessage"],[709,107,523,59],[709,110,524,30],[709,114,524,34,"TextDecoder"],[709,125,524,45],[709,126,524,46],[709,127,524,47],[709,128,524,48,"decode"],[709,134,524,54],[709,135,524,55,"outputToProcess"],[709,150,524,70],[709,151,524,71,"signedMessage"],[709,164,524,84],[709,165,524,85],[710,16,525,20,"signature"],[710,25,525,29],[710,28,525,32,"outputToProcess"],[710,43,525,47],[710,44,525,48,"signature"],[710,53,525,57],[711,14,526,16],[711,15,526,17],[711,21,527,21],[712,16,528,20],[712,22,528,26],[712,26,528,30,"Error"],[712,31,528,35],[712,32,528,36],[712,138,528,142],[712,139,528,143],[713,14,529,16],[714,12,530,12],[714,13,530,13],[714,19,531,17],[715,14,532,16],[715,18,532,20],[715,20,532,22],[715,33,532,35],[715,37,532,39,"resolvedWallet"],[715,51,532,53],[715,52,532,54],[715,56,533,20],[715,63,533,27,"resolvedWallet"],[715,77,533,41],[715,78,533,42,"signMessage"],[715,89,533,53],[715,94,533,58],[715,104,533,68],[715,108,534,20],[715,110,534,22],[715,121,534,33],[715,125,534,37,"resolvedWallet"],[715,139,534,51],[715,140,534,52],[715,144,535,20],[715,151,535,27,"resolvedWallet"],[715,165,535,41],[715,170,535,46],[715,178,535,54],[715,182,536,20],[715,183,536,21,"resolvedWallet"],[715,197,536,35],[715,198,536,36,"publicKey"],[715,207,536,45],[715,211,537,20],[715,213,537,22],[715,223,537,32],[715,227,537,36,"resolvedWallet"],[715,241,537,50],[715,242,537,51,"publicKey"],[715,251,537,60],[715,252,537,61],[715,256,538,20],[715,263,538,27,"resolvedWallet"],[715,277,538,41],[715,278,538,42,"publicKey"],[715,287,538,51],[715,288,538,52,"toBase58"],[715,296,538,60],[715,301,538,65],[715,311,538,75],[715,313,538,77],[716,16,539,20],[716,22,539,26],[716,26,539,30,"Error"],[716,31,539,35],[716,32,539,36],[716,129,539,133],[716,130,539,134],[717,14,540,16],[718,14,541,16,"message"],[718,21,541,23],[718,24,541,26],[718,25,542,20],[718,28,542,23,"url"],[718,31,542,26],[718,32,542,27,"host"],[718,36,542,31],[718,85,542,80],[718,87,543,20,"resolvedWallet"],[718,101,543,34],[718,102,543,35,"publicKey"],[718,111,543,44],[718,112,543,45,"toBase58"],[718,120,543,53],[718,121,543,54],[718,122,543,55],[718,124,544,20],[718,128,544,24,"statement"],[718,137,544,33],[718,140,544,36],[718,141,544,37],[718,143,544,39],[718,145,544,41,"statement"],[718,154,544,50],[718,156,544,52],[718,158,544,54],[718,159,544,55],[718,162,544,58],[718,163,544,59],[718,165,544,61],[718,166,544,62],[718,167,544,63],[718,169,545,20],[718,181,545,32],[718,183,546,20],[718,191,546,28,"url"],[718,194,546,31],[718,195,546,32,"href"],[718,199,546,36],[718,201,546,38],[718,203,547,20],[718,217,547,34],[718,218,547,35,"_c"],[718,220,547,37],[718,223,547,40],[718,224,547,41,"_b"],[718,226,547,43],[718,229,547,46,"options"],[718,236,547,53],[718,241,547,58],[718,245,547,62],[718,249,547,66,"options"],[718,256,547,73],[718,261,547,78],[718,266,547,83],[718,267,547,84],[718,270,547,87],[718,275,547,92],[718,276,547,93],[718,279,547,96,"options"],[718,286,547,103],[718,287,547,104,"signInWithSolana"],[718,303,547,120],[718,309,547,126],[718,313,547,130],[718,317,547,134,"_b"],[718,319,547,136],[718,324,547,141],[718,329,547,146],[718,330,547,147],[718,333,547,150],[718,338,547,155],[718,339,547,156],[718,342,547,159,"_b"],[718,344,547,161],[718,345,547,162,"issuedAt"],[718,353,547,170],[718,359,547,176],[718,363,547,180],[718,367,547,184,"_c"],[718,369,547,186],[718,374,547,191],[718,379,547,196],[718,380,547,197],[718,383,547,200,"_c"],[718,385,547,202],[718,388,547,205],[718,392,547,209,"Date"],[718,396,547,213],[718,397,547,214],[718,398,547,215],[718,399,547,216,"toISOString"],[718,410,547,227],[718,411,547,228],[718,412,547,229],[718,414,547,231],[718,416,548,20],[718,420,548,24],[718,421,548,25],[718,422,548,26,"_d"],[718,424,548,28],[718,427,548,31,"options"],[718,434,548,38],[718,439,548,43],[718,443,548,47],[718,447,548,51,"options"],[718,454,548,58],[718,459,548,63],[718,464,548,68],[718,465,548,69],[718,468,548,72],[718,473,548,77],[718,474,548,78],[718,477,548,81,"options"],[718,484,548,88],[718,485,548,89,"signInWithSolana"],[718,501,548,105],[718,507,548,111],[718,511,548,115],[718,515,548,119,"_d"],[718,517,548,121],[718,522,548,126],[718,527,548,131],[718,528,548,132],[718,531,548,135],[718,536,548,140],[718,537,548,141],[718,540,548,144,"_d"],[718,542,548,146],[718,543,548,147,"notBefore"],[718,552,548,156],[718,556,549,26],[718,557,549,27],[718,572,549,42,"options"],[718,579,549,49],[718,580,549,50,"signInWithSolana"],[718,596,549,66],[718,597,549,67,"notBefore"],[718,606,549,76],[718,608,549,78],[718,609,549,79],[718,612,550,26],[718,614,550,28],[718,615,550,29],[718,617,551,20],[718,621,551,24],[718,622,551,25],[718,623,551,26,"_e"],[718,625,551,28],[718,628,551,31,"options"],[718,635,551,38],[718,640,551,43],[718,644,551,47],[718,648,551,51,"options"],[718,655,551,58],[718,660,551,63],[718,665,551,68],[718,666,551,69],[718,669,551,72],[718,674,551,77],[718,675,551,78],[718,678,551,81,"options"],[718,685,551,88],[718,686,551,89,"signInWithSolana"],[718,702,551,105],[718,708,551,111],[718,712,551,115],[718,716,551,119,"_e"],[718,718,551,121],[718,723,551,126],[718,728,551,131],[718,729,551,132],[718,732,551,135],[718,737,551,140],[718,738,551,141],[718,741,551,144,"_e"],[718,743,551,146],[718,744,551,147,"expirationTime"],[718,758,551,161],[718,762,552,26],[718,763,552,27],[718,783,552,47,"options"],[718,790,552,54],[718,791,552,55,"signInWithSolana"],[718,807,552,71],[718,808,552,72,"expirationTime"],[718,822,552,86],[718,824,552,88],[718,825,552,89],[718,828,553,26],[718,830,553,28],[718,831,553,29],[718,833,554,20],[718,837,554,24],[718,838,554,25],[718,839,554,26,"_f"],[718,841,554,28],[718,844,554,31,"options"],[718,851,554,38],[718,856,554,43],[718,860,554,47],[718,864,554,51,"options"],[718,871,554,58],[718,876,554,63],[718,881,554,68],[718,882,554,69],[718,885,554,72],[718,890,554,77],[718,891,554,78],[718,894,554,81,"options"],[718,901,554,88],[718,902,554,89,"signInWithSolana"],[718,918,554,105],[718,924,554,111],[718,928,554,115],[718,932,554,119,"_f"],[718,934,554,121],[718,939,554,126],[718,944,554,131],[718,945,554,132],[718,948,554,135],[718,953,554,140],[718,954,554,141],[718,957,554,144,"_f"],[718,959,554,146],[718,960,554,147,"chainId"],[718,967,554,154],[718,971,555,26],[718,972,555,27],[718,985,555,40,"options"],[718,992,555,47],[718,993,555,48,"signInWithSolana"],[718,1009,555,64],[718,1010,555,65,"chainId"],[718,1017,555,72],[718,1019,555,74],[718,1020,555,75],[718,1023,556,26],[718,1025,556,28],[718,1026,556,29],[718,1028,557,20],[718,1032,557,24],[718,1033,557,25],[718,1034,557,26,"_g"],[718,1036,557,28],[718,1039,557,31,"options"],[718,1046,557,38],[718,1051,557,43],[718,1055,557,47],[718,1059,557,51,"options"],[718,1066,557,58],[718,1071,557,63],[718,1076,557,68],[718,1077,557,69],[718,1080,557,72],[718,1085,557,77],[718,1086,557,78],[718,1089,557,81,"options"],[718,1096,557,88],[718,1097,557,89,"signInWithSolana"],[718,1113,557,105],[718,1119,557,111],[718,1123,557,115],[718,1127,557,119,"_g"],[718,1129,557,121],[718,1134,557,126],[718,1139,557,131],[718,1140,557,132],[718,1143,557,135],[718,1148,557,140],[718,1149,557,141],[718,1152,557,144,"_g"],[718,1154,557,146],[718,1155,557,147,"nonce"],[718,1160,557,152],[718,1164,557,156],[718,1165,557,157],[718,1175,557,167,"options"],[718,1182,557,174],[718,1183,557,175,"signInWithSolana"],[718,1199,557,191],[718,1200,557,192,"nonce"],[718,1205,557,197],[718,1207,557,199],[718,1208,557,200],[718,1211,557,203],[718,1213,557,205],[718,1214,557,206],[718,1216,558,20],[718,1220,558,24],[718,1221,558,25],[718,1222,558,26,"_h"],[718,1224,558,28],[718,1227,558,31,"options"],[718,1234,558,38],[718,1239,558,43],[718,1243,558,47],[718,1247,558,51,"options"],[718,1254,558,58],[718,1259,558,63],[718,1264,558,68],[718,1265,558,69],[718,1268,558,72],[718,1273,558,77],[718,1274,558,78],[718,1277,558,81,"options"],[718,1284,558,88],[718,1285,558,89,"signInWithSolana"],[718,1301,558,105],[718,1307,558,111],[718,1311,558,115],[718,1315,558,119,"_h"],[718,1317,558,121],[718,1322,558,126],[718,1327,558,131],[718,1328,558,132],[718,1331,558,135],[718,1336,558,140],[718,1337,558,141],[718,1340,558,144,"_h"],[718,1342,558,146],[718,1343,558,147,"requestId"],[718,1352,558,156],[718,1356,559,26],[718,1357,559,27],[718,1372,559,42,"options"],[718,1379,559,49],[718,1380,559,50,"signInWithSolana"],[718,1396,559,66],[718,1397,559,67,"requestId"],[718,1406,559,76],[718,1408,559,78],[718,1409,559,79],[718,1412,560,26],[718,1414,560,28],[718,1415,560,29],[718,1417,561,20],[718,1421,561,24],[718,1422,561,25],[718,1423,561,26,"_k"],[718,1425,561,28],[718,1428,561,31],[718,1429,561,32,"_j"],[718,1431,561,34],[718,1434,561,37,"options"],[718,1441,561,44],[718,1446,561,49],[718,1450,561,53],[718,1454,561,57,"options"],[718,1461,561,64],[718,1466,561,69],[718,1471,561,74],[718,1472,561,75],[718,1475,561,78],[718,1480,561,83],[718,1481,561,84],[718,1484,561,87,"options"],[718,1491,561,94],[718,1492,561,95,"signInWithSolana"],[718,1508,561,111],[718,1514,561,117],[718,1518,561,121],[718,1522,561,125,"_j"],[718,1524,561,127],[718,1529,561,132],[718,1534,561,137],[718,1535,561,138],[718,1538,561,141],[718,1543,561,146],[718,1544,561,147],[718,1547,561,150,"_j"],[718,1549,561,152],[718,1550,561,153,"resources"],[718,1559,561,162],[718,1565,561,168],[718,1569,561,172],[718,1573,561,176,"_k"],[718,1575,561,178],[718,1580,561,183],[718,1585,561,188],[718,1586,561,189],[718,1589,561,192],[718,1594,561,197],[718,1595,561,198],[718,1598,561,201,"_k"],[718,1600,561,203],[718,1601,561,204,"length"],[718,1607,561,210],[718,1611,562,26],[718,1612,563,28],[718,1623,563,39],[718,1625,564,28],[718,1628,564,31,"options"],[718,1635,564,38],[718,1636,564,39,"signInWithSolana"],[718,1652,564,55],[718,1653,564,56,"resources"],[718,1662,564,65],[718,1663,564,66,"map"],[718,1666,564,69],[718,1667,564,71,"resource"],[718,1675,564,79],[718,1679,564,84],[718,1684,564,89,"resource"],[718,1692,564,97],[718,1694,564,99],[718,1695,564,100],[718,1696,565,25],[718,1699,566,26],[718,1701,566,28],[718,1702,566,29],[718,1703,567,17],[718,1704,567,18,"join"],[718,1708,567,22],[718,1709,567,23],[718,1713,567,27],[718,1714,567,28],[719,14,568,16],[719,18,568,22,"maybeSignature"],[719,32,568,36],[719,41,568,45,"resolvedWallet"],[719,55,568,59],[719,56,568,60,"signMessage"],[719,67,568,71],[719,68,568,72],[719,72,568,76,"TextEncoder"],[719,83,568,87],[719,84,568,88],[719,85,568,89],[719,86,568,90,"encode"],[719,92,568,96],[719,93,568,97,"message"],[719,100,568,104],[719,101,568,105],[719,103,568,107],[719,109,568,113],[719,110,568,114],[720,14,569,16],[720,18,569,20],[720,19,569,21,"maybeSignature"],[720,33,569,35],[720,37,569,39],[720,39,569,41,"maybeSignature"],[720,53,569,55],[720,65,569,67,"Uint8Array"],[720,75,569,77],[720,76,569,78],[720,78,569,80],[721,16,570,20],[721,22,570,26],[721,26,570,30,"Error"],[721,31,570,35],[721,32,570,36],[721,106,570,110],[721,107,570,111],[722,14,571,16],[723,14,572,16,"signature"],[723,23,572,25],[723,26,572,28,"maybeSignature"],[723,40,572,42],[724,12,573,12],[725,10,574,8],[726,10,575,8],[726,14,575,12],[727,12,576,12],[727,16,576,12,"_yield3"],[727,23,576,12],[727,32,576,42],[727,33,576,43],[727,34,576,44],[727,36,576,46,"fetch_1"],[727,43,576,53],[727,44,576,54,"_request"],[727,52,576,62],[727,54,576,64],[727,58,576,68],[727,59,576,69,"fetch"],[727,64,576,74],[727,66,576,76],[727,72,576,82],[727,74,576,84],[727,77,576,87],[727,81,576,91],[727,82,576,92,"url"],[727,85,576,95],[727,109,576,119],[727,111,576,121],[728,16,577,16,"headers"],[728,23,577,23],[728,25,577,25],[728,29,577,29],[728,30,577,30,"headers"],[728,37,577,37],[729,16,578,16,"body"],[729,20,578,20],[729,22,578,22,"Object"],[729,28,578,28],[729,29,578,29,"assign"],[729,35,578,35],[729,36,578,36],[730,18,578,38,"chain"],[730,23,578,43],[730,25,578,45],[730,33,578,53],[731,18,578,55,"message"],[731,25,578,62],[732,18,578,64,"signature"],[732,27,578,73],[732,29,578,75],[732,30,578,76],[732,31,578,77],[732,33,578,79,"base64url_1"],[732,44,578,90],[732,45,578,91,"bytesToBase64URL"],[732,61,578,107],[732,63,578,109,"signature"],[732,72,578,118],[733,16,578,120],[733,17,578,121],[733,19,578,124],[733,20,578,125],[733,21,578,126,"_l"],[733,23,578,128],[733,26,578,131,"credentials"],[733,37,578,142],[733,38,578,143,"options"],[733,45,578,150],[733,51,578,156],[733,55,578,160],[733,59,578,164,"_l"],[733,61,578,166],[733,66,578,171],[733,71,578,176],[733,72,578,177],[733,75,578,180],[733,80,578,185],[733,81,578,186],[733,84,578,189,"_l"],[733,86,578,191],[733,87,578,192,"captchaToken"],[733,99,578,204],[733,103,579,22],[734,18,579,24,"gotrue_meta_security"],[734,38,579,44],[734,40,579,46],[735,20,579,48,"captcha_token"],[735,33,579,61],[735,35,579,63],[735,36,579,64,"_m"],[735,38,579,66],[735,41,579,69,"credentials"],[735,52,579,80],[735,53,579,81,"options"],[735,60,579,88],[735,66,579,94],[735,70,579,98],[735,74,579,102,"_m"],[735,76,579,104],[735,81,579,109],[735,86,579,114],[735,87,579,115],[735,90,579,118],[735,95,579,123],[735,96,579,124],[735,99,579,127,"_m"],[735,101,579,129],[735,102,579,130,"captchaToken"],[736,18,579,143],[737,16,579,145],[737,17,579,146],[737,20,580,22],[737,24,580,27],[737,25,580,28],[738,16,581,16,"xform"],[738,21,581,21],[738,23,581,23,"fetch_1"],[738,30,581,30],[738,31,581,31,"_sessionResponse"],[739,14,582,12],[739,15,582,13],[739,16,582,14],[740,14,576,20,"data"],[740,18,576,24],[740,21,576,24,"_yield3"],[740,28,576,24],[740,29,576,20,"data"],[740,33,576,24],[741,14,576,26,"error"],[741,19,576,31],[741,22,576,31,"_yield3"],[741,29,576,31],[741,30,576,26,"error"],[741,35,576,31],[742,12,583,12],[742,16,583,16,"error"],[742,21,583,21],[742,23,583,23],[743,14,584,16],[743,20,584,22,"error"],[743,25,584,27],[744,12,585,12],[745,12,586,12],[745,16,586,16],[745,17,586,17,"data"],[745,21,586,21],[745,25,586,25],[745,26,586,26,"data"],[745,30,586,30],[745,31,586,31,"session"],[745,38,586,38],[745,42,586,42],[745,43,586,43,"data"],[745,47,586,47],[745,48,586,48,"user"],[745,52,586,52],[745,54,586,54],[746,14,587,16],[746,21,587,23],[747,16,588,20,"data"],[747,20,588,24],[747,22,588,26],[748,18,588,28,"user"],[748,22,588,32],[748,24,588,34],[748,28,588,38],[749,18,588,40,"session"],[749,25,588,47],[749,27,588,49],[750,16,588,54],[750,17,588,55],[751,16,589,20,"error"],[751,21,589,25],[751,23,589,27],[751,27,589,31,"errors_1"],[751,35,589,39],[751,36,589,40,"AuthInvalidTokenResponseError"],[751,65,589,69],[751,66,589,70],[752,14,590,16],[752,15,590,17],[753,12,591,12],[754,12,592,12],[754,16,592,16,"data"],[754,20,592,20],[754,21,592,21,"session"],[754,28,592,28],[754,30,592,30],[755,14,593,16],[755,20,593,22],[755,24,593,26],[755,25,593,27,"_saveSession"],[755,37,593,39],[755,38,593,40,"data"],[755,42,593,44],[755,43,593,45,"session"],[755,50,593,52],[755,51,593,53],[756,14,594,16],[756,20,594,22],[756,24,594,26],[756,25,594,27,"_notifyAllSubscribers"],[756,46,594,48],[756,47,594,49],[756,58,594,60],[756,60,594,62,"data"],[756,64,594,66],[756,65,594,67,"session"],[756,72,594,74],[756,73,594,75],[757,12,595,12],[758,12,596,12],[758,19,596,19],[759,14,596,21,"data"],[759,18,596,25],[759,20,596,27,"Object"],[759,26,596,33],[759,27,596,34,"assign"],[759,33,596,40],[759,34,596,41],[759,35,596,42],[759,36,596,43],[759,38,596,45,"data"],[759,42,596,49],[759,43,596,50],[760,14,596,52,"error"],[761,12,596,58],[761,13,596,59],[762,10,597,8],[762,11,597,9],[762,12,598,8],[762,19,598,15,"error"],[762,24,598,20],[762,26,598,22],[763,12,599,12],[763,16,599,16],[763,17,599,17],[763,18,599,18],[763,20,599,20,"errors_1"],[763,28,599,28],[763,29,599,29,"isAuthError"],[763,40,599,40],[763,42,599,42,"error"],[763,47,599,47],[763,48,599,48],[763,50,599,50],[764,14,600,16],[764,21,600,23],[765,16,600,25,"data"],[765,20,600,29],[765,22,600,31],[766,18,600,33,"user"],[766,22,600,37],[766,24,600,39],[766,28,600,43],[767,18,600,45,"session"],[767,25,600,52],[767,27,600,54],[768,16,600,59],[768,17,600,60],[769,16,600,62,"error"],[770,14,600,68],[770,15,600,69],[771,12,601,12],[772,12,602,12],[772,18,602,18,"error"],[772,23,602,23],[773,10,603,8],[774,8,604,4],[774,9,604,5],[775,8,604,5],[775,17,465,10,"signInWithSolana"],[775,33,465,26,"signInWithSolana"],[775,34,465,26,"_x1"],[775,37,465,26],[776,10,465,26],[776,17,465,26,"_signInWithSolana"],[776,34,465,26],[776,35,465,26,"apply"],[776,40,465,26],[776,47,465,26,"arguments"],[776,56,465,26],[777,8,465,26],[778,8,465,26],[778,15,465,10,"signInWithSolana"],[778,31,465,26],[779,6,465,26],[780,4,465,26],[781,6,465,26,"key"],[781,9,465,26],[782,6,465,26,"value"],[782,11,465,26],[783,8,465,26],[783,12,465,26,"_exchangeCodeForSession3"],[783,36,465,26],[783,39,465,26,"_asyncToGenerator"],[783,56,465,26],[783,57,605,4],[783,68,605,34,"authCode"],[783,76,605,42],[783,78,605,44],[784,10,606,8],[784,14,606,14,"storageItem"],[784,25,606,25],[784,34,606,34],[784,35,606,35],[784,36,606,36],[784,38,606,38,"helpers_1"],[784,47,606,47],[784,48,606,48,"getItemAsync"],[784,60,606,60],[784,62,606,62],[784,66,606,66],[784,67,606,67,"storage"],[784,74,606,74],[784,76,606,76],[784,79,606,79],[784,83,606,83],[784,84,606,84,"storageKey"],[784,94,606,94],[784,110,606,110],[784,111,606,111],[785,10,607,8],[785,14,607,8,"_split"],[785,20,607,8],[785,23,607,45],[785,24,607,46,"storageItem"],[785,35,607,57],[785,40,607,62],[785,44,607,66],[785,48,607,70,"storageItem"],[785,59,607,81],[785,64,607,86],[785,69,607,91],[785,70,607,92],[785,73,607,95,"storageItem"],[785,84,607,106],[785,87,607,109],[785,89,607,111],[785,91,607,113,"split"],[785,96,607,118],[785,97,607,119],[785,100,607,122],[785,101,607,123],[786,12,607,123,"_split2"],[786,19,607,123],[786,22,607,123,"_slicedToArray"],[786,36,607,123],[786,37,607,123,"_split"],[786,43,607,123],[787,12,607,15,"codeVerifier"],[787,24,607,27],[787,27,607,27,"_split2"],[787,34,607,27],[788,12,607,29,"redirectType"],[788,24,607,41],[788,27,607,41,"_split2"],[788,34,607,41],[789,10,608,8],[789,14,608,12],[790,12,609,12],[790,16,609,12,"_yield4"],[790,23,609,12],[790,32,609,42],[790,33,609,43],[790,34,609,44],[790,36,609,46,"fetch_1"],[790,43,609,53],[790,44,609,54,"_request"],[790,52,609,62],[790,54,609,64],[790,58,609,68],[790,59,609,69,"fetch"],[790,64,609,74],[790,66,609,76],[790,72,609,82],[790,74,609,84],[790,77,609,87],[790,81,609,91],[790,82,609,92,"url"],[790,85,609,95],[790,109,609,119],[790,111,609,121],[791,16,610,16,"headers"],[791,23,610,23],[791,25,610,25],[791,29,610,29],[791,30,610,30,"headers"],[791,37,610,37],[792,16,611,16,"body"],[792,20,611,20],[792,22,611,22],[793,18,612,20,"auth_code"],[793,27,612,29],[793,29,612,31,"authCode"],[793,37,612,39],[794,18,613,20,"code_verifier"],[794,31,613,33],[794,33,613,35,"codeVerifier"],[795,16,614,16],[795,17,614,17],[796,16,615,16,"xform"],[796,21,615,21],[796,23,615,23,"fetch_1"],[796,30,615,30],[796,31,615,31,"_sessionResponse"],[797,14,616,12],[797,15,616,13],[797,16,616,14],[798,14,609,20,"data"],[798,18,609,24],[798,21,609,24,"_yield4"],[798,28,609,24],[798,29,609,20,"data"],[798,33,609,24],[799,14,609,26,"error"],[799,19,609,31],[799,22,609,31,"_yield4"],[799,29,609,31],[799,30,609,26,"error"],[799,35,609,31],[800,12,617,12],[800,18,617,18],[800,19,617,19],[800,20,617,20],[800,22,617,22,"helpers_1"],[800,31,617,31],[800,32,617,32,"removeItemAsync"],[800,47,617,47],[800,49,617,49],[800,53,617,53],[800,54,617,54,"storage"],[800,61,617,61],[800,63,617,63],[800,66,617,66],[800,70,617,70],[800,71,617,71,"storageKey"],[800,81,617,81],[800,97,617,97],[800,98,617,98],[801,12,618,12],[801,16,618,16,"error"],[801,21,618,21],[801,23,618,23],[802,14,619,16],[802,20,619,22,"error"],[802,25,619,27],[803,12,620,12],[804,12,621,12],[804,16,621,16],[804,17,621,17,"data"],[804,21,621,21],[804,25,621,25],[804,26,621,26,"data"],[804,30,621,30],[804,31,621,31,"session"],[804,38,621,38],[804,42,621,42],[804,43,621,43,"data"],[804,47,621,47],[804,48,621,48,"user"],[804,52,621,52],[804,54,621,54],[805,14,622,16],[805,21,622,23],[806,16,623,20,"data"],[806,20,623,24],[806,22,623,26],[807,18,623,28,"user"],[807,22,623,32],[807,24,623,34],[807,28,623,38],[808,18,623,40,"session"],[808,25,623,47],[808,27,623,49],[808,31,623,53],[809,18,623,55,"redirectType"],[809,30,623,67],[809,32,623,69],[810,16,623,74],[810,17,623,75],[811,16,624,20,"error"],[811,21,624,25],[811,23,624,27],[811,27,624,31,"errors_1"],[811,35,624,39],[811,36,624,40,"AuthInvalidTokenResponseError"],[811,65,624,69],[811,66,624,70],[812,14,625,16],[812,15,625,17],[813,12,626,12],[814,12,627,12],[814,16,627,16,"data"],[814,20,627,20],[814,21,627,21,"session"],[814,28,627,28],[814,30,627,30],[815,14,628,16],[815,20,628,22],[815,24,628,26],[815,25,628,27,"_saveSession"],[815,37,628,39],[815,38,628,40,"data"],[815,42,628,44],[815,43,628,45,"session"],[815,50,628,52],[815,51,628,53],[816,14,629,16],[816,20,629,22],[816,24,629,26],[816,25,629,27,"_notifyAllSubscribers"],[816,46,629,48],[816,47,629,49],[816,58,629,60],[816,60,629,62,"data"],[816,64,629,66],[816,65,629,67,"session"],[816,72,629,74],[816,73,629,75],[817,12,630,12],[818,12,631,12],[818,19,631,19],[819,14,631,21,"data"],[819,18,631,25],[819,20,631,27,"Object"],[819,26,631,33],[819,27,631,34,"assign"],[819,33,631,40],[819,34,631,41,"Object"],[819,40,631,47],[819,41,631,48,"assign"],[819,47,631,54],[819,48,631,55],[819,49,631,56],[819,50,631,57],[819,52,631,59,"data"],[819,56,631,63],[819,57,631,64],[819,59,631,66],[820,16,631,68,"redirectType"],[820,28,631,80],[820,30,631,82,"redirectType"],[820,42,631,94],[820,47,631,99],[820,51,631,103],[820,55,631,107,"redirectType"],[820,67,631,119],[820,72,631,124],[820,77,631,129],[820,78,631,130],[820,81,631,133,"redirectType"],[820,93,631,145],[820,96,631,148],[821,14,631,153],[821,15,631,154],[821,16,631,155],[822,14,631,157,"error"],[823,12,631,163],[823,13,631,164],[824,10,632,8],[824,11,632,9],[824,12,633,8],[824,19,633,15,"error"],[824,24,633,20],[824,26,633,22],[825,12,634,12],[825,16,634,16],[825,17,634,17],[825,18,634,18],[825,20,634,20,"errors_1"],[825,28,634,28],[825,29,634,29,"isAuthError"],[825,40,634,40],[825,42,634,42,"error"],[825,47,634,47],[825,48,634,48],[825,50,634,50],[826,14,635,16],[826,21,635,23],[827,16,635,25,"data"],[827,20,635,29],[827,22,635,31],[828,18,635,33,"user"],[828,22,635,37],[828,24,635,39],[828,28,635,43],[829,18,635,45,"session"],[829,25,635,52],[829,27,635,54],[829,31,635,58],[830,18,635,60,"redirectType"],[830,30,635,72],[830,32,635,74],[831,16,635,79],[831,17,635,80],[832,16,635,82,"error"],[833,14,635,88],[833,15,635,89],[834,12,636,12],[835,12,637,12],[835,18,637,18,"error"],[835,23,637,23],[836,10,638,8],[837,8,639,4],[837,9,639,5],[838,8,639,5],[838,17,605,10,"_exchangeCodeForSession"],[838,40,605,33,"_exchangeCodeForSession"],[838,41,605,33,"_x10"],[838,45,605,33],[839,10,605,33],[839,17,605,33,"_exchangeCodeForSession3"],[839,41,605,33],[839,42,605,33,"apply"],[839,47,605,33],[839,54,605,33,"arguments"],[839,63,605,33],[840,8,605,33],[841,8,605,33],[841,15,605,10,"_exchangeCodeForSession"],[841,38,605,33],[842,6,605,33],[843,6,640,4],[844,0,641,0],[845,0,642,0],[846,0,643,0],[847,4,640,4],[848,6,640,4,"key"],[848,9,640,4],[849,6,640,4,"value"],[849,11,640,4],[850,8,640,4],[850,12,640,4,"_signInWithIdToken"],[850,30,640,4],[850,33,640,4,"_asyncToGenerator"],[850,50,640,4],[850,51,644,4],[850,62,644,28,"credentials"],[850,73,644,39],[850,75,644,41],[851,10,645,8],[851,14,645,12],[852,12,646,12],[852,16,646,20,"options"],[852,23,646,27],[852,26,646,70,"credentials"],[852,37,646,81],[852,38,646,20,"options"],[852,45,646,27],[853,14,646,29,"provider"],[853,22,646,37],[853,25,646,70,"credentials"],[853,36,646,81],[853,37,646,29,"provider"],[853,45,646,37],[854,14,646,39,"token"],[854,19,646,44],[854,22,646,70,"credentials"],[854,33,646,81],[854,34,646,39,"token"],[854,39,646,44],[855,14,646,46,"access_token"],[855,26,646,58],[855,29,646,70,"credentials"],[855,40,646,81],[855,41,646,46,"access_token"],[855,53,646,58],[856,14,646,60,"nonce"],[856,19,646,65],[856,22,646,70,"credentials"],[856,33,646,81],[856,34,646,60,"nonce"],[856,39,646,65],[857,12,647,12],[857,16,647,18,"res"],[857,19,647,21],[857,28,647,30],[857,29,647,31],[857,30,647,32],[857,32,647,34,"fetch_1"],[857,39,647,41],[857,40,647,42,"_request"],[857,48,647,50],[857,50,647,52],[857,54,647,56],[857,55,647,57,"fetch"],[857,60,647,62],[857,62,647,64],[857,68,647,70],[857,70,647,72],[857,73,647,75],[857,77,647,79],[857,78,647,80,"url"],[857,81,647,83],[857,109,647,111],[857,111,647,113],[858,14,648,16,"headers"],[858,21,648,23],[858,23,648,25],[858,27,648,29],[858,28,648,30,"headers"],[858,35,648,37],[859,14,649,16,"body"],[859,18,649,20],[859,20,649,22],[860,16,650,20,"provider"],[860,24,650,28],[861,16,651,20,"id_token"],[861,24,651,28],[861,26,651,30,"token"],[861,31,651,35],[862,16,652,20,"access_token"],[862,28,652,32],[863,16,653,20,"nonce"],[863,21,653,25],[864,16,654,20,"gotrue_meta_security"],[864,36,654,40],[864,38,654,42],[865,18,654,44,"captcha_token"],[865,31,654,57],[865,33,654,59,"options"],[865,40,654,66],[865,45,654,71],[865,49,654,75],[865,53,654,79,"options"],[865,60,654,86],[865,65,654,91],[865,70,654,96],[865,71,654,97],[865,74,654,100],[865,79,654,105],[865,80,654,106],[865,83,654,109,"options"],[865,90,654,116],[865,91,654,117,"captchaToken"],[866,16,654,130],[867,14,655,16],[867,15,655,17],[868,14,656,16,"xform"],[868,19,656,21],[868,21,656,23,"fetch_1"],[868,28,656,30],[868,29,656,31,"_sessionResponse"],[869,12,657,12],[869,13,657,13],[869,14,657,14],[870,12,658,12],[870,16,658,20,"data"],[870,20,658,24],[870,23,658,36,"res"],[870,26,658,39],[870,27,658,20,"data"],[870,31,658,24],[871,14,658,26,"error"],[871,19,658,31],[871,22,658,36,"res"],[871,25,658,39],[871,26,658,26,"error"],[871,31,658,31],[872,12,659,12],[872,16,659,16,"error"],[872,21,659,21],[872,23,659,23],[873,14,660,16],[873,21,660,23],[874,16,660,25,"data"],[874,20,660,29],[874,22,660,31],[875,18,660,33,"user"],[875,22,660,37],[875,24,660,39],[875,28,660,43],[876,18,660,45,"session"],[876,25,660,52],[876,27,660,54],[877,16,660,59],[877,17,660,60],[878,16,660,62,"error"],[879,14,660,68],[879,15,660,69],[880,12,661,12],[880,13,661,13],[880,19,662,17],[880,23,662,21],[880,24,662,22,"data"],[880,28,662,26],[880,32,662,30],[880,33,662,31,"data"],[880,37,662,35],[880,38,662,36,"session"],[880,45,662,43],[880,49,662,47],[880,50,662,48,"data"],[880,54,662,52],[880,55,662,53,"user"],[880,59,662,57],[880,61,662,59],[881,14,663,16],[881,21,663,23],[882,16,664,20,"data"],[882,20,664,24],[882,22,664,26],[883,18,664,28,"user"],[883,22,664,32],[883,24,664,34],[883,28,664,38],[884,18,664,40,"session"],[884,25,664,47],[884,27,664,49],[885,16,664,54],[885,17,664,55],[886,16,665,20,"error"],[886,21,665,25],[886,23,665,27],[886,27,665,31,"errors_1"],[886,35,665,39],[886,36,665,40,"AuthInvalidTokenResponseError"],[886,65,665,69],[886,66,665,70],[887,14,666,16],[887,15,666,17],[888,12,667,12],[889,12,668,12],[889,16,668,16,"data"],[889,20,668,20],[889,21,668,21,"session"],[889,28,668,28],[889,30,668,30],[890,14,669,16],[890,20,669,22],[890,24,669,26],[890,25,669,27,"_saveSession"],[890,37,669,39],[890,38,669,40,"data"],[890,42,669,44],[890,43,669,45,"session"],[890,50,669,52],[890,51,669,53],[891,14,670,16],[891,20,670,22],[891,24,670,26],[891,25,670,27,"_notifyAllSubscribers"],[891,46,670,48],[891,47,670,49],[891,58,670,60],[891,60,670,62,"data"],[891,64,670,66],[891,65,670,67,"session"],[891,72,670,74],[891,73,670,75],[892,12,671,12],[893,12,672,12],[893,19,672,19],[894,14,672,21,"data"],[894,18,672,25],[895,14,672,27,"error"],[896,12,672,33],[896,13,672,34],[897,10,673,8],[897,11,673,9],[897,12,674,8],[897,19,674,15,"error"],[897,24,674,20],[897,26,674,22],[898,12,675,12],[898,16,675,16],[898,17,675,17],[898,18,675,18],[898,20,675,20,"errors_1"],[898,28,675,28],[898,29,675,29,"isAuthError"],[898,40,675,40],[898,42,675,42,"error"],[898,47,675,47],[898,48,675,48],[898,50,675,50],[899,14,676,16],[899,21,676,23],[900,16,676,25,"data"],[900,20,676,29],[900,22,676,31],[901,18,676,33,"user"],[901,22,676,37],[901,24,676,39],[901,28,676,43],[902,18,676,45,"session"],[902,25,676,52],[902,27,676,54],[903,16,676,59],[903,17,676,60],[904,16,676,62,"error"],[905,14,676,68],[905,15,676,69],[906,12,677,12],[907,12,678,12],[907,18,678,18,"error"],[907,23,678,23],[908,10,679,8],[909,8,680,4],[909,9,680,5],[910,8,680,5],[910,17,644,10,"signInWithIdToken"],[910,34,644,27,"signInWithIdToken"],[910,35,644,27,"_x11"],[910,39,644,27],[911,10,644,27],[911,17,644,27,"_signInWithIdToken"],[911,35,644,27],[911,36,644,27,"apply"],[911,41,644,27],[911,48,644,27,"arguments"],[911,57,644,27],[912,8,644,27],[913,8,644,27],[913,15,644,10,"signInWithIdToken"],[913,32,644,27],[914,6,644,27],[915,6,681,4],[916,0,682,0],[917,0,683,0],[918,0,684,0],[919,0,685,0],[920,0,686,0],[921,0,687,0],[922,0,688,0],[923,0,689,0],[924,0,690,0],[925,0,691,0],[926,0,692,0],[927,0,693,0],[928,0,694,0],[929,0,695,0],[930,0,696,0],[931,0,697,0],[932,6,681,4],[933,4,681,4],[934,6,681,4,"key"],[934,9,681,4],[935,6,681,4,"value"],[935,11,681,4],[936,8,681,4],[936,12,681,4,"_signInWithOtp"],[936,26,681,4],[936,29,681,4,"_asyncToGenerator"],[936,46,681,4],[936,47,698,4],[936,58,698,24,"credentials"],[936,69,698,35],[936,71,698,37],[937,10,699,8],[937,14,699,12,"_a"],[937,16,699,14],[937,18,699,16,"_b"],[937,20,699,18],[937,22,699,20,"_c"],[937,24,699,22],[937,26,699,24,"_d"],[937,28,699,26],[937,30,699,28,"_e"],[937,32,699,30],[938,10,700,8],[938,14,700,12],[939,12,701,12],[939,16,701,16],[939,23,701,23],[939,27,701,27,"credentials"],[939,38,701,38],[939,40,701,40],[940,14,702,16],[940,18,702,24,"email"],[940,23,702,29],[940,26,702,43,"credentials"],[940,37,702,54],[940,38,702,24,"email"],[940,43,702,29],[941,16,702,31,"options"],[941,23,702,38],[941,26,702,43,"credentials"],[941,37,702,54],[941,38,702,31,"options"],[941,45,702,38],[942,14,703,16],[942,18,703,20,"codeChallenge"],[942,31,703,33],[942,34,703,36],[942,38,703,40],[943,14,704,16],[943,18,704,20,"codeChallengeMethod"],[943,37,704,39],[943,40,704,42],[943,44,704,46],[944,14,705,16],[944,18,705,20],[944,22,705,24],[944,23,705,25,"flowType"],[944,31,705,33],[944,36,705,38],[944,42,705,44],[944,44,705,46],[945,16,706,20],[946,16,706,21],[946,20,706,21,"_yield5"],[946,27,706,21],[946,36,707,65],[946,37,707,66],[946,38,707,67],[946,40,707,69,"helpers_1"],[946,49,707,78],[946,50,707,79,"getCodeChallengeAndMethod"],[946,75,707,104],[946,77,707,106],[946,81,707,110],[946,82,707,111,"storage"],[946,89,707,118],[946,91,707,120],[946,95,707,124],[946,96,707,125,"storageKey"],[946,106,707,135],[946,107,707,136],[947,16,707,136],[947,20,707,136,"_yield6"],[947,27,707,136],[947,30,707,136,"_slicedToArray"],[947,44,707,136],[947,45,707,136,"_yield5"],[947,52,707,136],[948,16,707,21,"codeChallenge"],[948,29,707,34],[948,32,707,34,"_yield6"],[948,39,707,34],[949,16,707,36,"codeChallengeMethod"],[949,35,707,55],[949,38,707,55,"_yield6"],[949,45,707,55],[950,14,708,16],[951,14,709,16],[951,18,709,16,"_yield7"],[951,25,709,16],[951,34,709,40],[951,35,709,41],[951,36,709,42],[951,38,709,44,"fetch_1"],[951,45,709,51],[951,46,709,52,"_request"],[951,54,709,60],[951,56,709,62],[951,60,709,66],[951,61,709,67,"fetch"],[951,66,709,72],[951,68,709,74],[951,74,709,80],[951,76,709,82],[951,79,709,85],[951,83,709,89],[951,84,709,90,"url"],[951,87,709,93],[951,93,709,99],[951,95,709,101],[952,18,710,20,"headers"],[952,25,710,27],[952,27,710,29],[952,31,710,33],[952,32,710,34,"headers"],[952,39,710,41],[953,18,711,20,"body"],[953,22,711,24],[953,24,711,26],[954,20,712,24,"email"],[954,25,712,29],[955,20,713,24,"data"],[955,24,713,28],[955,26,713,30],[955,27,713,31,"_a"],[955,29,713,33],[955,32,713,36,"options"],[955,39,713,43],[955,44,713,48],[955,48,713,52],[955,52,713,56,"options"],[955,59,713,63],[955,64,713,68],[955,69,713,73],[955,70,713,74],[955,73,713,77],[955,78,713,82],[955,79,713,83],[955,82,713,86,"options"],[955,89,713,93],[955,90,713,94,"data"],[955,94,713,98],[955,100,713,104],[955,104,713,108],[955,108,713,112,"_a"],[955,110,713,114],[955,115,713,119],[955,120,713,124],[955,121,713,125],[955,124,713,128,"_a"],[955,126,713,130],[955,129,713,133],[955,130,713,134],[955,131,713,135],[956,20,714,24,"create_user"],[956,31,714,35],[956,33,714,37],[956,34,714,38,"_b"],[956,36,714,40],[956,39,714,43,"options"],[956,46,714,50],[956,51,714,55],[956,55,714,59],[956,59,714,63,"options"],[956,66,714,70],[956,71,714,75],[956,76,714,80],[956,77,714,81],[956,80,714,84],[956,85,714,89],[956,86,714,90],[956,89,714,93,"options"],[956,96,714,100],[956,97,714,101,"shouldCreateUser"],[956,113,714,117],[956,119,714,123],[956,123,714,127],[956,127,714,131,"_b"],[956,129,714,133],[956,134,714,138],[956,139,714,143],[956,140,714,144],[956,143,714,147,"_b"],[956,145,714,149],[956,148,714,152],[956,152,714,156],[957,20,715,24,"gotrue_meta_security"],[957,40,715,44],[957,42,715,46],[958,22,715,48,"captcha_token"],[958,35,715,61],[958,37,715,63,"options"],[958,44,715,70],[958,49,715,75],[958,53,715,79],[958,57,715,83,"options"],[958,64,715,90],[958,69,715,95],[958,74,715,100],[958,75,715,101],[958,78,715,104],[958,83,715,109],[958,84,715,110],[958,87,715,113,"options"],[958,94,715,120],[958,95,715,121,"captchaToken"],[959,20,715,134],[959,21,715,135],[960,20,716,24,"code_challenge"],[960,34,716,38],[960,36,716,40,"codeChallenge"],[960,49,716,53],[961,20,717,24,"code_challenge_method"],[961,41,717,45],[961,43,717,47,"codeChallengeMethod"],[962,18,718,20],[962,19,718,21],[963,18,719,20,"redirectTo"],[963,28,719,30],[963,30,719,32,"options"],[963,37,719,39],[963,42,719,44],[963,46,719,48],[963,50,719,52,"options"],[963,57,719,59],[963,62,719,64],[963,67,719,69],[963,68,719,70],[963,71,719,73],[963,76,719,78],[963,77,719,79],[963,80,719,82,"options"],[963,87,719,89],[963,88,719,90,"emailRedirectTo"],[964,16,720,16],[964,17,720,17],[964,18,720,18],[965,16,709,24,"error"],[965,21,709,29],[965,24,709,29,"_yield7"],[965,31,709,29],[965,32,709,24,"error"],[965,37,709,29],[966,14,721,16],[966,21,721,23],[967,16,721,25,"data"],[967,20,721,29],[967,22,721,31],[968,18,721,33,"user"],[968,22,721,37],[968,24,721,39],[968,28,721,43],[969,18,721,45,"session"],[969,25,721,52],[969,27,721,54],[970,16,721,59],[970,17,721,60],[971,16,721,62,"error"],[972,14,721,68],[972,15,721,69],[973,12,722,12],[974,12,723,12],[974,16,723,16],[974,23,723,23],[974,27,723,27,"credentials"],[974,38,723,38],[974,40,723,40],[975,14,724,16],[975,18,724,24,"phone"],[975,23,724,29],[975,26,724,43,"credentials"],[975,37,724,54],[975,38,724,24,"phone"],[975,43,724,29],[976,16,724,31,"options"],[976,25,724,38],[976,28,724,43,"credentials"],[976,39,724,54],[976,40,724,31,"options"],[976,47,724,38],[977,14,725,16],[977,18,725,16,"_yield8"],[977,25,725,16],[977,34,725,46],[977,35,725,47],[977,36,725,48],[977,38,725,50,"fetch_1"],[977,45,725,57],[977,46,725,58,"_request"],[977,54,725,66],[977,56,725,68],[977,60,725,72],[977,61,725,73,"fetch"],[977,66,725,78],[977,68,725,80],[977,74,725,86],[977,76,725,88],[977,79,725,91],[977,83,725,95],[977,84,725,96,"url"],[977,87,725,99],[977,93,725,105],[977,95,725,107],[978,18,726,20,"headers"],[978,25,726,27],[978,27,726,29],[978,31,726,33],[978,32,726,34,"headers"],[978,39,726,41],[979,18,727,20,"body"],[979,22,727,24],[979,24,727,26],[980,20,728,24,"phone"],[980,25,728,29],[981,20,729,24,"data"],[981,24,729,28],[981,26,729,30],[981,27,729,31,"_c"],[981,29,729,33],[981,32,729,36,"options"],[981,41,729,43],[981,46,729,48],[981,50,729,52],[981,54,729,56,"options"],[981,63,729,63],[981,68,729,68],[981,73,729,73],[981,74,729,74],[981,77,729,77],[981,82,729,82],[981,83,729,83],[981,86,729,86,"options"],[981,95,729,93],[981,96,729,94,"data"],[981,100,729,98],[981,106,729,104],[981,110,729,108],[981,114,729,112,"_c"],[981,116,729,114],[981,121,729,119],[981,126,729,124],[981,127,729,125],[981,130,729,128,"_c"],[981,132,729,130],[981,135,729,133],[981,136,729,134],[981,137,729,135],[982,20,730,24,"create_user"],[982,31,730,35],[982,33,730,37],[982,34,730,38,"_d"],[982,36,730,40],[982,39,730,43,"options"],[982,48,730,50],[982,53,730,55],[982,57,730,59],[982,61,730,63,"options"],[982,70,730,70],[982,75,730,75],[982,80,730,80],[982,81,730,81],[982,84,730,84],[982,89,730,89],[982,90,730,90],[982,93,730,93,"options"],[982,102,730,100],[982,103,730,101,"shouldCreateUser"],[982,119,730,117],[982,125,730,123],[982,129,730,127],[982,133,730,131,"_d"],[982,135,730,133],[982,140,730,138],[982,145,730,143],[982,146,730,144],[982,149,730,147,"_d"],[982,151,730,149],[982,154,730,152],[982,158,730,156],[983,20,731,24,"gotrue_meta_security"],[983,40,731,44],[983,42,731,46],[984,22,731,48,"captcha_token"],[984,35,731,61],[984,37,731,63,"options"],[984,46,731,70],[984,51,731,75],[984,55,731,79],[984,59,731,83,"options"],[984,68,731,90],[984,73,731,95],[984,78,731,100],[984,79,731,101],[984,82,731,104],[984,87,731,109],[984,88,731,110],[984,91,731,113,"options"],[984,100,731,120],[984,101,731,121,"captchaToken"],[985,20,731,134],[985,21,731,135],[986,20,732,24,"channel"],[986,27,732,31],[986,29,732,33],[986,30,732,34,"_e"],[986,32,732,36],[986,35,732,39,"options"],[986,44,732,46],[986,49,732,51],[986,53,732,55],[986,57,732,59,"options"],[986,66,732,66],[986,71,732,71],[986,76,732,76],[986,77,732,77],[986,80,732,80],[986,85,732,85],[986,86,732,86],[986,89,732,89,"options"],[986,98,732,96],[986,99,732,97,"channel"],[986,106,732,104],[986,112,732,110],[986,116,732,114],[986,120,732,118,"_e"],[986,122,732,120],[986,127,732,125],[986,132,732,130],[986,133,732,131],[986,136,732,134,"_e"],[986,138,732,136],[986,141,732,139],[987,18,733,20],[988,16,734,16],[988,17,734,17],[988,18,734,18],[989,16,725,24,"data"],[989,20,725,28],[989,23,725,28,"_yield8"],[989,30,725,28],[989,31,725,24,"data"],[989,35,725,28],[990,16,725,30,"error"],[990,22,725,35],[990,25,725,35,"_yield8"],[990,32,725,35],[990,33,725,30,"error"],[990,38,725,35],[991,14,735,16],[991,21,735,23],[992,16,735,25,"data"],[992,20,735,29],[992,22,735,31],[993,18,735,33,"user"],[993,22,735,37],[993,24,735,39],[993,28,735,43],[994,18,735,45,"session"],[994,25,735,52],[994,27,735,54],[994,31,735,58],[995,18,735,60,"messageId"],[995,27,735,69],[995,29,735,71,"data"],[995,33,735,75],[995,38,735,80],[995,42,735,84],[995,46,735,88,"data"],[995,50,735,92],[995,55,735,97],[995,60,735,102],[995,61,735,103],[995,64,735,106],[995,69,735,111],[995,70,735,112],[995,73,735,115,"data"],[995,77,735,119],[995,78,735,120,"message_id"],[996,16,735,131],[996,17,735,132],[997,16,735,134,"error"],[997,21,735,139],[997,23,735,134,"error"],[998,14,735,140],[998,15,735,141],[999,12,736,12],[1000,12,737,12],[1000,18,737,18],[1000,22,737,22,"errors_1"],[1000,30,737,30],[1000,31,737,31,"AuthInvalidCredentialsError"],[1000,58,737,58],[1000,59,737,59],[1000,110,737,110],[1000,111,737,111],[1001,10,738,8],[1001,11,738,9],[1001,12,739,8],[1001,19,739,15,"error"],[1001,24,739,20],[1001,26,739,22],[1002,12,740,12],[1002,16,740,16],[1002,17,740,17],[1002,18,740,18],[1002,20,740,20,"errors_1"],[1002,28,740,28],[1002,29,740,29,"isAuthError"],[1002,40,740,40],[1002,42,740,42,"error"],[1002,47,740,47],[1002,48,740,48],[1002,50,740,50],[1003,14,741,16],[1003,21,741,23],[1004,16,741,25,"data"],[1004,20,741,29],[1004,22,741,31],[1005,18,741,33,"user"],[1005,22,741,37],[1005,24,741,39],[1005,28,741,43],[1006,18,741,45,"session"],[1006,25,741,52],[1006,27,741,54],[1007,16,741,59],[1007,17,741,60],[1008,16,741,62,"error"],[1009,14,741,68],[1009,15,741,69],[1010,12,742,12],[1011,12,743,12],[1011,18,743,18,"error"],[1011,23,743,23],[1012,10,744,8],[1013,8,745,4],[1013,9,745,5],[1014,8,745,5],[1014,17,698,10,"signInWithOtp"],[1014,30,698,23,"signInWithOtp"],[1014,31,698,23,"_x12"],[1014,35,698,23],[1015,10,698,23],[1015,17,698,23,"_signInWithOtp"],[1015,31,698,23],[1015,32,698,23,"apply"],[1015,37,698,23],[1015,44,698,23,"arguments"],[1015,53,698,23],[1016,8,698,23],[1017,8,698,23],[1017,15,698,10,"signInWithOtp"],[1017,28,698,23],[1018,6,698,23],[1019,6,746,4],[1020,0,747,0],[1021,0,748,0],[1022,6,746,4],[1023,4,746,4],[1024,6,746,4,"key"],[1024,9,746,4],[1025,6,746,4,"value"],[1025,11,746,4],[1026,8,746,4],[1026,12,746,4,"_verifyOtp"],[1026,22,746,4],[1026,25,746,4,"_asyncToGenerator"],[1026,42,746,4],[1026,43,749,4],[1026,54,749,20,"params"],[1026,60,749,26],[1026,62,749,28],[1027,10,750,8],[1027,14,750,12,"_a"],[1027,16,750,14],[1027,18,750,16,"_b"],[1027,20,750,18],[1028,10,751,8],[1028,14,751,12],[1029,12,752,12],[1029,16,752,16,"redirectTo"],[1029,26,752,26],[1029,29,752,29,"undefined"],[1029,38,752,38],[1030,12,753,12],[1030,16,753,16,"captchaToken"],[1030,28,753,28],[1030,31,753,31,"undefined"],[1030,40,753,40],[1031,12,754,12],[1031,16,754,16],[1031,25,754,25],[1031,29,754,29,"params"],[1031,35,754,35],[1031,37,754,37],[1032,14,755,16,"redirectTo"],[1032,24,755,26],[1032,27,755,29],[1032,28,755,30,"_a"],[1032,30,755,32],[1032,33,755,35,"params"],[1032,39,755,41],[1032,40,755,42,"options"],[1032,47,755,49],[1032,53,755,55],[1032,57,755,59],[1032,61,755,63,"_a"],[1032,63,755,65],[1032,68,755,70],[1032,73,755,75],[1032,74,755,76],[1032,77,755,79],[1032,82,755,84],[1032,83,755,85],[1032,86,755,88,"_a"],[1032,88,755,90],[1032,89,755,91,"redirectTo"],[1032,99,755,101],[1033,14,756,16,"captchaToken"],[1033,26,756,28],[1033,29,756,31],[1033,30,756,32,"_b"],[1033,32,756,34],[1033,35,756,37,"params"],[1033,41,756,43],[1033,42,756,44,"options"],[1033,49,756,51],[1033,55,756,57],[1033,59,756,61],[1033,63,756,65,"_b"],[1033,65,756,67],[1033,70,756,72],[1033,75,756,77],[1033,76,756,78],[1033,79,756,81],[1033,84,756,86],[1033,85,756,87],[1033,88,756,90,"_b"],[1033,90,756,92],[1033,91,756,93,"captchaToken"],[1033,103,756,105],[1034,12,757,12],[1035,12,758,12],[1035,16,758,12,"_yield9"],[1035,23,758,12],[1035,32,758,42],[1035,33,758,43],[1035,34,758,44],[1035,36,758,46,"fetch_1"],[1035,43,758,53],[1035,44,758,54,"_request"],[1035,52,758,62],[1035,54,758,64],[1035,58,758,68],[1035,59,758,69,"fetch"],[1035,64,758,74],[1035,66,758,76],[1035,72,758,82],[1035,74,758,84],[1035,77,758,87],[1035,81,758,91],[1035,82,758,92,"url"],[1035,85,758,95],[1035,94,758,104],[1035,96,758,106],[1036,16,759,16,"headers"],[1036,23,759,23],[1036,25,759,25],[1036,29,759,29],[1036,30,759,30,"headers"],[1036,37,759,37],[1037,16,760,16,"body"],[1037,20,760,20],[1037,22,760,22,"Object"],[1037,28,760,28],[1037,29,760,29,"assign"],[1037,35,760,35],[1037,36,760,36,"Object"],[1037,42,760,42],[1037,43,760,43,"assign"],[1037,49,760,49],[1037,50,760,50],[1037,51,760,51],[1037,52,760,52],[1037,54,760,54,"params"],[1037,60,760,60],[1037,61,760,61],[1037,63,760,63],[1038,18,760,65,"gotrue_meta_security"],[1038,38,760,85],[1038,40,760,87],[1039,20,760,89,"captcha_token"],[1039,33,760,102],[1039,35,760,104,"captchaToken"],[1040,18,760,117],[1041,16,760,119],[1041,17,760,120],[1041,18,760,121],[1042,16,761,16,"redirectTo"],[1042,26,761,26],[1043,16,762,16,"xform"],[1043,21,762,21],[1043,23,762,23,"fetch_1"],[1043,30,762,30],[1043,31,762,31,"_sessionResponse"],[1044,14,763,12],[1044,15,763,13],[1044,16,763,14],[1045,14,758,20,"data"],[1045,18,758,24],[1045,21,758,24,"_yield9"],[1045,28,758,24],[1045,29,758,20,"data"],[1045,33,758,24],[1046,14,758,26,"error"],[1046,19,758,31],[1046,22,758,31,"_yield9"],[1046,29,758,31],[1046,30,758,26,"error"],[1046,35,758,31],[1047,12,764,12],[1047,16,764,16,"error"],[1047,21,764,21],[1047,23,764,23],[1048,14,765,16],[1048,20,765,22,"error"],[1048,25,765,27],[1049,12,766,12],[1050,12,767,12],[1050,16,767,16],[1050,17,767,17,"data"],[1050,21,767,21],[1050,23,767,23],[1051,14,768,16],[1051,20,768,22],[1051,24,768,26,"Error"],[1051,29,768,31],[1051,30,768,32],[1051,72,768,74],[1051,73,768,75],[1052,12,769,12],[1053,12,770,12],[1053,16,770,18,"session"],[1053,23,770,25],[1053,26,770,28,"data"],[1053,30,770,32],[1053,31,770,33,"session"],[1053,38,770,40],[1054,12,771,12],[1054,16,771,18,"user"],[1054,20,771,22],[1054,23,771,25,"data"],[1054,27,771,29],[1054,28,771,30,"user"],[1054,32,771,34],[1055,12,772,12],[1055,16,772,16,"session"],[1055,23,772,23],[1055,28,772,28],[1055,32,772,32],[1055,36,772,36,"session"],[1055,43,772,43],[1055,48,772,48],[1055,53,772,53],[1055,54,772,54],[1055,57,772,57],[1055,62,772,62],[1055,63,772,63],[1055,66,772,66,"session"],[1055,73,772,73],[1055,74,772,74,"access_token"],[1055,86,772,86],[1055,88,772,88],[1056,14,773,16],[1056,20,773,22],[1056,24,773,26],[1056,25,773,27,"_saveSession"],[1056,37,773,39],[1056,38,773,40,"session"],[1056,45,773,47],[1056,46,773,48],[1057,14,774,16],[1057,20,774,22],[1057,24,774,26],[1057,25,774,27,"_notifyAllSubscribers"],[1057,46,774,48],[1057,47,774,49,"params"],[1057,53,774,55],[1057,54,774,56,"type"],[1057,58,774,60],[1057,62,774,64],[1057,72,774,74],[1057,75,774,77],[1057,94,774,96],[1057,97,774,99],[1057,108,774,110],[1057,110,774,112,"session"],[1057,117,774,119],[1057,118,774,120],[1058,12,775,12],[1059,12,776,12],[1059,19,776,19],[1060,14,776,21,"data"],[1060,18,776,25],[1060,20,776,27],[1061,16,776,29,"user"],[1061,20,776,33],[1062,16,776,35,"session"],[1063,14,776,43],[1063,15,776,44],[1064,14,776,46,"error"],[1064,19,776,51],[1064,21,776,53],[1065,12,776,58],[1065,13,776,59],[1066,10,777,8],[1066,11,777,9],[1066,12,778,8],[1066,19,778,15,"error"],[1066,24,778,20],[1066,26,778,22],[1067,12,779,12],[1067,16,779,16],[1067,17,779,17],[1067,18,779,18],[1067,20,779,20,"errors_1"],[1067,28,779,28],[1067,29,779,29,"isAuthError"],[1067,40,779,40],[1067,42,779,42,"error"],[1067,47,779,47],[1067,48,779,48],[1067,50,779,50],[1068,14,780,16],[1068,21,780,23],[1069,16,780,25,"data"],[1069,20,780,29],[1069,22,780,31],[1070,18,780,33,"user"],[1070,22,780,37],[1070,24,780,39],[1070,28,780,43],[1071,18,780,45,"session"],[1071,25,780,52],[1071,27,780,54],[1072,16,780,59],[1072,17,780,60],[1073,16,780,62,"error"],[1074,14,780,68],[1074,15,780,69],[1075,12,781,12],[1076,12,782,12],[1076,18,782,18,"error"],[1076,23,782,23],[1077,10,783,8],[1078,8,784,4],[1078,9,784,5],[1079,8,784,5],[1079,17,749,10,"verifyOtp"],[1079,26,749,19,"verifyOtp"],[1079,27,749,19,"_x13"],[1079,31,749,19],[1080,10,749,19],[1080,17,749,19,"_verifyOtp"],[1080,27,749,19],[1080,28,749,19,"apply"],[1080,33,749,19],[1080,40,749,19,"arguments"],[1080,49,749,19],[1081,8,749,19],[1082,8,749,19],[1082,15,749,10,"verifyOtp"],[1082,24,749,19],[1083,6,749,19],[1084,6,785,4],[1085,0,786,0],[1086,0,787,0],[1087,0,788,0],[1088,0,789,0],[1089,0,790,0],[1090,0,791,0],[1091,0,792,0],[1092,0,793,0],[1093,0,794,0],[1094,0,795,0],[1095,0,796,0],[1096,0,797,0],[1097,0,798,0],[1098,6,785,4],[1099,4,785,4],[1100,6,785,4,"key"],[1100,9,785,4],[1101,6,785,4,"value"],[1101,11,785,4],[1102,8,785,4],[1102,12,785,4,"_signInWithSSO"],[1102,26,785,4],[1102,29,785,4,"_asyncToGenerator"],[1102,46,785,4],[1102,47,799,4],[1102,58,799,24,"params"],[1102,64,799,30],[1102,66,799,32],[1103,10,800,8],[1103,14,800,12,"_a"],[1103,16,800,14],[1103,18,800,16,"_b"],[1103,20,800,18],[1103,22,800,20,"_c"],[1103,24,800,22],[1104,10,801,8],[1104,14,801,12],[1105,12,802,12],[1105,16,802,16,"codeChallenge"],[1105,29,802,29],[1105,32,802,32],[1105,36,802,36],[1106,12,803,12],[1106,16,803,16,"codeChallengeMethod"],[1106,35,803,35],[1106,38,803,38],[1106,42,803,42],[1107,12,804,12],[1107,16,804,16],[1107,20,804,20],[1107,21,804,21,"flowType"],[1107,29,804,29],[1107,34,804,34],[1107,40,804,40],[1107,42,804,42],[1108,14,805,16],[1109,14,805,17],[1109,18,805,17,"_yield0"],[1109,25,805,17],[1109,34,806,61],[1109,35,806,62],[1109,36,806,63],[1109,38,806,65,"helpers_1"],[1109,47,806,74],[1109,48,806,75,"getCodeChallengeAndMethod"],[1109,73,806,100],[1109,75,806,102],[1109,79,806,106],[1109,80,806,107,"storage"],[1109,87,806,114],[1109,89,806,116],[1109,93,806,120],[1109,94,806,121,"storageKey"],[1109,104,806,131],[1109,105,806,132],[1110,14,806,132],[1110,18,806,132,"_yield1"],[1110,25,806,132],[1110,28,806,132,"_slicedToArray"],[1110,42,806,132],[1110,43,806,132,"_yield0"],[1110,50,806,132],[1111,14,806,17,"codeChallenge"],[1111,27,806,30],[1111,30,806,30,"_yield1"],[1111,37,806,30],[1112,14,806,32,"codeChallengeMethod"],[1112,33,806,51],[1112,36,806,51,"_yield1"],[1112,43,806,51],[1113,12,807,12],[1114,12,808,12],[1114,25,808,25],[1114,26,808,26],[1114,27,808,27],[1114,29,808,29,"fetch_1"],[1114,36,808,36],[1114,37,808,37,"_request"],[1114,45,808,45],[1114,47,808,47],[1114,51,808,51],[1114,52,808,52,"fetch"],[1114,57,808,57],[1114,59,808,59],[1114,65,808,65],[1114,67,808,67],[1114,70,808,70],[1114,74,808,74],[1114,75,808,75,"url"],[1114,78,808,78],[1114,84,808,84],[1114,86,808,86],[1115,14,809,16,"body"],[1115,18,809,20],[1115,20,809,22,"Object"],[1115,26,809,28],[1115,27,809,29,"assign"],[1115,33,809,35],[1115,34,809,36,"Object"],[1115,40,809,42],[1115,41,809,43,"assign"],[1115,47,809,49],[1115,48,809,50,"Object"],[1115,54,809,56],[1115,55,809,57,"assign"],[1115,61,809,63],[1115,62,809,64,"Object"],[1115,68,809,70],[1115,69,809,71,"assign"],[1115,75,809,77],[1115,76,809,78,"Object"],[1115,82,809,84],[1115,83,809,85,"assign"],[1115,89,809,91],[1115,90,809,92],[1115,91,809,93],[1115,92,809,94],[1115,94,809,97],[1115,106,809,109],[1115,110,809,113,"params"],[1115,116,809,119],[1115,119,809,122],[1116,16,809,124,"provider_id"],[1116,27,809,135],[1116,29,809,137,"params"],[1116,35,809,143],[1116,36,809,144,"providerId"],[1117,14,809,155],[1117,15,809,156],[1117,18,809,159],[1117,22,809,164],[1117,23,809,165],[1117,25,809,168],[1117,33,809,176],[1117,37,809,180,"params"],[1117,43,809,186],[1117,46,809,189],[1118,16,809,191,"domain"],[1118,22,809,197],[1118,24,809,199,"params"],[1118,30,809,205],[1118,31,809,206,"domain"],[1119,14,809,213],[1119,15,809,214],[1119,18,809,217],[1119,22,809,222],[1119,23,809,223],[1119,25,809,225],[1120,16,809,227,"redirect_to"],[1120,27,809,238],[1120,29,809,240],[1120,30,809,241,"_b"],[1120,32,809,243],[1120,35,809,246],[1120,36,809,247,"_a"],[1120,38,809,249],[1120,41,809,252,"params"],[1120,47,809,258],[1120,48,809,259,"options"],[1120,55,809,266],[1120,61,809,272],[1120,65,809,276],[1120,69,809,280,"_a"],[1120,71,809,282],[1120,76,809,287],[1120,81,809,292],[1120,82,809,293],[1120,85,809,296],[1120,90,809,301],[1120,91,809,302],[1120,94,809,305,"_a"],[1120,96,809,307],[1120,97,809,308,"redirectTo"],[1120,107,809,318],[1120,113,809,324],[1120,117,809,328],[1120,121,809,332,"_b"],[1120,123,809,334],[1120,128,809,339],[1120,133,809,344],[1120,134,809,345],[1120,137,809,348,"_b"],[1120,139,809,350],[1120,142,809,353,"undefined"],[1121,14,809,363],[1121,15,809,364],[1121,16,809,365],[1121,18,809,368],[1121,19,809,369],[1121,20,809,370,"_c"],[1121,22,809,372],[1121,25,809,375,"params"],[1121,31,809,381],[1121,36,809,386],[1121,40,809,390],[1121,44,809,394,"params"],[1121,50,809,400],[1121,55,809,405],[1121,60,809,410],[1121,61,809,411],[1121,64,809,414],[1121,69,809,419],[1121,70,809,420],[1121,73,809,423,"params"],[1121,79,809,429],[1121,80,809,430,"options"],[1121,87,809,437],[1121,93,809,443],[1121,97,809,447],[1121,101,809,451,"_c"],[1121,103,809,453],[1121,108,809,458],[1121,113,809,463],[1121,114,809,464],[1121,117,809,467],[1121,122,809,472],[1121,123,809,473],[1121,126,809,476,"_c"],[1121,128,809,478],[1121,129,809,479,"captchaToken"],[1121,141,809,491],[1121,145,810,22],[1122,16,810,24,"gotrue_meta_security"],[1122,36,810,44],[1122,38,810,46],[1123,18,810,48,"captcha_token"],[1123,31,810,61],[1123,33,810,63,"params"],[1123,39,810,69],[1123,40,810,70,"options"],[1123,47,810,77],[1123,48,810,78,"captchaToken"],[1124,16,810,91],[1125,14,810,93],[1125,15,810,94],[1125,18,811,22],[1125,22,811,27],[1125,23,811,28],[1125,25,811,30],[1126,16,811,32,"skip_http_redirect"],[1126,34,811,50],[1126,36,811,52],[1126,40,811,56],[1127,16,811,58,"code_challenge"],[1127,30,811,72],[1127,32,811,74,"codeChallenge"],[1127,45,811,87],[1128,16,811,89,"code_challenge_method"],[1128,37,811,110],[1128,39,811,112,"codeChallengeMethod"],[1129,14,811,132],[1129,15,811,133],[1129,16,811,134],[1130,14,812,16,"headers"],[1130,21,812,23],[1130,23,812,25],[1130,27,812,29],[1130,28,812,30,"headers"],[1130,35,812,37],[1131,14,813,16,"xform"],[1131,19,813,21],[1131,21,813,23,"fetch_1"],[1131,28,813,30],[1131,29,813,31,"_ssoResponse"],[1132,12,814,12],[1132,13,814,13],[1132,14,814,14],[1133,10,815,8],[1133,11,815,9],[1133,12,816,8],[1133,19,816,15,"error"],[1133,24,816,20],[1133,26,816,22],[1134,12,817,12],[1134,16,817,16],[1134,17,817,17],[1134,18,817,18],[1134,20,817,20,"errors_1"],[1134,28,817,28],[1134,29,817,29,"isAuthError"],[1134,40,817,40],[1134,42,817,42,"error"],[1134,47,817,47],[1134,48,817,48],[1134,50,817,50],[1135,14,818,16],[1135,21,818,23],[1136,16,818,25,"data"],[1136,20,818,29],[1136,22,818,31],[1136,26,818,35],[1137,16,818,37,"error"],[1138,14,818,43],[1138,15,818,44],[1139,12,819,12],[1140,12,820,12],[1140,18,820,18,"error"],[1140,23,820,23],[1141,10,821,8],[1142,8,822,4],[1142,9,822,5],[1143,8,822,5],[1143,17,799,10,"signInWithSSO"],[1143,30,799,23,"signInWithSSO"],[1143,31,799,23,"_x14"],[1143,35,799,23],[1144,10,799,23],[1144,17,799,23,"_signInWithSSO"],[1144,31,799,23],[1144,32,799,23,"apply"],[1144,37,799,23],[1144,44,799,23,"arguments"],[1144,53,799,23],[1145,8,799,23],[1146,8,799,23],[1146,15,799,10,"signInWithSSO"],[1146,28,799,23],[1147,6,799,23],[1148,6,823,4],[1149,0,824,0],[1150,0,825,0],[1151,0,826,0],[1152,6,823,4],[1153,4,823,4],[1154,6,823,4,"key"],[1154,9,823,4],[1155,6,823,4,"value"],[1155,11,823,4],[1156,8,823,4],[1156,12,823,4,"_reauthenticate2"],[1156,28,823,4],[1156,31,823,4,"_asyncToGenerator"],[1156,48,823,4],[1156,49,827,4],[1156,62,827,27],[1157,10,827,27],[1157,14,827,27,"_this5"],[1157,20,827,27],[1158,10,828,8],[1158,16,828,14],[1158,20,828,18],[1158,21,828,19,"initializePromise"],[1158,38,828,36],[1159,10,829,8],[1159,23,829,21],[1159,27,829,25],[1159,28,829,26,"_acquireLock"],[1159,40,829,38],[1159,41,829,39],[1159,42,829,40],[1159,43,829,41],[1159,58,829,41,"_asyncToGenerator"],[1159,75,829,41],[1159,76,829,43],[1159,89,829,55],[1160,12,830,12],[1160,25,830,25,"_this5"],[1160,31,830,29],[1160,32,830,30,"_reauthenticate"],[1160,47,830,45],[1160,48,830,46],[1160,49,830,47],[1161,10,831,8],[1161,11,831,9],[1161,13,831,10],[1162,8,832,4],[1162,9,832,5],[1163,8,832,5],[1163,17,827,10,"reauthenticate"],[1163,31,827,24,"reauthenticate"],[1163,32,827,24],[1164,10,827,24],[1164,17,827,24,"_reauthenticate2"],[1164,33,827,24],[1164,34,827,24,"apply"],[1164,39,827,24],[1164,46,827,24,"arguments"],[1164,55,827,24],[1165,8,827,24],[1166,8,827,24],[1166,15,827,10,"reauthenticate"],[1166,29,827,24],[1167,6,827,24],[1168,4,827,24],[1169,6,827,24,"key"],[1169,9,827,24],[1170,6,827,24,"value"],[1170,11,827,24],[1171,8,827,24],[1171,12,827,24,"_reauthenticate3"],[1171,28,827,24],[1171,31,827,24,"_asyncToGenerator"],[1171,48,827,24],[1171,49,833,4],[1171,62,833,28],[1172,10,833,28],[1172,14,833,28,"_this6"],[1172,20,833,28],[1173,10,834,8],[1173,14,834,12],[1174,12,835,12],[1174,25,835,25],[1174,29,835,29],[1174,30,835,30,"_useSession"],[1174,41,835,41],[1175,14,835,41],[1175,18,835,41,"_ref7"],[1175,23,835,41],[1175,26,835,41,"_asyncToGenerator"],[1175,43,835,41],[1175,44,835,42],[1175,55,835,49,"result"],[1175,61,835,55],[1175,63,835,60],[1176,16,836,16],[1176,20,836,32,"session"],[1176,27,836,39],[1176,30,836,68,"result"],[1176,36,836,74],[1176,37,836,24,"data"],[1176,41,836,28],[1176,42,836,32,"session"],[1176,49,836,39],[1177,18,836,50,"sessionError"],[1177,30,836,62],[1177,33,836,68,"result"],[1177,39,836,74],[1177,40,836,43,"error"],[1177,45,836,48],[1178,16,837,16],[1178,20,837,20,"sessionError"],[1178,32,837,32],[1178,34,838,20],[1178,40,838,26,"sessionError"],[1178,52,838,38],[1179,16,839,16],[1179,20,839,20],[1179,21,839,21,"session"],[1179,28,839,28],[1179,30,840,20],[1179,36,840,26],[1179,40,840,30,"errors_1"],[1179,48,840,38],[1179,49,840,39,"AuthSessionMissingError"],[1179,72,840,62],[1179,73,840,63],[1179,74,840,64],[1180,16,841,16],[1180,20,841,16,"_yield10"],[1180,28,841,16],[1180,37,841,40],[1180,38,841,41],[1180,39,841,42],[1180,41,841,44,"fetch_1"],[1180,48,841,51],[1180,49,841,52,"_request"],[1180,57,841,60],[1180,59,841,62,"_this6"],[1180,65,841,66],[1180,66,841,67,"fetch"],[1180,71,841,72],[1180,73,841,74],[1180,78,841,79],[1180,80,841,81],[1180,83,841,84,"_this6"],[1180,89,841,88],[1180,90,841,89,"url"],[1180,93,841,92],[1180,110,841,109],[1180,112,841,111],[1181,20,842,20,"headers"],[1181,27,842,27],[1181,29,842,29,"_this6"],[1181,35,842,33],[1181,36,842,34,"headers"],[1181,43,842,41],[1182,20,843,20,"jwt"],[1182,23,843,23],[1182,25,843,25,"session"],[1182,32,843,32],[1182,33,843,33,"access_token"],[1183,18,844,16],[1183,19,844,17],[1183,20,844,18],[1184,18,841,24,"error"],[1184,23,841,29],[1184,26,841,29,"_yield10"],[1184,34,841,29],[1184,35,841,24,"error"],[1184,40,841,29],[1185,16,845,16],[1185,23,845,23],[1186,18,845,25,"data"],[1186,22,845,29],[1186,24,845,31],[1187,20,845,33,"user"],[1187,24,845,37],[1187,26,845,39],[1187,30,845,43],[1188,20,845,45,"session"],[1188,27,845,52],[1188,29,845,54],[1189,18,845,59],[1189,19,845,60],[1190,18,845,62,"error"],[1191,16,845,68],[1191,17,845,69],[1192,14,846,12],[1192,15,846,13],[1193,14,846,13],[1193,31,846,13,"_x15"],[1193,35,846,13],[1194,16,846,13],[1194,23,846,13,"_ref7"],[1194,28,846,13],[1194,29,846,13,"apply"],[1194,34,846,13],[1194,41,846,13,"arguments"],[1194,50,846,13],[1195,14,846,13],[1196,12,846,13],[1196,16,846,14],[1197,10,847,8],[1197,11,847,9],[1197,12,848,8],[1197,19,848,15,"error"],[1197,24,848,20],[1197,26,848,22],[1198,12,849,12],[1198,16,849,16],[1198,17,849,17],[1198,18,849,18],[1198,20,849,20,"errors_1"],[1198,28,849,28],[1198,29,849,29,"isAuthError"],[1198,40,849,40],[1198,42,849,42,"error"],[1198,47,849,47],[1198,48,849,48],[1198,50,849,50],[1199,14,850,16],[1199,21,850,23],[1200,16,850,25,"data"],[1200,20,850,29],[1200,22,850,31],[1201,18,850,33,"user"],[1201,22,850,37],[1201,24,850,39],[1201,28,850,43],[1202,18,850,45,"session"],[1202,25,850,52],[1202,27,850,54],[1203,16,850,59],[1203,17,850,60],[1204,16,850,62,"error"],[1205,14,850,68],[1205,15,850,69],[1206,12,851,12],[1207,12,852,12],[1207,18,852,18,"error"],[1207,23,852,23],[1208,10,853,8],[1209,8,854,4],[1209,9,854,5],[1210,8,854,5],[1210,17,833,10,"_reauthenticate"],[1210,32,833,25,"_reauthenticate"],[1210,33,833,25],[1211,10,833,25],[1211,17,833,25,"_reauthenticate3"],[1211,33,833,25],[1211,34,833,25,"apply"],[1211,39,833,25],[1211,46,833,25,"arguments"],[1211,55,833,25],[1212,8,833,25],[1213,8,833,25],[1213,15,833,10,"_reauthenticate"],[1213,30,833,25],[1214,6,833,25],[1215,6,855,4],[1216,0,856,0],[1217,0,857,0],[1218,4,855,4],[1219,6,855,4,"key"],[1219,9,855,4],[1220,6,855,4,"value"],[1220,11,855,4],[1221,8,855,4],[1221,12,855,4,"_resend"],[1221,19,855,4],[1221,22,855,4,"_asyncToGenerator"],[1221,39,855,4],[1221,40,858,4],[1221,51,858,17,"credentials"],[1221,62,858,28],[1221,64,858,30],[1222,10,859,8],[1222,14,859,12],[1223,12,860,12],[1223,16,860,18,"endpoint"],[1223,24,860,26],[1223,27,860,29],[1223,30,860,32],[1223,34,860,36],[1223,35,860,37,"url"],[1223,38,860,40],[1223,47,860,49],[1224,12,861,12],[1224,16,861,16],[1224,23,861,23],[1224,27,861,27,"credentials"],[1224,38,861,38],[1224,40,861,40],[1225,14,862,16],[1225,18,862,24,"email"],[1225,23,862,29],[1225,26,862,49,"credentials"],[1225,37,862,60],[1225,38,862,24,"email"],[1225,43,862,29],[1226,16,862,31,"type"],[1226,20,862,35],[1226,23,862,49,"credentials"],[1226,34,862,60],[1226,35,862,31,"type"],[1226,39,862,35],[1227,16,862,37,"options"],[1227,23,862,44],[1227,26,862,49,"credentials"],[1227,37,862,60],[1227,38,862,37,"options"],[1227,45,862,44],[1228,14,863,16],[1228,18,863,16,"_yield11"],[1228,26,863,16],[1228,35,863,40],[1228,36,863,41],[1228,37,863,42],[1228,39,863,44,"fetch_1"],[1228,46,863,51],[1228,47,863,52,"_request"],[1228,55,863,60],[1228,57,863,62],[1228,61,863,66],[1228,62,863,67,"fetch"],[1228,67,863,72],[1228,69,863,74],[1228,75,863,80],[1228,77,863,82,"endpoint"],[1228,85,863,90],[1228,87,863,92],[1229,18,864,20,"headers"],[1229,25,864,27],[1229,27,864,29],[1229,31,864,33],[1229,32,864,34,"headers"],[1229,39,864,41],[1230,18,865,20,"body"],[1230,22,865,24],[1230,24,865,26],[1231,20,866,24,"email"],[1231,25,866,29],[1232,20,867,24,"type"],[1232,24,867,28],[1233,20,868,24,"gotrue_meta_security"],[1233,40,868,44],[1233,42,868,46],[1234,22,868,48,"captcha_token"],[1234,35,868,61],[1234,37,868,63,"options"],[1234,44,868,70],[1234,49,868,75],[1234,53,868,79],[1234,57,868,83,"options"],[1234,64,868,90],[1234,69,868,95],[1234,74,868,100],[1234,75,868,101],[1234,78,868,104],[1234,83,868,109],[1234,84,868,110],[1234,87,868,113,"options"],[1234,94,868,120],[1234,95,868,121,"captchaToken"],[1235,20,868,134],[1236,18,869,20],[1236,19,869,21],[1237,18,870,20,"redirectTo"],[1237,28,870,30],[1237,30,870,32,"options"],[1237,37,870,39],[1237,42,870,44],[1237,46,870,48],[1237,50,870,52,"options"],[1237,57,870,59],[1237,62,870,64],[1237,67,870,69],[1237,68,870,70],[1237,71,870,73],[1237,76,870,78],[1237,77,870,79],[1237,80,870,82,"options"],[1237,87,870,89],[1237,88,870,90,"emailRedirectTo"],[1238,16,871,16],[1238,17,871,17],[1238,18,871,18],[1239,16,863,24,"error"],[1239,21,863,29],[1239,24,863,29,"_yield11"],[1239,32,863,29],[1239,33,863,24,"error"],[1239,38,863,29],[1240,14,872,16],[1240,21,872,23],[1241,16,872,25,"data"],[1241,20,872,29],[1241,22,872,31],[1242,18,872,33,"user"],[1242,22,872,37],[1242,24,872,39],[1242,28,872,43],[1243,18,872,45,"session"],[1243,25,872,52],[1243,27,872,54],[1244,16,872,59],[1244,17,872,60],[1245,16,872,62,"error"],[1246,14,872,68],[1246,15,872,69],[1247,12,873,12],[1247,13,873,13],[1247,19,874,17],[1247,23,874,21],[1247,30,874,28],[1247,34,874,32,"credentials"],[1247,45,874,43],[1247,47,874,45],[1248,14,875,16],[1248,18,875,24,"phone"],[1248,23,875,29],[1248,26,875,49,"credentials"],[1248,37,875,60],[1248,38,875,24,"phone"],[1248,43,875,29],[1249,16,875,31,"type"],[1249,21,875,35],[1249,24,875,49,"credentials"],[1249,35,875,60],[1249,36,875,31,"type"],[1249,40,875,35],[1250,16,875,37,"options"],[1250,25,875,44],[1250,28,875,49,"credentials"],[1250,39,875,60],[1250,40,875,37,"options"],[1250,47,875,44],[1251,14,876,16],[1251,18,876,16,"_yield12"],[1251,26,876,16],[1251,35,876,46],[1251,36,876,47],[1251,37,876,48],[1251,39,876,50,"fetch_1"],[1251,46,876,57],[1251,47,876,58,"_request"],[1251,55,876,66],[1251,57,876,68],[1251,61,876,72],[1251,62,876,73,"fetch"],[1251,67,876,78],[1251,69,876,80],[1251,75,876,86],[1251,77,876,88,"endpoint"],[1251,85,876,96],[1251,87,876,98],[1252,18,877,20,"headers"],[1252,25,877,27],[1252,27,877,29],[1252,31,877,33],[1252,32,877,34,"headers"],[1252,39,877,41],[1253,18,878,20,"body"],[1253,22,878,24],[1253,24,878,26],[1254,20,879,24,"phone"],[1254,25,879,29],[1255,20,880,24,"type"],[1255,24,880,28],[1255,26,880,24,"type"],[1255,31,880,28],[1256,20,881,24,"gotrue_meta_security"],[1256,40,881,44],[1256,42,881,46],[1257,22,881,48,"captcha_token"],[1257,35,881,61],[1257,37,881,63,"options"],[1257,46,881,70],[1257,51,881,75],[1257,55,881,79],[1257,59,881,83,"options"],[1257,68,881,90],[1257,73,881,95],[1257,78,881,100],[1257,79,881,101],[1257,82,881,104],[1257,87,881,109],[1257,88,881,110],[1257,91,881,113,"options"],[1257,100,881,120],[1257,101,881,121,"captchaToken"],[1258,20,881,134],[1259,18,882,20],[1260,16,883,16],[1260,17,883,17],[1260,18,883,18],[1261,16,876,24,"data"],[1261,20,876,28],[1261,23,876,28,"_yield12"],[1261,31,876,28],[1261,32,876,24,"data"],[1261,36,876,28],[1262,16,876,30,"error"],[1262,23,876,35],[1262,26,876,35,"_yield12"],[1262,34,876,35],[1262,35,876,30,"error"],[1262,40,876,35],[1263,14,884,16],[1263,21,884,23],[1264,16,884,25,"data"],[1264,20,884,29],[1264,22,884,31],[1265,18,884,33,"user"],[1265,22,884,37],[1265,24,884,39],[1265,28,884,43],[1266,18,884,45,"session"],[1266,25,884,52],[1266,27,884,54],[1266,31,884,58],[1267,18,884,60,"messageId"],[1267,27,884,69],[1267,29,884,71,"data"],[1267,33,884,75],[1267,38,884,80],[1267,42,884,84],[1267,46,884,88,"data"],[1267,50,884,92],[1267,55,884,97],[1267,60,884,102],[1267,61,884,103],[1267,64,884,106],[1267,69,884,111],[1267,70,884,112],[1267,73,884,115,"data"],[1267,77,884,119],[1267,78,884,120,"message_id"],[1268,16,884,131],[1268,17,884,132],[1269,16,884,134,"error"],[1269,21,884,139],[1269,23,884,134,"error"],[1270,14,884,140],[1270,15,884,141],[1271,12,885,12],[1272,12,886,12],[1272,18,886,18],[1272,22,886,22,"errors_1"],[1272,30,886,30],[1272,31,886,31,"AuthInvalidCredentialsError"],[1272,58,886,58],[1272,59,886,59],[1272,120,886,120],[1272,121,886,121],[1273,10,887,8],[1273,11,887,9],[1273,12,888,8],[1273,19,888,15,"error"],[1273,24,888,20],[1273,26,888,22],[1274,12,889,12],[1274,16,889,16],[1274,17,889,17],[1274,18,889,18],[1274,20,889,20,"errors_1"],[1274,28,889,28],[1274,29,889,29,"isAuthError"],[1274,40,889,40],[1274,42,889,42,"error"],[1274,47,889,47],[1274,48,889,48],[1274,50,889,50],[1275,14,890,16],[1275,21,890,23],[1276,16,890,25,"data"],[1276,20,890,29],[1276,22,890,31],[1277,18,890,33,"user"],[1277,22,890,37],[1277,24,890,39],[1277,28,890,43],[1278,18,890,45,"session"],[1278,25,890,52],[1278,27,890,54],[1279,16,890,59],[1279,17,890,60],[1280,16,890,62,"error"],[1281,14,890,68],[1281,15,890,69],[1282,12,891,12],[1283,12,892,12],[1283,18,892,18,"error"],[1283,23,892,23],[1284,10,893,8],[1285,8,894,4],[1285,9,894,5],[1286,8,894,5],[1286,17,858,10,"resend"],[1286,23,858,16,"resend"],[1286,24,858,16,"_x16"],[1286,28,858,16],[1287,10,858,16],[1287,17,858,16,"_resend"],[1287,24,858,16],[1287,25,858,16,"apply"],[1287,30,858,16],[1287,37,858,16,"arguments"],[1287,46,858,16],[1288,8,858,16],[1289,8,858,16],[1289,15,858,10,"resend"],[1289,21,858,16],[1290,6,858,16],[1291,6,895,4],[1292,0,896,0],[1293,0,897,0],[1294,0,898,0],[1295,0,899,0],[1296,0,900,0],[1297,0,901,0],[1298,0,902,0],[1299,0,903,0],[1300,0,904,0],[1301,0,905,0],[1302,6,895,4],[1303,4,895,4],[1304,6,895,4,"key"],[1304,9,895,4],[1305,6,895,4,"value"],[1305,11,895,4],[1306,8,895,4],[1306,12,895,4,"_getSession"],[1306,23,895,4],[1306,26,895,4,"_asyncToGenerator"],[1306,43,895,4],[1306,44,906,4],[1306,57,906,23],[1307,10,906,23],[1307,14,906,23,"_this7"],[1307,20,906,23],[1308,10,907,8],[1308,16,907,14],[1308,20,907,18],[1308,21,907,19,"initializePromise"],[1308,38,907,36],[1309,10,908,8],[1309,14,908,14,"result"],[1309,20,908,20],[1309,29,908,29],[1309,33,908,33],[1309,34,908,34,"_acquireLock"],[1309,46,908,46],[1309,47,908,47],[1309,48,908,48],[1309,49,908,49],[1309,64,908,49,"_asyncToGenerator"],[1309,81,908,49],[1309,82,908,51],[1309,95,908,63],[1310,12,909,12],[1310,19,909,19,"_this7"],[1310,25,909,23],[1310,26,909,24,"_useSession"],[1310,37,909,35],[1311,14,909,35],[1311,18,909,35,"_ref9"],[1311,23,909,35],[1311,26,909,35,"_asyncToGenerator"],[1311,43,909,35],[1311,44,909,36],[1311,55,909,43,"result"],[1311,61,909,49],[1311,63,909,54],[1312,16,910,16],[1312,23,910,23,"result"],[1312,29,910,29],[1313,14,911,12],[1313,15,911,13],[1314,14,911,13],[1314,31,911,13,"_x17"],[1314,35,911,13],[1315,16,911,13],[1315,23,911,13,"_ref9"],[1315,28,911,13],[1315,29,911,13,"apply"],[1315,34,911,13],[1315,41,911,13,"arguments"],[1315,50,911,13],[1316,14,911,13],[1317,12,911,13],[1317,16,911,14],[1318,10,912,8],[1318,11,912,9],[1318,13,912,10],[1319,10,913,8],[1319,17,913,15,"result"],[1319,23,913,21],[1320,8,914,4],[1320,9,914,5],[1321,8,914,5],[1321,17,906,10,"getSession"],[1321,27,906,20,"getSession"],[1321,28,906,20],[1322,10,906,20],[1322,17,906,20,"_getSession"],[1322,28,906,20],[1322,29,906,20,"apply"],[1322,34,906,20],[1322,41,906,20,"arguments"],[1322,50,906,20],[1323,8,906,20],[1324,8,906,20],[1324,15,906,10,"getSession"],[1324,25,906,20],[1325,6,906,20],[1326,6,915,4],[1327,0,916,0],[1328,0,917,0],[1329,6,915,4],[1330,4,915,4],[1331,6,915,4,"key"],[1331,9,915,4],[1332,6,915,4,"value"],[1332,11,915,4],[1333,8,915,4],[1333,12,915,4,"_acquireLock2"],[1333,25,915,4],[1333,28,915,4,"_asyncToGenerator"],[1333,45,915,4],[1333,46,918,4],[1333,57,918,23,"acquireTimeout"],[1333,71,918,37],[1333,73,918,39,"fn"],[1333,75,918,41],[1333,77,918,43],[1334,10,918,43],[1334,14,918,43,"_this8"],[1334,20,918,43],[1335,10,919,8],[1335,14,919,12],[1335,15,919,13,"_debug"],[1335,21,919,19],[1335,22,919,20],[1335,37,919,35],[1335,39,919,37],[1335,46,919,44],[1335,48,919,46,"acquireTimeout"],[1335,62,919,60],[1335,63,919,61],[1336,10,920,8],[1336,14,920,12],[1337,12,921,12],[1337,16,921,16],[1337,20,921,20],[1337,21,921,21,"lockAcquired"],[1337,33,921,33],[1337,35,921,35],[1338,14,922,16],[1338,18,922,22,"last"],[1338,22,922,26],[1338,25,922,29],[1338,29,922,33],[1338,30,922,34,"pendingInLock"],[1338,43,922,47],[1338,44,922,48,"length"],[1338,50,922,54],[1338,53,923,22],[1338,57,923,26],[1338,58,923,27,"pendingInLock"],[1338,71,923,40],[1338,72,923,41],[1338,76,923,45],[1338,77,923,46,"pendingInLock"],[1338,90,923,59],[1338,91,923,60,"length"],[1338,97,923,66],[1338,100,923,69],[1338,101,923,70],[1338,102,923,71],[1338,105,924,22,"Promise"],[1338,112,924,29],[1338,113,924,30,"resolve"],[1338,120,924,37],[1338,121,924,38],[1338,122,924,39],[1339,14,925,16],[1339,18,925,22,"result"],[1339,24,925,28],[1339,27,925,31,"_asyncToGenerator"],[1339,44,925,31],[1339,45,925,32],[1339,58,925,44],[1340,16,926,20],[1340,22,926,26,"last"],[1340,26,926,30],[1341,16,927,20],[1341,29,927,33,"fn"],[1341,31,927,35],[1341,32,927,36],[1341,33,927,37],[1342,14,928,16],[1342,15,928,17],[1342,17,928,19],[1342,18,928,20],[1343,14,929,16],[1343,18,929,20],[1343,19,929,21,"pendingInLock"],[1343,32,929,34],[1343,33,929,35,"push"],[1343,37,929,39],[1343,38,929,40,"_asyncToGenerator"],[1343,55,929,40],[1343,56,929,41],[1343,69,929,53],[1344,16,930,20],[1344,20,930,24],[1345,18,931,24],[1345,24,931,30,"result"],[1345,30,931,36],[1346,16,932,20],[1346,17,932,21],[1346,18,933,20],[1346,25,933,27,"e"],[1346,26,933,28],[1346,28,933,30],[1347,18,934,24],[1348,16,934,24],[1349,14,936,16],[1349,15,936,17],[1349,17,936,19],[1349,18,936,20],[1349,19,936,21],[1350,14,937,16],[1350,21,937,23,"result"],[1350,27,937,29],[1351,12,938,12],[1352,12,939,12],[1352,25,939,25],[1352,29,939,29],[1352,30,939,30,"lock"],[1352,34,939,34],[1352,35,939,35],[1352,43,939,43],[1352,47,939,47],[1352,48,939,48,"storageKey"],[1352,58,939,58],[1352,60,939,60],[1352,62,939,62,"acquireTimeout"],[1352,76,939,76],[1352,91,939,76,"_asyncToGenerator"],[1352,108,939,76],[1352,109,939,78],[1352,122,939,90],[1353,14,940,16,"_this8"],[1353,20,940,20],[1353,21,940,21,"_debug"],[1353,27,940,27],[1353,28,940,28],[1353,43,940,43],[1353,45,940,45],[1353,76,940,76],[1353,78,940,78,"_this8"],[1353,84,940,82],[1353,85,940,83,"storageKey"],[1353,95,940,93],[1353,96,940,94],[1354,14,941,16],[1354,18,941,20],[1355,16,942,20,"_this8"],[1355,22,942,24],[1355,23,942,25,"lockAcquired"],[1355,35,942,37],[1355,38,942,40],[1355,42,942,44],[1356,16,943,20],[1356,20,943,26,"result"],[1356,27,943,32],[1356,30,943,35,"fn"],[1356,32,943,37],[1356,33,943,38],[1356,34,943,39],[1357,16,944,20,"_this8"],[1357,22,944,24],[1357,23,944,25,"pendingInLock"],[1357,36,944,38],[1357,37,944,39,"push"],[1357,41,944,43],[1357,42,944,44,"_asyncToGenerator"],[1357,59,944,44],[1357,60,944,45],[1357,73,944,57],[1358,18,945,24],[1358,22,945,28],[1359,20,946,28],[1359,26,946,34,"result"],[1359,33,946,40],[1360,18,947,24],[1360,19,947,25],[1360,20,948,24],[1360,27,948,31,"e"],[1360,28,948,32],[1360,30,948,34],[1361,20,949,28],[1362,18,949,28],[1363,16,951,20],[1363,17,951,21],[1363,19,951,23],[1363,20,951,24],[1363,21,951,25],[1364,16,952,20],[1364,22,952,26,"result"],[1364,29,952,32],[1365,16,953,20],[1366,16,954,20],[1366,23,954,27,"_this8"],[1366,29,954,31],[1366,30,954,32,"pendingInLock"],[1366,43,954,45],[1366,44,954,46,"length"],[1366,50,954,52],[1366,52,954,54],[1367,18,955,24],[1367,22,955,30,"waitOn"],[1367,28,955,36],[1367,31,955,39],[1367,32,955,40],[1367,35,955,43,"_this8"],[1367,41,955,47],[1367,42,955,48,"pendingInLock"],[1367,55,955,61],[1367,56,955,62],[1368,18,956,24],[1368,24,956,30,"Promise"],[1368,31,956,37],[1368,32,956,38,"all"],[1368,35,956,41],[1368,36,956,42,"waitOn"],[1368,42,956,48],[1368,43,956,49],[1369,18,957,24,"_this8"],[1369,24,957,28],[1369,25,957,29,"pendingInLock"],[1369,38,957,42],[1369,39,957,43,"splice"],[1369,45,957,49],[1369,46,957,50],[1369,47,957,51],[1369,49,957,53,"waitOn"],[1369,55,957,59],[1369,56,957,60,"length"],[1369,62,957,66],[1369,63,957,67],[1370,16,958,20],[1371,16,959,20],[1371,29,959,33,"result"],[1371,36,959,39],[1372,14,960,16],[1372,15,960,17],[1372,24,961,24],[1373,16,962,20,"_this8"],[1373,22,962,24],[1373,23,962,25,"_debug"],[1373,29,962,31],[1373,30,962,32],[1373,45,962,47],[1373,47,962,49],[1373,78,962,80],[1373,80,962,82,"_this8"],[1373,86,962,86],[1373,87,962,87,"storageKey"],[1373,97,962,97],[1373,98,962,98],[1374,16,963,20,"_this8"],[1374,22,963,24],[1374,23,963,25,"lockAcquired"],[1374,35,963,37],[1374,38,963,40],[1374,43,963,45],[1375,14,964,16],[1376,12,965,12],[1376,13,965,13],[1376,15,965,14],[1377,10,966,8],[1377,11,966,9],[1377,20,967,16],[1378,12,968,12],[1378,16,968,16],[1378,17,968,17,"_debug"],[1378,23,968,23],[1378,24,968,24],[1378,39,968,39],[1378,41,968,41],[1378,46,968,46],[1378,47,968,47],[1379,10,969,8],[1380,8,970,4],[1380,9,970,5],[1381,8,970,5],[1381,17,918,10,"_acquireLock"],[1381,29,918,22,"_acquireLock"],[1381,30,918,22,"_x18"],[1381,34,918,22],[1381,36,918,22,"_x19"],[1381,40,918,22],[1382,10,918,22],[1382,17,918,22,"_acquireLock2"],[1382,30,918,22],[1382,31,918,22,"apply"],[1382,36,918,22],[1382,43,918,22,"arguments"],[1382,52,918,22],[1383,8,918,22],[1384,8,918,22],[1384,15,918,10,"_acquireLock"],[1384,27,918,22],[1385,6,918,22],[1386,6,971,4],[1387,0,972,0],[1388,0,973,0],[1389,0,974,0],[1390,0,975,0],[1391,0,976,0],[1392,6,971,4],[1393,4,971,4],[1394,6,971,4,"key"],[1394,9,971,4],[1395,6,971,4,"value"],[1395,11,971,4],[1396,8,971,4],[1396,12,971,4,"_useSession2"],[1396,24,971,4],[1396,27,971,4,"_asyncToGenerator"],[1396,44,971,4],[1396,45,977,4],[1396,56,977,22,"fn"],[1396,58,977,24],[1396,60,977,26],[1397,10,978,8],[1397,14,978,12],[1397,15,978,13,"_debug"],[1397,21,978,19],[1397,22,978,20],[1397,36,978,34],[1397,38,978,36],[1397,45,978,43],[1397,46,978,44],[1398,10,979,8],[1398,14,979,12],[1399,12,980,12],[1400,12,981,12],[1400,16,981,18,"result"],[1400,22,981,24],[1400,31,981,33],[1400,35,981,37],[1400,36,981,38,"__loadSession"],[1400,49,981,51],[1400,50,981,52],[1400,51,981,53],[1401,12,982,12],[1401,25,982,25,"fn"],[1401,27,982,27],[1401,28,982,28,"result"],[1401,34,982,34],[1401,35,982,35],[1402,10,983,8],[1402,11,983,9],[1402,20,984,16],[1403,12,985,12],[1403,16,985,16],[1403,17,985,17,"_debug"],[1403,23,985,23],[1403,24,985,24],[1403,38,985,38],[1403,40,985,40],[1403,45,985,45],[1403,46,985,46],[1404,10,986,8],[1405,8,987,4],[1405,9,987,5],[1406,8,987,5],[1406,17,977,10,"_useSession"],[1406,28,977,21,"_useSession"],[1406,29,977,21,"_x20"],[1406,33,977,21],[1407,10,977,21],[1407,17,977,21,"_useSession2"],[1407,29,977,21],[1407,30,977,21,"apply"],[1407,35,977,21],[1407,42,977,21,"arguments"],[1407,51,977,21],[1408,8,977,21],[1409,8,977,21],[1409,15,977,10,"_useSession"],[1409,26,977,21],[1410,6,977,21],[1411,6,988,4],[1412,0,989,0],[1413,0,990,0],[1414,0,991,0],[1415,0,992,0],[1416,6,988,4],[1417,4,988,4],[1418,6,988,4,"key"],[1418,9,988,4],[1419,6,988,4,"value"],[1419,11,988,4],[1420,8,988,4],[1420,12,988,4,"_loadSession"],[1420,24,988,4],[1420,27,988,4,"_asyncToGenerator"],[1420,44,988,4],[1420,45,993,4],[1420,58,993,26],[1421,10,994,8],[1421,14,994,12],[1421,15,994,13,"_debug"],[1421,21,994,19],[1421,22,994,20],[1421,40,994,38],[1421,42,994,40],[1421,49,994,47],[1421,50,994,48],[1422,10,995,8],[1422,14,995,12],[1422,15,995,13],[1422,19,995,17],[1422,20,995,18,"lockAcquired"],[1422,32,995,30],[1422,34,995,32],[1423,12,996,12],[1423,16,996,16],[1423,17,996,17,"_debug"],[1423,23,996,23],[1423,24,996,24],[1423,42,996,42],[1423,44,996,44],[1423,79,996,79],[1423,81,996,81],[1423,85,996,85,"Error"],[1423,90,996,90],[1423,91,996,91],[1423,92,996,92],[1423,93,996,93,"stack"],[1423,98,996,98],[1423,99,996,99],[1424,10,997,8],[1425,10,998,8],[1425,14,998,12],[1426,12,999,12],[1426,16,999,16,"currentSession"],[1426,30,999,30],[1426,33,999,33],[1426,37,999,37],[1427,12,1000,12],[1427,16,1000,18,"maybeSession"],[1427,28,1000,30],[1427,37,1000,39],[1427,38,1000,40],[1427,39,1000,41],[1427,41,1000,43,"helpers_1"],[1427,50,1000,52],[1427,51,1000,53,"getItemAsync"],[1427,63,1000,65],[1427,65,1000,67],[1427,69,1000,71],[1427,70,1000,72,"storage"],[1427,77,1000,79],[1427,79,1000,81],[1427,83,1000,85],[1427,84,1000,86,"storageKey"],[1427,94,1000,96],[1427,95,1000,97],[1428,12,1001,12],[1428,16,1001,16],[1428,17,1001,17,"_debug"],[1428,23,1001,23],[1428,24,1001,24],[1428,39,1001,39],[1428,41,1001,41],[1428,63,1001,63],[1428,65,1001,65,"maybeSession"],[1428,77,1001,77],[1428,78,1001,78],[1429,12,1002,12],[1429,16,1002,16,"maybeSession"],[1429,28,1002,28],[1429,33,1002,33],[1429,37,1002,37],[1429,39,1002,39],[1430,14,1003,16],[1430,18,1003,20],[1430,22,1003,24],[1430,23,1003,25,"_isValidSession"],[1430,38,1003,40],[1430,39,1003,41,"maybeSession"],[1430,51,1003,53],[1430,52,1003,54],[1430,54,1003,56],[1431,16,1004,20,"currentSession"],[1431,30,1004,34],[1431,33,1004,37,"maybeSession"],[1431,45,1004,49],[1432,14,1005,16],[1432,15,1005,17],[1432,21,1006,21],[1433,16,1007,20],[1433,20,1007,24],[1433,21,1007,25,"_debug"],[1433,27,1007,31],[1433,28,1007,32],[1433,43,1007,47],[1433,45,1007,49],[1433,80,1007,84],[1433,81,1007,85],[1434,16,1008,20],[1434,22,1008,26],[1434,26,1008,30],[1434,27,1008,31,"_removeSession"],[1434,41,1008,45],[1434,42,1008,46],[1434,43,1008,47],[1435,14,1009,16],[1436,12,1010,12],[1437,12,1011,12],[1437,16,1011,16],[1437,17,1011,17,"currentSession"],[1437,31,1011,31],[1437,33,1011,33],[1438,14,1012,16],[1438,21,1012,23],[1439,16,1012,25,"data"],[1439,20,1012,29],[1439,22,1012,31],[1440,18,1012,33,"session"],[1440,25,1012,40],[1440,27,1012,42],[1441,16,1012,47],[1441,17,1012,48],[1442,16,1012,50,"error"],[1442,21,1012,55],[1442,23,1012,57],[1443,14,1012,62],[1443,15,1012,63],[1444,12,1013,12],[1445,12,1014,12],[1446,12,1015,12],[1447,12,1016,12],[1448,12,1017,12],[1449,12,1018,12],[1450,12,1019,12],[1450,16,1019,18,"hasExpired"],[1450,26,1019,28],[1450,29,1019,31,"currentSession"],[1450,43,1019,45],[1450,44,1019,46,"expires_at"],[1450,54,1019,56],[1450,57,1020,18,"currentSession"],[1450,71,1020,32],[1450,72,1020,33,"expires_at"],[1450,82,1020,43],[1450,85,1020,46],[1450,89,1020,50],[1450,92,1020,53,"Date"],[1450,96,1020,57],[1450,97,1020,58,"now"],[1450,100,1020,61],[1450,101,1020,62],[1450,102,1020,63],[1450,105,1020,66,"constants_1"],[1450,116,1020,77],[1450,117,1020,78,"EXPIRY_MARGIN_MS"],[1450,133,1020,94],[1450,136,1021,18],[1450,141,1021,23],[1451,12,1022,12],[1451,16,1022,16],[1451,17,1022,17,"_debug"],[1451,23,1022,23],[1451,24,1022,24],[1451,42,1022,42],[1451,44,1022,44],[1451,58,1022,58,"hasExpired"],[1451,68,1022,68],[1451,71,1022,71],[1451,73,1022,73],[1451,76,1022,76],[1451,82,1022,82],[1451,92,1022,92],[1451,94,1022,94],[1451,106,1022,106],[1451,108,1022,108,"currentSession"],[1451,122,1022,122],[1451,123,1022,123,"expires_at"],[1451,133,1022,133],[1451,134,1022,134],[1452,12,1023,12],[1452,16,1023,16],[1452,17,1023,17,"hasExpired"],[1452,27,1023,27],[1452,29,1023,29],[1453,14,1024,16],[1453,18,1024,20],[1453,22,1024,24],[1453,23,1024,25,"userStorage"],[1453,34,1024,36],[1453,36,1024,38],[1454,16,1025,20],[1454,20,1025,26,"maybeUser"],[1454,29,1025,35],[1454,38,1025,45],[1454,39,1025,46],[1454,40,1025,47],[1454,42,1025,49,"helpers_1"],[1454,51,1025,58],[1454,52,1025,59,"getItemAsync"],[1454,64,1025,71],[1454,66,1025,73],[1454,70,1025,77],[1454,71,1025,78,"userStorage"],[1454,82,1025,89],[1454,84,1025,91],[1454,88,1025,95],[1454,89,1025,96,"storageKey"],[1454,99,1025,106],[1454,102,1025,109],[1454,109,1025,116],[1454,110,1025,118],[1455,16,1026,20],[1455,20,1026,24,"maybeUser"],[1455,29,1026,33],[1455,34,1026,38],[1455,38,1026,42],[1455,42,1026,46,"maybeUser"],[1455,51,1026,55],[1455,56,1026,60],[1455,61,1026,65],[1455,62,1026,66],[1455,65,1026,69],[1455,70,1026,74],[1455,71,1026,75],[1455,74,1026,78,"maybeUser"],[1455,83,1026,87],[1455,84,1026,88,"user"],[1455,88,1026,92],[1455,90,1026,94],[1456,18,1027,24,"currentSession"],[1456,32,1027,38],[1456,33,1027,39,"user"],[1456,37,1027,43],[1456,40,1027,46,"maybeUser"],[1456,49,1027,55],[1456,50,1027,56,"user"],[1456,54,1027,60],[1457,16,1028,20],[1457,17,1028,21],[1457,23,1029,25],[1458,18,1030,24,"currentSession"],[1458,32,1030,38],[1458,33,1030,39,"user"],[1458,37,1030,43],[1458,40,1030,46],[1458,41,1030,47],[1458,42,1030,48],[1458,44,1030,50,"helpers_1"],[1458,53,1030,59],[1458,54,1030,60,"userNotAvailableProxy"],[1458,75,1030,81],[1458,77,1030,83],[1458,78,1030,84],[1459,16,1031,20],[1460,14,1032,16],[1461,14,1033,16],[1461,18,1033,20],[1461,22,1033,24],[1461,23,1033,25,"storage"],[1461,30,1033,32],[1461,31,1033,33,"isServer"],[1461,39,1033,41],[1461,43,1033,45,"currentSession"],[1461,57,1033,59],[1461,58,1033,60,"user"],[1461,62,1033,64],[1461,64,1033,66],[1462,16,1034,20],[1462,20,1034,24,"suppressWarning"],[1462,35,1034,39],[1462,38,1034,42],[1462,42,1034,46],[1462,43,1034,47,"suppressGetSessionWarning"],[1462,68,1034,72],[1463,16,1035,20],[1463,20,1035,26,"proxySession"],[1463,32,1035,38],[1463,35,1035,41],[1463,39,1035,45,"Proxy"],[1463,44,1035,50],[1463,45,1035,51,"currentSession"],[1463,59,1035,65],[1463,61,1035,67],[1464,18,1036,24,"get"],[1464,21,1036,27],[1464,23,1036,29,"get"],[1464,24,1036,30,"target"],[1464,30,1036,36],[1464,32,1036,38,"prop"],[1464,36,1036,42],[1464,38,1036,44,"receiver"],[1464,46,1036,52],[1464,51,1036,57],[1465,20,1037,28],[1465,24,1037,32],[1465,25,1037,33,"suppressWarning"],[1465,40,1037,48],[1465,44,1037,52,"prop"],[1465,48,1037,56],[1465,53,1037,61],[1465,59,1037,67],[1465,61,1037,69],[1466,22,1038,32],[1467,22,1039,32,"console"],[1467,29,1039,39],[1467,30,1039,40,"warn"],[1467,34,1039,44],[1467,35,1039,45],[1467,388,1039,398],[1467,389,1039,399],[1468,22,1040,32,"suppressWarning"],[1468,37,1040,47],[1468,40,1040,50],[1468,44,1040,54],[1468,45,1040,55],[1468,46,1040,56],[1469,22,1041,32],[1469,26,1041,36],[1469,27,1041,37,"suppressGetSessionWarning"],[1469,52,1041,62],[1469,55,1041,65],[1469,59,1041,69],[1469,60,1041,70],[1469,61,1041,71],[1470,20,1042,28],[1471,20,1043,28],[1471,27,1043,35,"Reflect"],[1471,34,1043,42],[1471,35,1043,43,"get"],[1471,38,1043,46],[1471,39,1043,47,"target"],[1471,45,1043,53],[1471,47,1043,55,"prop"],[1471,51,1043,59],[1471,53,1043,61,"receiver"],[1471,61,1043,69],[1471,62,1043,70],[1472,18,1044,24],[1473,16,1045,20],[1473,17,1045,21],[1473,18,1045,22],[1474,16,1046,20,"currentSession"],[1474,30,1046,34],[1474,33,1046,37,"proxySession"],[1474,45,1046,49],[1475,14,1047,16],[1476,14,1048,16],[1476,21,1048,23],[1477,16,1048,25,"data"],[1477,20,1048,29],[1477,22,1048,31],[1478,18,1048,33,"session"],[1478,25,1048,40],[1478,27,1048,42,"currentSession"],[1479,16,1048,57],[1479,17,1048,58],[1480,16,1048,60,"error"],[1480,21,1048,65],[1480,23,1048,67],[1481,14,1048,72],[1481,15,1048,73],[1482,12,1049,12],[1483,12,1050,12],[1483,16,1050,12,"_yield$this$_callRefr"],[1483,37,1050,12],[1483,46,1050,45],[1483,50,1050,49],[1483,51,1050,50,"_callRefreshToken"],[1483,68,1050,67],[1483,69,1050,68,"currentSession"],[1483,83,1050,82],[1483,84,1050,83,"refresh_token"],[1483,97,1050,96],[1483,98,1050,97],[1484,14,1050,20,"session"],[1484,21,1050,27],[1484,24,1050,27,"_yield$this$_callRefr"],[1484,45,1050,27],[1484,46,1050,20,"session"],[1484,53,1050,27],[1485,14,1050,29,"error"],[1485,19,1050,34],[1485,22,1050,34,"_yield$this$_callRefr"],[1485,43,1050,34],[1485,44,1050,29,"error"],[1485,49,1050,34],[1486,12,1051,12],[1486,16,1051,16,"error"],[1486,21,1051,21],[1486,23,1051,23],[1487,14,1052,16],[1487,21,1052,23],[1488,16,1052,25,"data"],[1488,20,1052,29],[1488,22,1052,31],[1489,18,1052,33,"session"],[1489,25,1052,40],[1489,27,1052,42],[1490,16,1052,47],[1490,17,1052,48],[1491,16,1052,50,"error"],[1492,14,1052,56],[1492,15,1052,57],[1493,12,1053,12],[1494,12,1054,12],[1494,19,1054,19],[1495,14,1054,21,"data"],[1495,18,1054,25],[1495,20,1054,27],[1496,16,1054,29,"session"],[1497,14,1054,37],[1497,15,1054,38],[1498,14,1054,40,"error"],[1498,19,1054,45],[1498,21,1054,47],[1499,12,1054,52],[1499,13,1054,53],[1500,10,1055,8],[1500,11,1055,9],[1500,20,1056,16],[1501,12,1057,12],[1501,16,1057,16],[1501,17,1057,17,"_debug"],[1501,23,1057,23],[1501,24,1057,24],[1501,42,1057,42],[1501,44,1057,44],[1501,49,1057,49],[1501,50,1057,50],[1502,10,1058,8],[1503,8,1059,4],[1503,9,1059,5],[1504,8,1059,5],[1504,17,993,10,"__loadSession"],[1504,30,993,23,"__loadSession"],[1504,31,993,23],[1505,10,993,23],[1505,17,993,23,"_loadSession"],[1505,29,993,23],[1505,30,993,23,"apply"],[1505,35,993,23],[1505,42,993,23,"arguments"],[1505,51,993,23],[1506,8,993,23],[1507,8,993,23],[1507,15,993,10,"__loadSession"],[1507,28,993,23],[1508,6,993,23],[1509,6,1060,4],[1510,0,1061,0],[1511,0,1062,0],[1512,0,1063,0],[1513,0,1064,0],[1514,0,1065,0],[1515,0,1066,0],[1516,6,1060,4],[1517,4,1060,4],[1518,6,1060,4,"key"],[1518,9,1060,4],[1519,6,1060,4,"value"],[1519,11,1060,4],[1520,8,1060,4],[1520,12,1060,4,"_getUser2"],[1520,21,1060,4],[1520,24,1060,4,"_asyncToGenerator"],[1520,41,1060,4],[1520,42,1067,4],[1520,53,1067,18,"jwt"],[1520,56,1067,21],[1520,58,1067,23],[1521,10,1067,23],[1521,14,1067,23,"_this9"],[1521,20,1067,23],[1522,10,1068,8],[1522,14,1068,12,"jwt"],[1522,17,1068,15],[1522,19,1068,17],[1523,12,1069,12],[1523,25,1069,25],[1523,29,1069,29],[1523,30,1069,30,"_getUser"],[1523,38,1069,38],[1523,39,1069,39,"jwt"],[1523,42,1069,42],[1523,43,1069,43],[1524,10,1070,8],[1525,10,1071,8],[1525,16,1071,14],[1525,20,1071,18],[1525,21,1071,19,"initializePromise"],[1525,38,1071,36],[1526,10,1072,8],[1526,14,1072,14,"result"],[1526,20,1072,20],[1526,29,1072,29],[1526,33,1072,33],[1526,34,1072,34,"_acquireLock"],[1526,46,1072,46],[1526,47,1072,47],[1526,48,1072,48],[1526,49,1072,49],[1526,64,1072,49,"_asyncToGenerator"],[1526,81,1072,49],[1526,82,1072,51],[1526,95,1072,63],[1527,12,1073,12],[1527,25,1073,25,"_this9"],[1527,31,1073,29],[1527,32,1073,30,"_getUser"],[1527,40,1073,38],[1527,41,1073,39],[1527,42,1073,40],[1528,10,1074,8],[1528,11,1074,9],[1528,13,1074,10],[1529,10,1075,8],[1529,17,1075,15,"result"],[1529,23,1075,21],[1530,8,1076,4],[1530,9,1076,5],[1531,8,1076,5],[1531,17,1067,10,"getUser"],[1531,24,1067,17,"getUser"],[1531,25,1067,17,"_x21"],[1531,29,1067,17],[1532,10,1067,17],[1532,17,1067,17,"_getUser2"],[1532,26,1067,17],[1532,27,1067,17,"apply"],[1532,32,1067,17],[1532,39,1067,17,"arguments"],[1532,48,1067,17],[1533,8,1067,17],[1534,8,1067,17],[1534,15,1067,10,"getUser"],[1534,22,1067,17],[1535,6,1067,17],[1536,4,1067,17],[1537,6,1067,17,"key"],[1537,9,1067,17],[1538,6,1067,17,"value"],[1538,11,1067,17],[1539,8,1067,17],[1539,12,1067,17,"_getUser3"],[1539,21,1067,17],[1539,24,1067,17,"_asyncToGenerator"],[1539,41,1067,17],[1539,42,1077,4],[1539,53,1077,19,"jwt"],[1539,56,1077,22],[1539,58,1077,24],[1540,10,1077,24],[1540,14,1077,24,"_this0"],[1540,20,1077,24],[1541,10,1078,8],[1541,14,1078,12],[1542,12,1079,12],[1542,16,1079,16,"jwt"],[1542,19,1079,19],[1542,21,1079,21],[1543,14,1080,16],[1543,27,1080,29],[1543,28,1080,30],[1543,29,1080,31],[1543,31,1080,33,"fetch_1"],[1543,38,1080,40],[1543,39,1080,41,"_request"],[1543,47,1080,49],[1543,49,1080,51],[1543,53,1080,55],[1543,54,1080,56,"fetch"],[1543,59,1080,61],[1543,61,1080,63],[1543,66,1080,68],[1543,68,1080,70],[1543,71,1080,73],[1543,75,1080,77],[1543,76,1080,78,"url"],[1543,79,1080,81],[1543,86,1080,88],[1543,88,1080,90],[1544,16,1081,20,"headers"],[1544,23,1081,27],[1544,25,1081,29],[1544,29,1081,33],[1544,30,1081,34,"headers"],[1544,37,1081,41],[1545,16,1082,20,"jwt"],[1545,19,1082,23],[1545,21,1082,25,"jwt"],[1545,24,1082,28],[1546,16,1083,20,"xform"],[1546,21,1083,25],[1546,23,1083,27,"fetch_1"],[1546,30,1083,34],[1546,31,1083,35,"_userResponse"],[1547,14,1084,16],[1547,15,1084,17],[1547,16,1084,18],[1548,12,1085,12],[1549,12,1086,12],[1549,25,1086,25],[1549,29,1086,29],[1549,30,1086,30,"_useSession"],[1549,41,1086,41],[1550,14,1086,41],[1550,18,1086,41,"_ref13"],[1550,24,1086,41],[1550,27,1086,41,"_asyncToGenerator"],[1550,44,1086,41],[1550,45,1086,42],[1550,56,1086,49,"result"],[1550,62,1086,55],[1550,64,1086,60],[1551,16,1087,16],[1551,20,1087,20,"_a"],[1551,22,1087,22],[1551,24,1087,24,"_b"],[1551,26,1087,26],[1551,28,1087,28,"_c"],[1551,30,1087,30],[1552,16,1088,16],[1552,20,1088,24,"data"],[1552,24,1088,28],[1552,27,1088,40,"result"],[1552,33,1088,46],[1552,34,1088,24,"data"],[1552,38,1088,28],[1553,18,1088,30,"error"],[1553,23,1088,35],[1553,26,1088,40,"result"],[1553,32,1088,46],[1553,33,1088,30,"error"],[1553,38,1088,35],[1554,16,1089,16],[1554,20,1089,20,"error"],[1554,25,1089,25],[1554,27,1089,27],[1555,18,1090,20],[1555,24,1090,26,"error"],[1555,29,1090,31],[1556,16,1091,16],[1557,16,1092,16],[1558,16,1093,16],[1558,20,1093,20],[1558,22,1093,22],[1558,23,1093,23,"_a"],[1558,25,1093,25],[1558,28,1093,28,"data"],[1558,32,1093,32],[1558,33,1093,33,"session"],[1558,40,1093,40],[1558,46,1093,46],[1558,50,1093,50],[1558,54,1093,54,"_a"],[1558,56,1093,56],[1558,61,1093,61],[1558,66,1093,66],[1558,67,1093,67],[1558,70,1093,70],[1558,75,1093,75],[1558,76,1093,76],[1558,79,1093,79,"_a"],[1558,81,1093,81],[1558,82,1093,82,"access_token"],[1558,94,1093,94],[1558,95,1093,95],[1558,99,1093,99],[1558,100,1093,100,"_this0"],[1558,106,1093,104],[1558,107,1093,105,"hasCustomAuthorizationHeader"],[1558,135,1093,133],[1558,137,1093,135],[1559,18,1094,20],[1559,25,1094,27],[1560,20,1094,29,"data"],[1560,24,1094,33],[1560,26,1094,35],[1561,22,1094,37,"user"],[1561,26,1094,41],[1561,28,1094,43],[1562,20,1094,48],[1562,21,1094,49],[1563,20,1094,51,"error"],[1563,25,1094,56],[1563,27,1094,58],[1563,31,1094,62,"errors_1"],[1563,39,1094,70],[1563,40,1094,71,"AuthSessionMissingError"],[1563,63,1094,94],[1563,64,1094,95],[1564,18,1094,97],[1564,19,1094,98],[1565,16,1095,16],[1566,16,1096,16],[1566,29,1096,29],[1566,30,1096,30],[1566,31,1096,31],[1566,33,1096,33,"fetch_1"],[1566,40,1096,40],[1566,41,1096,41,"_request"],[1566,49,1096,49],[1566,51,1096,51,"_this0"],[1566,57,1096,55],[1566,58,1096,56,"fetch"],[1566,63,1096,61],[1566,65,1096,63],[1566,70,1096,68],[1566,72,1096,70],[1566,75,1096,73,"_this0"],[1566,81,1096,77],[1566,82,1096,78,"url"],[1566,85,1096,81],[1566,92,1096,88],[1566,94,1096,90],[1567,18,1097,20,"headers"],[1567,25,1097,27],[1567,27,1097,29,"_this0"],[1567,33,1097,33],[1567,34,1097,34,"headers"],[1567,41,1097,41],[1568,18,1098,20,"jwt"],[1568,21,1098,23],[1568,23,1098,25],[1568,24,1098,26,"_c"],[1568,26,1098,28],[1568,29,1098,31],[1568,30,1098,32,"_b"],[1568,32,1098,34],[1568,35,1098,37,"data"],[1568,39,1098,41],[1568,40,1098,42,"session"],[1568,47,1098,49],[1568,53,1098,55],[1568,57,1098,59],[1568,61,1098,63,"_b"],[1568,63,1098,65],[1568,68,1098,70],[1568,73,1098,75],[1568,74,1098,76],[1568,77,1098,79],[1568,82,1098,84],[1568,83,1098,85],[1568,86,1098,88,"_b"],[1568,88,1098,90],[1568,89,1098,91,"access_token"],[1568,101,1098,103],[1568,107,1098,109],[1568,111,1098,113],[1568,115,1098,117,"_c"],[1568,117,1098,119],[1568,122,1098,124],[1568,127,1098,129],[1568,128,1098,130],[1568,131,1098,133,"_c"],[1568,133,1098,135],[1568,136,1098,138,"undefined"],[1568,145,1098,147],[1569,18,1099,20,"xform"],[1569,23,1099,25],[1569,25,1099,27,"fetch_1"],[1569,32,1099,34],[1569,33,1099,35,"_userResponse"],[1570,16,1100,16],[1570,17,1100,17],[1570,18,1100,18],[1571,14,1101,12],[1571,15,1101,13],[1572,14,1101,13],[1572,31,1101,13,"_x23"],[1572,35,1101,13],[1573,16,1101,13],[1573,23,1101,13,"_ref13"],[1573,29,1101,13],[1573,30,1101,13,"apply"],[1573,35,1101,13],[1573,42,1101,13,"arguments"],[1573,51,1101,13],[1574,14,1101,13],[1575,12,1101,13],[1575,16,1101,14],[1576,10,1102,8],[1576,11,1102,9],[1576,12,1103,8],[1576,19,1103,15,"error"],[1576,24,1103,20],[1576,26,1103,22],[1577,12,1104,12],[1577,16,1104,16],[1577,17,1104,17],[1577,18,1104,18],[1577,20,1104,20,"errors_1"],[1577,28,1104,28],[1577,29,1104,29,"isAuthError"],[1577,40,1104,40],[1577,42,1104,42,"error"],[1577,47,1104,47],[1577,48,1104,48],[1577,50,1104,50],[1578,14,1105,16],[1578,18,1105,20],[1578,19,1105,21],[1578,20,1105,22],[1578,22,1105,24,"errors_1"],[1578,30,1105,32],[1578,31,1105,33,"isAuthSessionMissingError"],[1578,56,1105,58],[1578,58,1105,60,"error"],[1578,63,1105,65],[1578,64,1105,66],[1578,66,1105,68],[1579,16,1106,20],[1580,16,1107,20],[1581,16,1108,20],[1581,22,1108,26],[1581,26,1108,30],[1581,27,1108,31,"_removeSession"],[1581,41,1108,45],[1581,42,1108,46],[1581,43,1108,47],[1582,16,1109,20],[1582,22,1109,26],[1582,23,1109,27],[1582,24,1109,28],[1582,26,1109,30,"helpers_1"],[1582,35,1109,39],[1582,36,1109,40,"removeItemAsync"],[1582,51,1109,55],[1582,53,1109,57],[1582,57,1109,61],[1582,58,1109,62,"storage"],[1582,65,1109,69],[1582,67,1109,71],[1582,70,1109,74],[1582,74,1109,78],[1582,75,1109,79,"storageKey"],[1582,85,1109,89],[1582,101,1109,105],[1582,102,1109,106],[1583,14,1110,16],[1584,14,1111,16],[1584,21,1111,23],[1585,16,1111,25,"data"],[1585,20,1111,29],[1585,22,1111,31],[1586,18,1111,33,"user"],[1586,22,1111,37],[1586,24,1111,39],[1587,16,1111,44],[1587,17,1111,45],[1588,16,1111,47,"error"],[1589,14,1111,53],[1589,15,1111,54],[1590,12,1112,12],[1591,12,1113,12],[1591,18,1113,18,"error"],[1591,23,1113,23],[1592,10,1114,8],[1593,8,1115,4],[1593,9,1115,5],[1594,8,1115,5],[1594,17,1077,10,"_getUser"],[1594,25,1077,18,"_getUser"],[1594,26,1077,18,"_x22"],[1594,30,1077,18],[1595,10,1077,18],[1595,17,1077,18,"_getUser3"],[1595,26,1077,18],[1595,27,1077,18,"apply"],[1595,32,1077,18],[1595,39,1077,18,"arguments"],[1595,48,1077,18],[1596,8,1077,18],[1597,8,1077,18],[1597,15,1077,10,"_getUser"],[1597,23,1077,18],[1598,6,1077,18],[1599,6,1116,4],[1600,0,1117,0],[1601,0,1118,0],[1602,4,1116,4],[1603,6,1116,4,"key"],[1603,9,1116,4],[1604,6,1116,4,"value"],[1604,11,1116,4],[1605,8,1116,4],[1605,12,1116,4,"_updateUser2"],[1605,24,1116,4],[1605,27,1116,4,"_asyncToGenerator"],[1605,44,1116,4],[1605,45,1119,4],[1605,56,1119,21,"attributes"],[1605,66,1119,31],[1605,68,1119,47],[1606,10,1119,47],[1606,14,1119,47,"_this1"],[1606,20,1119,47],[1607,10,1119,47],[1607,14,1119,33,"options"],[1607,21,1119,40],[1607,24,1119,40,"arguments"],[1607,33,1119,40],[1607,34,1119,40,"length"],[1607,40,1119,40],[1607,48,1119,40,"arguments"],[1607,57,1119,40],[1607,65,1119,40,"undefined"],[1607,74,1119,40],[1607,77,1119,40,"arguments"],[1607,86,1119,40],[1607,92,1119,43],[1607,93,1119,44],[1607,94,1119,45],[1608,10,1120,8],[1608,16,1120,14],[1608,20,1120,18],[1608,21,1120,19,"initializePromise"],[1608,38,1120,36],[1609,10,1121,8],[1609,23,1121,21],[1609,27,1121,25],[1609,28,1121,26,"_acquireLock"],[1609,40,1121,38],[1609,41,1121,39],[1609,42,1121,40],[1609,43,1121,41],[1609,58,1121,41,"_asyncToGenerator"],[1609,75,1121,41],[1609,76,1121,43],[1609,89,1121,55],[1610,12,1122,12],[1610,25,1122,25,"_this1"],[1610,31,1122,29],[1610,32,1122,30,"_updateUser"],[1610,43,1122,41],[1610,44,1122,42,"attributes"],[1610,54,1122,52],[1610,56,1122,54,"options"],[1610,63,1122,61],[1610,64,1122,62],[1611,10,1123,8],[1611,11,1123,9],[1611,13,1123,10],[1612,8,1124,4],[1612,9,1124,5],[1613,8,1124,5],[1613,17,1119,10,"updateUser"],[1613,27,1119,20,"updateUser"],[1613,28,1119,20,"_x24"],[1613,32,1119,20],[1614,10,1119,20],[1614,17,1119,20,"_updateUser2"],[1614,29,1119,20],[1614,30,1119,20,"apply"],[1614,35,1119,20],[1614,42,1119,20,"arguments"],[1614,51,1119,20],[1615,8,1119,20],[1616,8,1119,20],[1616,15,1119,10,"updateUser"],[1616,25,1119,20],[1617,6,1119,20],[1618,4,1119,20],[1619,6,1119,20,"key"],[1619,9,1119,20],[1620,6,1119,20,"value"],[1620,11,1119,20],[1621,8,1119,20],[1621,12,1119,20,"_updateUser3"],[1621,24,1119,20],[1621,27,1119,20,"_asyncToGenerator"],[1621,44,1119,20],[1621,45,1125,4],[1621,56,1125,22,"attributes"],[1621,66,1125,32],[1621,68,1125,48],[1622,10,1125,48],[1622,14,1125,48,"_this10"],[1622,21,1125,48],[1623,10,1125,48],[1623,14,1125,34,"options"],[1623,21,1125,41],[1623,24,1125,41,"arguments"],[1623,33,1125,41],[1623,34,1125,41,"length"],[1623,40,1125,41],[1623,48,1125,41,"arguments"],[1623,57,1125,41],[1623,65,1125,41,"undefined"],[1623,74,1125,41],[1623,77,1125,41,"arguments"],[1623,86,1125,41],[1623,92,1125,44],[1623,93,1125,45],[1623,94,1125,46],[1624,10,1126,8],[1624,14,1126,12],[1625,12,1127,12],[1625,25,1127,25],[1625,29,1127,29],[1625,30,1127,30,"_useSession"],[1625,41,1127,41],[1626,14,1127,41],[1626,18,1127,41,"_ref15"],[1626,24,1127,41],[1626,27,1127,41,"_asyncToGenerator"],[1626,44,1127,41],[1626,45,1127,42],[1626,56,1127,49,"result"],[1626,62,1127,55],[1626,64,1127,60],[1627,16,1128,16],[1627,20,1128,30,"sessionData"],[1627,31,1128,41],[1627,34,1128,67,"result"],[1627,40,1128,73],[1627,41,1128,24,"data"],[1627,45,1128,28],[1628,18,1128,50,"sessionError"],[1628,30,1128,62],[1628,33,1128,67,"result"],[1628,39,1128,73],[1628,40,1128,43,"error"],[1628,45,1128,48],[1629,16,1129,16],[1629,20,1129,20,"sessionError"],[1629,32,1129,32],[1629,34,1129,34],[1630,18,1130,20],[1630,24,1130,26,"sessionError"],[1630,36,1130,38],[1631,16,1131,16],[1632,16,1132,16],[1632,20,1132,20],[1632,21,1132,21,"sessionData"],[1632,32,1132,32],[1632,33,1132,33,"session"],[1632,40,1132,40],[1632,42,1132,42],[1633,18,1133,20],[1633,24,1133,26],[1633,28,1133,30,"errors_1"],[1633,36,1133,38],[1633,37,1133,39,"AuthSessionMissingError"],[1633,60,1133,62],[1633,61,1133,63],[1633,62,1133,64],[1634,16,1134,16],[1635,16,1135,16],[1635,20,1135,22,"session"],[1635,27,1135,29],[1635,30,1135,32,"sessionData"],[1635,41,1135,43],[1635,42,1135,44,"session"],[1635,49,1135,51],[1636,16,1136,16],[1636,20,1136,20,"codeChallenge"],[1636,33,1136,33],[1636,36,1136,36],[1636,40,1136,40],[1637,16,1137,16],[1637,20,1137,20,"codeChallengeMethod"],[1637,39,1137,39],[1637,42,1137,42],[1637,46,1137,46],[1638,16,1138,16],[1638,20,1138,20,"_this10"],[1638,27,1138,24],[1638,28,1138,25,"flowType"],[1638,36,1138,33],[1638,41,1138,38],[1638,47,1138,44],[1638,51,1138,48,"attributes"],[1638,61,1138,58],[1638,62,1138,59,"email"],[1638,67,1138,64],[1638,71,1138,68],[1638,75,1138,72],[1638,77,1138,74],[1639,18,1139,20],[1640,18,1139,21],[1640,22,1139,21,"_yield13"],[1640,30,1139,21],[1640,39,1140,65],[1640,40,1140,66],[1640,41,1140,67],[1640,43,1140,69,"helpers_1"],[1640,52,1140,78],[1640,53,1140,79,"getCodeChallengeAndMethod"],[1640,78,1140,104],[1640,80,1140,106,"_this10"],[1640,87,1140,110],[1640,88,1140,111,"storage"],[1640,95,1140,118],[1640,97,1140,120,"_this10"],[1640,104,1140,124],[1640,105,1140,125,"storageKey"],[1640,115,1140,135],[1640,116,1140,136],[1641,18,1140,136],[1641,22,1140,136,"_yield14"],[1641,30,1140,136],[1641,33,1140,136,"_slicedToArray"],[1641,47,1140,136],[1641,48,1140,136,"_yield13"],[1641,56,1140,136],[1642,18,1140,21,"codeChallenge"],[1642,31,1140,34],[1642,34,1140,34,"_yield14"],[1642,42,1140,34],[1643,18,1140,36,"codeChallengeMethod"],[1643,37,1140,55],[1643,40,1140,55,"_yield14"],[1643,48,1140,55],[1644,16,1141,16],[1645,16,1142,16],[1645,20,1142,16,"_yield15"],[1645,28,1142,16],[1645,37,1142,57],[1645,38,1142,58],[1645,39,1142,59],[1645,41,1142,61,"fetch_1"],[1645,48,1142,68],[1645,49,1142,69,"_request"],[1645,57,1142,77],[1645,59,1142,79,"_this10"],[1645,66,1142,83],[1645,67,1142,84,"fetch"],[1645,72,1142,89],[1645,74,1142,91],[1645,79,1142,96],[1645,81,1142,98],[1645,84,1142,101,"_this10"],[1645,91,1142,105],[1645,92,1142,106,"url"],[1645,95,1142,109],[1645,102,1142,116],[1645,104,1142,118],[1646,20,1143,20,"headers"],[1646,27,1143,27],[1646,29,1143,29,"_this10"],[1646,36,1143,33],[1646,37,1143,34,"headers"],[1646,44,1143,41],[1647,20,1144,20,"redirectTo"],[1647,30,1144,30],[1647,32,1144,32,"options"],[1647,39,1144,39],[1647,44,1144,44],[1647,48,1144,48],[1647,52,1144,52,"options"],[1647,59,1144,59],[1647,64,1144,64],[1647,69,1144,69],[1647,70,1144,70],[1647,73,1144,73],[1647,78,1144,78],[1647,79,1144,79],[1647,82,1144,82,"options"],[1647,89,1144,89],[1647,90,1144,90,"emailRedirectTo"],[1647,105,1144,105],[1648,20,1145,20,"body"],[1648,24,1145,24],[1648,26,1145,26,"Object"],[1648,32,1145,32],[1648,33,1145,33,"assign"],[1648,39,1145,39],[1648,40,1145,40,"Object"],[1648,46,1145,46],[1648,47,1145,47,"assign"],[1648,53,1145,53],[1648,54,1145,54],[1648,55,1145,55],[1648,56,1145,56],[1648,58,1145,58,"attributes"],[1648,68,1145,68],[1648,69,1145,69],[1648,71,1145,71],[1649,22,1145,73,"code_challenge"],[1649,36,1145,87],[1649,38,1145,89,"codeChallenge"],[1649,51,1145,102],[1650,22,1145,104,"code_challenge_method"],[1650,43,1145,125],[1650,45,1145,127,"codeChallengeMethod"],[1651,20,1145,147],[1651,21,1145,148],[1651,22,1145,149],[1652,20,1146,20,"jwt"],[1652,23,1146,23],[1652,25,1146,25,"session"],[1652,32,1146,32],[1652,33,1146,33,"access_token"],[1652,45,1146,45],[1653,20,1147,20,"xform"],[1653,25,1147,25],[1653,27,1147,27,"fetch_1"],[1653,34,1147,34],[1653,35,1147,35,"_userResponse"],[1654,18,1148,16],[1654,19,1148,17],[1654,20,1148,18],[1655,18,1142,24,"data"],[1655,22,1142,28],[1655,25,1142,28,"_yield15"],[1655,33,1142,28],[1655,34,1142,24,"data"],[1655,38,1142,28],[1656,18,1142,37,"userError"],[1656,27,1142,46],[1656,30,1142,46,"_yield15"],[1656,38,1142,46],[1656,39,1142,30,"error"],[1656,44,1142,35],[1657,16,1149,16],[1657,20,1149,20,"userError"],[1657,29,1149,29],[1657,31,1150,20],[1657,37,1150,26,"userError"],[1657,46,1150,35],[1658,16,1151,16,"session"],[1658,23,1151,23],[1658,24,1151,24,"user"],[1658,28,1151,28],[1658,31,1151,31,"data"],[1658,35,1151,35],[1658,36,1151,36,"user"],[1658,40,1151,40],[1659,16,1152,16],[1659,22,1152,22,"_this10"],[1659,29,1152,26],[1659,30,1152,27,"_saveSession"],[1659,42,1152,39],[1659,43,1152,40,"session"],[1659,50,1152,47],[1659,51,1152,48],[1660,16,1153,16],[1660,22,1153,22,"_this10"],[1660,29,1153,26],[1660,30,1153,27,"_notifyAllSubscribers"],[1660,51,1153,48],[1660,52,1153,49],[1660,66,1153,63],[1660,68,1153,65,"session"],[1660,75,1153,72],[1660,76,1153,73],[1661,16,1154,16],[1661,23,1154,23],[1662,18,1154,25,"data"],[1662,22,1154,29],[1662,24,1154,31],[1663,20,1154,33,"user"],[1663,24,1154,37],[1663,26,1154,39,"session"],[1663,33,1154,46],[1663,34,1154,47,"user"],[1664,18,1154,52],[1664,19,1154,53],[1665,18,1154,55,"error"],[1665,23,1154,60],[1665,25,1154,62],[1666,16,1154,67],[1666,17,1154,68],[1667,14,1155,12],[1667,15,1155,13],[1668,14,1155,13],[1668,31,1155,13,"_x26"],[1668,35,1155,13],[1669,16,1155,13],[1669,23,1155,13,"_ref15"],[1669,29,1155,13],[1669,30,1155,13,"apply"],[1669,35,1155,13],[1669,42,1155,13,"arguments"],[1669,51,1155,13],[1670,14,1155,13],[1671,12,1155,13],[1671,16,1155,14],[1672,10,1156,8],[1672,11,1156,9],[1672,12,1157,8],[1672,19,1157,15,"error"],[1672,24,1157,20],[1672,26,1157,22],[1673,12,1158,12],[1673,16,1158,16],[1673,17,1158,17],[1673,18,1158,18],[1673,20,1158,20,"errors_1"],[1673,28,1158,28],[1673,29,1158,29,"isAuthError"],[1673,40,1158,40],[1673,42,1158,42,"error"],[1673,47,1158,47],[1673,48,1158,48],[1673,50,1158,50],[1674,14,1159,16],[1674,21,1159,23],[1675,16,1159,25,"data"],[1675,20,1159,29],[1675,22,1159,31],[1676,18,1159,33,"user"],[1676,22,1159,37],[1676,24,1159,39],[1677,16,1159,44],[1677,17,1159,45],[1678,16,1159,47,"error"],[1679,14,1159,53],[1679,15,1159,54],[1680,12,1160,12],[1681,12,1161,12],[1681,18,1161,18,"error"],[1681,23,1161,23],[1682,10,1162,8],[1683,8,1163,4],[1683,9,1163,5],[1684,8,1163,5],[1684,17,1125,10,"_updateUser"],[1684,28,1125,21,"_updateUser"],[1684,29,1125,21,"_x25"],[1684,33,1125,21],[1685,10,1125,21],[1685,17,1125,21,"_updateUser3"],[1685,29,1125,21],[1685,30,1125,21,"apply"],[1685,35,1125,21],[1685,42,1125,21,"arguments"],[1685,51,1125,21],[1686,8,1125,21],[1687,8,1125,21],[1687,15,1125,10,"_updateUser"],[1687,26,1125,21],[1688,6,1125,21],[1689,6,1164,4],[1690,0,1165,0],[1691,0,1166,0],[1692,0,1167,0],[1693,0,1168,0],[1694,4,1164,4],[1695,6,1164,4,"key"],[1695,9,1164,4],[1696,6,1164,4,"value"],[1696,11,1164,4],[1697,8,1164,4],[1697,12,1164,4,"_setSession2"],[1697,24,1164,4],[1697,27,1164,4,"_asyncToGenerator"],[1697,44,1164,4],[1697,45,1169,4],[1697,56,1169,21,"currentSession"],[1697,70,1169,35],[1697,72,1169,37],[1698,10,1169,37],[1698,14,1169,37,"_this11"],[1698,21,1169,37],[1699,10,1170,8],[1699,16,1170,14],[1699,20,1170,18],[1699,21,1170,19,"initializePromise"],[1699,38,1170,36],[1700,10,1171,8],[1700,23,1171,21],[1700,27,1171,25],[1700,28,1171,26,"_acquireLock"],[1700,40,1171,38],[1700,41,1171,39],[1700,42,1171,40],[1700,43,1171,41],[1700,58,1171,41,"_asyncToGenerator"],[1700,75,1171,41],[1700,76,1171,43],[1700,89,1171,55],[1701,12,1172,12],[1701,25,1172,25,"_this11"],[1701,32,1172,29],[1701,33,1172,30,"_setSession"],[1701,44,1172,41],[1701,45,1172,42,"currentSession"],[1701,59,1172,56],[1701,60,1172,57],[1702,10,1173,8],[1702,11,1173,9],[1702,13,1173,10],[1703,8,1174,4],[1703,9,1174,5],[1704,8,1174,5],[1704,17,1169,10,"setSession"],[1704,27,1169,20,"setSession"],[1704,28,1169,20,"_x27"],[1704,32,1169,20],[1705,10,1169,20],[1705,17,1169,20,"_setSession2"],[1705,29,1169,20],[1705,30,1169,20,"apply"],[1705,35,1169,20],[1705,42,1169,20,"arguments"],[1705,51,1169,20],[1706,8,1169,20],[1707,8,1169,20],[1707,15,1169,10,"setSession"],[1707,25,1169,20],[1708,6,1169,20],[1709,4,1169,20],[1710,6,1169,20,"key"],[1710,9,1169,20],[1711,6,1169,20,"value"],[1711,11,1169,20],[1712,8,1169,20],[1712,12,1169,20,"_setSession3"],[1712,24,1169,20],[1712,27,1169,20,"_asyncToGenerator"],[1712,44,1169,20],[1712,45,1175,4],[1712,56,1175,22,"currentSession"],[1712,70,1175,36],[1712,72,1175,38],[1713,10,1176,8],[1713,14,1176,12],[1714,12,1177,12],[1714,16,1177,16],[1714,17,1177,17,"currentSession"],[1714,31,1177,31],[1714,32,1177,32,"access_token"],[1714,44,1177,44],[1714,48,1177,48],[1714,49,1177,49,"currentSession"],[1714,63,1177,63],[1714,64,1177,64,"refresh_token"],[1714,77,1177,77],[1714,79,1177,79],[1715,14,1178,16],[1715,20,1178,22],[1715,24,1178,26,"errors_1"],[1715,32,1178,34],[1715,33,1178,35,"AuthSessionMissingError"],[1715,56,1178,58],[1715,57,1178,59],[1715,58,1178,60],[1716,12,1179,12],[1717,12,1180,12],[1717,16,1180,18,"timeNow"],[1717,23,1180,25],[1717,26,1180,28,"Date"],[1717,30,1180,32],[1717,31,1180,33,"now"],[1717,34,1180,36],[1717,35,1180,37],[1717,36,1180,38],[1717,39,1180,41],[1717,43,1180,45],[1718,12,1181,12],[1718,16,1181,16,"expiresAt"],[1718,25,1181,25],[1718,28,1181,28,"timeNow"],[1718,35,1181,35],[1719,12,1182,12],[1719,16,1182,16,"hasExpired"],[1719,26,1182,26],[1719,29,1182,29],[1719,33,1182,33],[1720,12,1183,12],[1720,16,1183,16,"session"],[1720,23,1183,23],[1720,26,1183,26],[1720,30,1183,30],[1721,12,1184,12],[1721,16,1184,12,"_ref17"],[1721,22,1184,12],[1721,25,1184,32],[1721,26,1184,33],[1721,27,1184,34],[1721,29,1184,36,"helpers_1"],[1721,38,1184,45],[1721,39,1184,46,"decodeJWT"],[1721,48,1184,55],[1721,50,1184,57,"currentSession"],[1721,64,1184,71],[1721,65,1184,72,"access_token"],[1721,77,1184,84],[1721,78,1184,85],[1722,14,1184,20,"payload"],[1722,21,1184,27],[1722,24,1184,27,"_ref17"],[1722,30,1184,27],[1722,31,1184,20,"payload"],[1722,38,1184,27],[1723,12,1185,12],[1723,16,1185,16,"payload"],[1723,23,1185,23],[1723,24,1185,24,"exp"],[1723,27,1185,27],[1723,29,1185,29],[1724,14,1186,16,"expiresAt"],[1724,23,1186,25],[1724,26,1186,28,"payload"],[1724,33,1186,35],[1724,34,1186,36,"exp"],[1724,37,1186,39],[1725,14,1187,16,"hasExpired"],[1725,24,1187,26],[1725,27,1187,29,"expiresAt"],[1725,36,1187,38],[1725,40,1187,42,"timeNow"],[1725,47,1187,49],[1726,12,1188,12],[1727,12,1189,12],[1727,16,1189,16,"hasExpired"],[1727,26,1189,26],[1727,28,1189,28],[1728,14,1190,16],[1728,18,1190,16,"_yield$this$_callRefr2"],[1728,40,1190,16],[1728,49,1190,67],[1728,53,1190,71],[1728,54,1190,72,"_callRefreshToken"],[1728,71,1190,89],[1728,72,1190,90,"currentSession"],[1728,86,1190,104],[1728,87,1190,105,"refresh_token"],[1728,100,1190,118],[1728,101,1190,119],[1729,16,1190,33,"refreshedSession"],[1729,32,1190,49],[1729,35,1190,49,"_yield$this$_callRefr2"],[1729,57,1190,49],[1729,58,1190,24,"session"],[1729,65,1190,31],[1730,16,1190,51,"error"],[1730,21,1190,56],[1730,24,1190,56,"_yield$this$_callRefr2"],[1730,46,1190,56],[1730,47,1190,51,"error"],[1730,52,1190,56],[1731,14,1191,16],[1731,18,1191,20,"error"],[1731,23,1191,25],[1731,25,1191,27],[1732,16,1192,20],[1732,23,1192,27],[1733,18,1192,29,"data"],[1733,22,1192,33],[1733,24,1192,35],[1734,20,1192,37,"user"],[1734,24,1192,41],[1734,26,1192,43],[1734,30,1192,47],[1735,20,1192,49,"session"],[1735,27,1192,56],[1735,29,1192,58],[1736,18,1192,63],[1736,19,1192,64],[1737,18,1192,66,"error"],[1737,23,1192,71],[1737,25,1192,73,"error"],[1738,16,1192,79],[1738,17,1192,80],[1739,14,1193,16],[1740,14,1194,16],[1740,18,1194,20],[1740,19,1194,21,"refreshedSession"],[1740,35,1194,37],[1740,37,1194,39],[1741,16,1195,20],[1741,23,1195,27],[1742,18,1195,29,"data"],[1742,22,1195,33],[1742,24,1195,35],[1743,20,1195,37,"user"],[1743,24,1195,41],[1743,26,1195,43],[1743,30,1195,47],[1744,20,1195,49,"session"],[1744,27,1195,56],[1744,29,1195,58],[1745,18,1195,63],[1745,19,1195,64],[1746,18,1195,66,"error"],[1746,23,1195,71],[1746,25,1195,73],[1747,16,1195,78],[1747,17,1195,79],[1748,14,1196,16],[1749,14,1197,16,"session"],[1749,21,1197,23],[1749,24,1197,26,"refreshedSession"],[1749,40,1197,42],[1750,12,1198,12],[1750,13,1198,13],[1750,19,1199,17],[1751,14,1200,16],[1751,18,1200,16,"_yield$this$_getUser"],[1751,38,1200,16],[1751,47,1200,46],[1751,51,1200,50],[1751,52,1200,51,"_getUser"],[1751,60,1200,59],[1751,61,1200,60,"currentSession"],[1751,75,1200,74],[1751,76,1200,75,"access_token"],[1751,88,1200,87],[1751,89,1200,88],[1752,16,1200,24,"data"],[1752,20,1200,28],[1752,23,1200,28,"_yield$this$_getUser"],[1752,43,1200,28],[1752,44,1200,24,"data"],[1752,48,1200,28],[1753,16,1200,30,"error"],[1753,23,1200,35],[1753,26,1200,35,"_yield$this$_getUser"],[1753,46,1200,35],[1753,47,1200,30,"error"],[1753,52,1200,35],[1754,14,1201,16],[1754,18,1201,20,"error"],[1754,25,1201,25],[1754,27,1201,27],[1755,16,1202,20],[1755,22,1202,26,"error"],[1755,29,1202,31],[1756,14,1203,16],[1757,14,1204,16,"session"],[1757,21,1204,23],[1757,24,1204,26],[1758,16,1205,20,"access_token"],[1758,28,1205,32],[1758,30,1205,34,"currentSession"],[1758,44,1205,48],[1758,45,1205,49,"access_token"],[1758,57,1205,61],[1759,16,1206,20,"refresh_token"],[1759,29,1206,33],[1759,31,1206,35,"currentSession"],[1759,45,1206,49],[1759,46,1206,50,"refresh_token"],[1759,59,1206,63],[1760,16,1207,20,"user"],[1760,20,1207,24],[1760,22,1207,26,"data"],[1760,26,1207,30],[1760,27,1207,31,"user"],[1760,31,1207,35],[1761,16,1208,20,"token_type"],[1761,26,1208,30],[1761,28,1208,32],[1761,36,1208,40],[1762,16,1209,20,"expires_in"],[1762,26,1209,30],[1762,28,1209,32,"expiresAt"],[1762,37,1209,41],[1762,40,1209,44,"timeNow"],[1762,47,1209,51],[1763,16,1210,20,"expires_at"],[1763,26,1210,30],[1763,28,1210,32,"expiresAt"],[1764,14,1211,16],[1764,15,1211,17],[1765,14,1212,16],[1765,20,1212,22],[1765,24,1212,26],[1765,25,1212,27,"_saveSession"],[1765,37,1212,39],[1765,38,1212,40,"session"],[1765,45,1212,47],[1765,46,1212,48],[1766,14,1213,16],[1766,20,1213,22],[1766,24,1213,26],[1766,25,1213,27,"_notifyAllSubscribers"],[1766,46,1213,48],[1766,47,1213,49],[1766,58,1213,60],[1766,60,1213,62,"session"],[1766,67,1213,69],[1766,68,1213,70],[1767,12,1214,12],[1768,12,1215,12],[1768,19,1215,19],[1769,14,1215,21,"data"],[1769,18,1215,25],[1769,20,1215,27],[1770,16,1215,29,"user"],[1770,20,1215,33],[1770,22,1215,35,"session"],[1770,29,1215,42],[1770,30,1215,43,"user"],[1770,34,1215,47],[1771,16,1215,49,"session"],[1772,14,1215,57],[1772,15,1215,58],[1773,14,1215,60,"error"],[1773,19,1215,65],[1773,21,1215,67],[1774,12,1215,72],[1774,13,1215,73],[1775,10,1216,8],[1775,11,1216,9],[1775,12,1217,8],[1775,19,1217,15,"error"],[1775,24,1217,20],[1775,26,1217,22],[1776,12,1218,12],[1776,16,1218,16],[1776,17,1218,17],[1776,18,1218,18],[1776,20,1218,20,"errors_1"],[1776,28,1218,28],[1776,29,1218,29,"isAuthError"],[1776,40,1218,40],[1776,42,1218,42,"error"],[1776,47,1218,47],[1776,48,1218,48],[1776,50,1218,50],[1777,14,1219,16],[1777,21,1219,23],[1778,16,1219,25,"data"],[1778,20,1219,29],[1778,22,1219,31],[1779,18,1219,33,"session"],[1779,25,1219,40],[1779,27,1219,42],[1779,31,1219,46],[1780,18,1219,48,"user"],[1780,22,1219,52],[1780,24,1219,54],[1781,16,1219,59],[1781,17,1219,60],[1782,16,1219,62,"error"],[1783,14,1219,68],[1783,15,1219,69],[1784,12,1220,12],[1785,12,1221,12],[1785,18,1221,18,"error"],[1785,23,1221,23],[1786,10,1222,8],[1787,8,1223,4],[1787,9,1223,5],[1788,8,1223,5],[1788,17,1175,10,"_setSession"],[1788,28,1175,21,"_setSession"],[1788,29,1175,21,"_x28"],[1788,33,1175,21],[1789,10,1175,21],[1789,17,1175,21,"_setSession3"],[1789,29,1175,21],[1789,30,1175,21,"apply"],[1789,35,1175,21],[1789,42,1175,21,"arguments"],[1789,51,1175,21],[1790,8,1175,21],[1791,8,1175,21],[1791,15,1175,10,"_setSession"],[1791,26,1175,21],[1792,6,1175,21],[1793,6,1224,4],[1794,0,1225,0],[1795,0,1226,0],[1796,0,1227,0],[1797,0,1228,0],[1798,0,1229,0],[1799,4,1224,4],[1800,6,1224,4,"key"],[1800,9,1224,4],[1801,6,1224,4,"value"],[1801,11,1224,4],[1802,8,1224,4],[1802,12,1224,4,"_refreshSession2"],[1802,28,1224,4],[1802,31,1224,4,"_asyncToGenerator"],[1802,48,1224,4],[1802,49,1230,4],[1802,60,1230,25,"currentSession"],[1802,74,1230,39],[1802,76,1230,41],[1803,10,1230,41],[1803,14,1230,41,"_this12"],[1803,21,1230,41],[1804,10,1231,8],[1804,16,1231,14],[1804,20,1231,18],[1804,21,1231,19,"initializePromise"],[1804,38,1231,36],[1805,10,1232,8],[1805,23,1232,21],[1805,27,1232,25],[1805,28,1232,26,"_acquireLock"],[1805,40,1232,38],[1805,41,1232,39],[1805,42,1232,40],[1805,43,1232,41],[1805,58,1232,41,"_asyncToGenerator"],[1805,75,1232,41],[1805,76,1232,43],[1805,89,1232,55],[1806,12,1233,12],[1806,25,1233,25,"_this12"],[1806,32,1233,29],[1806,33,1233,30,"_refreshSession"],[1806,48,1233,45],[1806,49,1233,46,"currentSession"],[1806,63,1233,60],[1806,64,1233,61],[1807,10,1234,8],[1807,11,1234,9],[1807,13,1234,10],[1808,8,1235,4],[1808,9,1235,5],[1809,8,1235,5],[1809,17,1230,10,"refreshSession"],[1809,31,1230,24,"refreshSession"],[1809,32,1230,24,"_x29"],[1809,36,1230,24],[1810,10,1230,24],[1810,17,1230,24,"_refreshSession2"],[1810,33,1230,24],[1810,34,1230,24,"apply"],[1810,39,1230,24],[1810,46,1230,24,"arguments"],[1810,55,1230,24],[1811,8,1230,24],[1812,8,1230,24],[1812,15,1230,10,"refreshSession"],[1812,29,1230,24],[1813,6,1230,24],[1814,4,1230,24],[1815,6,1230,24,"key"],[1815,9,1230,24],[1816,6,1230,24,"value"],[1816,11,1230,24],[1817,8,1230,24],[1817,12,1230,24,"_refreshSession3"],[1817,28,1230,24],[1817,31,1230,24,"_asyncToGenerator"],[1817,48,1230,24],[1817,49,1236,4],[1817,60,1236,26,"currentSession"],[1817,74,1236,40],[1817,76,1236,42],[1818,10,1236,42],[1818,14,1236,42,"_this13"],[1818,21,1236,42],[1819,10,1237,8],[1819,14,1237,12],[1820,12,1238,12],[1820,25,1238,25],[1820,29,1238,29],[1820,30,1238,30,"_useSession"],[1820,41,1238,41],[1821,14,1238,41],[1821,18,1238,41,"_ref19"],[1821,24,1238,41],[1821,27,1238,41,"_asyncToGenerator"],[1821,44,1238,41],[1821,45,1238,42],[1821,56,1238,49,"result"],[1821,62,1238,55],[1821,64,1238,60],[1822,16,1239,16],[1822,20,1239,20,"_a"],[1822,22,1239,22],[1823,16,1240,16],[1823,20,1240,20],[1823,21,1240,21,"currentSession"],[1823,35,1240,35],[1823,37,1240,37],[1824,18,1241,20],[1824,22,1241,28,"data"],[1824,26,1241,32],[1824,29,1241,44,"result"],[1824,35,1241,50],[1824,36,1241,28,"data"],[1824,40,1241,32],[1825,20,1241,34,"error"],[1825,27,1241,39],[1825,30,1241,44,"result"],[1825,36,1241,50],[1825,37,1241,34,"error"],[1825,42,1241,39],[1826,18,1242,20],[1826,22,1242,24,"error"],[1826,29,1242,29],[1826,31,1242,31],[1827,20,1243,24],[1827,26,1243,30,"error"],[1827,33,1243,35],[1828,18,1244,20],[1829,18,1245,20,"currentSession"],[1829,32,1245,34],[1829,35,1245,37],[1829,36,1245,38,"_a"],[1829,38,1245,40],[1829,41,1245,43,"data"],[1829,45,1245,47],[1829,46,1245,48,"session"],[1829,53,1245,55],[1829,59,1245,61],[1829,63,1245,65],[1829,67,1245,69,"_a"],[1829,69,1245,71],[1829,74,1245,76],[1829,79,1245,81],[1829,80,1245,82],[1829,83,1245,85,"_a"],[1829,85,1245,87],[1829,88,1245,90,"undefined"],[1829,97,1245,99],[1830,16,1246,16],[1831,16,1247,16],[1831,20,1247,20],[1831,22,1247,22,"currentSession"],[1831,36,1247,36],[1831,41,1247,41],[1831,45,1247,45],[1831,49,1247,49,"currentSession"],[1831,63,1247,63],[1831,68,1247,68],[1831,73,1247,73],[1831,74,1247,74],[1831,77,1247,77],[1831,82,1247,82],[1831,83,1247,83],[1831,86,1247,86,"currentSession"],[1831,100,1247,100],[1831,101,1247,101,"refresh_token"],[1831,114,1247,114],[1831,115,1247,115],[1831,117,1247,117],[1832,18,1248,20],[1832,24,1248,26],[1832,28,1248,30,"errors_1"],[1832,36,1248,38],[1832,37,1248,39,"AuthSessionMissingError"],[1832,60,1248,62],[1832,61,1248,63],[1832,62,1248,64],[1833,16,1249,16],[1834,16,1250,16],[1834,20,1250,16,"_yield$_this13$_callR"],[1834,41,1250,16],[1834,50,1250,49,"_this13"],[1834,57,1250,53],[1834,58,1250,54,"_callRefreshToken"],[1834,75,1250,71],[1834,76,1250,72,"currentSession"],[1834,90,1250,86],[1834,91,1250,87,"refresh_token"],[1834,104,1250,100],[1834,105,1250,101],[1835,18,1250,24,"session"],[1835,25,1250,31],[1835,28,1250,31,"_yield$_this13$_callR"],[1835,49,1250,31],[1835,50,1250,24,"session"],[1835,57,1250,31],[1836,18,1250,33,"error"],[1836,23,1250,38],[1836,26,1250,38,"_yield$_this13$_callR"],[1836,47,1250,38],[1836,48,1250,33,"error"],[1836,53,1250,38],[1837,16,1251,16],[1837,20,1251,20,"error"],[1837,25,1251,25],[1837,27,1251,27],[1838,18,1252,20],[1838,25,1252,27],[1839,20,1252,29,"data"],[1839,24,1252,33],[1839,26,1252,35],[1840,22,1252,37,"user"],[1840,26,1252,41],[1840,28,1252,43],[1840,32,1252,47],[1841,22,1252,49,"session"],[1841,29,1252,56],[1841,31,1252,58],[1842,20,1252,63],[1842,21,1252,64],[1843,20,1252,66,"error"],[1843,25,1252,71],[1843,27,1252,73,"error"],[1844,18,1252,79],[1844,19,1252,80],[1845,16,1253,16],[1846,16,1254,16],[1846,20,1254,20],[1846,21,1254,21,"session"],[1846,28,1254,28],[1846,30,1254,30],[1847,18,1255,20],[1847,25,1255,27],[1848,20,1255,29,"data"],[1848,24,1255,33],[1848,26,1255,35],[1849,22,1255,37,"user"],[1849,26,1255,41],[1849,28,1255,43],[1849,32,1255,47],[1850,22,1255,49,"session"],[1850,29,1255,56],[1850,31,1255,58],[1851,20,1255,63],[1851,21,1255,64],[1852,20,1255,66,"error"],[1852,25,1255,71],[1852,27,1255,73],[1853,18,1255,78],[1853,19,1255,79],[1854,16,1256,16],[1855,16,1257,16],[1855,23,1257,23],[1856,18,1257,25,"data"],[1856,22,1257,29],[1856,24,1257,31],[1857,20,1257,33,"user"],[1857,24,1257,37],[1857,26,1257,39,"session"],[1857,33,1257,46],[1857,34,1257,47,"user"],[1857,38,1257,51],[1858,20,1257,53,"session"],[1859,18,1257,61],[1859,19,1257,62],[1860,18,1257,64,"error"],[1860,23,1257,69],[1860,25,1257,71],[1861,16,1257,76],[1861,17,1257,77],[1862,14,1258,12],[1862,15,1258,13],[1863,14,1258,13],[1863,31,1258,13,"_x31"],[1863,35,1258,13],[1864,16,1258,13],[1864,23,1258,13,"_ref19"],[1864,29,1258,13],[1864,30,1258,13,"apply"],[1864,35,1258,13],[1864,42,1258,13,"arguments"],[1864,51,1258,13],[1865,14,1258,13],[1866,12,1258,13],[1866,16,1258,14],[1867,10,1259,8],[1867,11,1259,9],[1867,12,1260,8],[1867,19,1260,15,"error"],[1867,24,1260,20],[1867,26,1260,22],[1868,12,1261,12],[1868,16,1261,16],[1868,17,1261,17],[1868,18,1261,18],[1868,20,1261,20,"errors_1"],[1868,28,1261,28],[1868,29,1261,29,"isAuthError"],[1868,40,1261,40],[1868,42,1261,42,"error"],[1868,47,1261,47],[1868,48,1261,48],[1868,50,1261,50],[1869,14,1262,16],[1869,21,1262,23],[1870,16,1262,25,"data"],[1870,20,1262,29],[1870,22,1262,31],[1871,18,1262,33,"user"],[1871,22,1262,37],[1871,24,1262,39],[1871,28,1262,43],[1872,18,1262,45,"session"],[1872,25,1262,52],[1872,27,1262,54],[1873,16,1262,59],[1873,17,1262,60],[1874,16,1262,62,"error"],[1875,14,1262,68],[1875,15,1262,69],[1876,12,1263,12],[1877,12,1264,12],[1877,18,1264,18,"error"],[1877,23,1264,23],[1878,10,1265,8],[1879,8,1266,4],[1879,9,1266,5],[1880,8,1266,5],[1880,17,1236,10,"_refreshSession"],[1880,32,1236,25,"_refreshSession"],[1880,33,1236,25,"_x30"],[1880,37,1236,25],[1881,10,1236,25],[1881,17,1236,25,"_refreshSession3"],[1881,33,1236,25],[1881,34,1236,25,"apply"],[1881,39,1236,25],[1881,46,1236,25,"arguments"],[1881,55,1236,25],[1882,8,1236,25],[1883,8,1236,25],[1883,15,1236,10,"_refreshSession"],[1883,30,1236,25],[1884,6,1236,25],[1885,6,1267,4],[1886,0,1268,0],[1887,0,1269,0],[1888,4,1267,4],[1889,6,1267,4,"key"],[1889,9,1267,4],[1890,6,1267,4,"value"],[1890,11,1267,4],[1891,8,1267,4],[1891,12,1267,4,"_getSessionFromURL2"],[1891,31,1267,4],[1891,34,1267,4,"_asyncToGenerator"],[1891,51,1267,4],[1891,52,1270,4],[1891,63,1270,29,"params"],[1891,69,1270,35],[1891,71,1270,37,"callbackUrlType"],[1891,86,1270,52],[1891,88,1270,54],[1892,10,1271,8],[1892,14,1271,12],[1893,12,1272,12],[1893,16,1272,16],[1893,17,1272,17],[1893,18,1272,18],[1893,19,1272,19],[1893,21,1272,21,"helpers_1"],[1893,30,1272,30],[1893,31,1272,31,"isBrowser"],[1893,40,1272,40],[1893,42,1272,42],[1893,43,1272,43],[1893,45,1273,16],[1893,51,1273,22],[1893,55,1273,26,"errors_1"],[1893,63,1273,34],[1893,64,1273,35,"AuthImplicitGrantRedirectError"],[1893,94,1273,65],[1893,95,1273,66],[1893,117,1273,88],[1893,118,1273,89],[1894,12,1274,12],[1895,12,1275,12],[1895,16,1275,16,"params"],[1895,22,1275,22],[1895,23,1275,23,"error"],[1895,28,1275,28],[1895,32,1275,32,"params"],[1895,38,1275,38],[1895,39,1275,39,"error_description"],[1895,56,1275,56],[1895,60,1275,60,"params"],[1895,66,1275,66],[1895,67,1275,67,"error_code"],[1895,77,1275,77],[1895,79,1275,79],[1896,14,1276,16],[1897,14,1277,16],[1898,14,1278,16],[1898,20,1278,22],[1898,24,1278,26,"errors_1"],[1898,32,1278,34],[1898,33,1278,35,"AuthImplicitGrantRedirectError"],[1898,63,1278,65],[1898,64,1278,66,"params"],[1898,70,1278,72],[1898,71,1278,73,"error_description"],[1898,88,1278,90],[1898,92,1278,94],[1898,141,1278,143],[1898,143,1278,145],[1899,16,1279,20,"error"],[1899,21,1279,25],[1899,23,1279,27,"params"],[1899,29,1279,33],[1899,30,1279,34,"error"],[1899,35,1279,39],[1899,39,1279,43],[1899,58,1279,62],[1900,16,1280,20,"code"],[1900,20,1280,24],[1900,22,1280,26,"params"],[1900,28,1280,32],[1900,29,1280,33,"error_code"],[1900,39,1280,43],[1900,43,1280,47],[1901,14,1281,16],[1901,15,1281,17],[1901,16,1281,18],[1902,12,1282,12],[1903,12,1283,12],[1904,12,1284,12],[1904,20,1284,20,"callbackUrlType"],[1904,35,1284,35],[1905,14,1285,16],[1905,19,1285,21],[1905,29,1285,31],[1906,16,1286,20],[1906,20,1286,24],[1906,24,1286,28],[1906,25,1286,29,"flowType"],[1906,33,1286,37],[1906,38,1286,42],[1906,44,1286,48],[1906,46,1286,50],[1907,18,1287,24],[1907,24,1287,30],[1907,28,1287,34,"errors_1"],[1907,36,1287,42],[1907,37,1287,43,"AuthPKCEGrantCodeExchangeError"],[1907,67,1287,73],[1907,68,1287,74],[1907,96,1287,102],[1907,97,1287,103],[1908,16,1288,20],[1909,16,1289,20],[1910,14,1290,16],[1910,19,1290,21],[1910,25,1290,27],[1911,16,1291,20],[1911,20,1291,24],[1911,24,1291,28],[1911,25,1291,29,"flowType"],[1911,33,1291,37],[1911,38,1291,42],[1911,48,1291,52],[1911,50,1291,54],[1912,18,1292,24],[1912,24,1292,30],[1912,28,1292,34,"errors_1"],[1912,36,1292,42],[1912,37,1292,43,"AuthImplicitGrantRedirectError"],[1912,67,1292,73],[1912,68,1292,74],[1912,106,1292,112],[1912,107,1292,113],[1913,16,1293,20],[1914,16,1294,20],[1915,14,1295,16],[1916,14,1296,16],[1917,12,1297,12],[1918,12,1298,12],[1919,12,1299,12],[1919,16,1299,16,"callbackUrlType"],[1919,31,1299,31],[1919,36,1299,36],[1919,42,1299,42],[1919,44,1299,44],[1920,14,1300,16],[1920,18,1300,20],[1920,19,1300,21,"_debug"],[1920,25,1300,27],[1920,26,1300,28],[1920,42,1300,44],[1920,44,1300,46],[1920,51,1300,53],[1920,53,1300,55],[1920,67,1300,69],[1920,69,1300,71],[1920,73,1300,75],[1920,74,1300,76],[1921,14,1301,16],[1921,18,1301,20],[1921,19,1301,21,"params"],[1921,25,1301,27],[1921,26,1301,28,"code"],[1921,30,1301,32],[1921,32,1302,20],[1921,38,1302,26],[1921,42,1302,30,"errors_1"],[1921,50,1302,38],[1921,51,1302,39,"AuthPKCEGrantCodeExchangeError"],[1921,81,1302,69],[1921,82,1302,70],[1921,101,1302,89],[1921,102,1302,90],[1922,14,1303,16],[1922,18,1303,16,"_yield$this$_exchange"],[1922,39,1303,16],[1922,48,1303,46],[1922,52,1303,50],[1922,53,1303,51,"_exchangeCodeForSession"],[1922,76,1303,74],[1922,77,1303,75,"params"],[1922,83,1303,81],[1922,84,1303,82,"code"],[1922,88,1303,86],[1922,89,1303,87],[1923,16,1303,24,"data"],[1923,21,1303,28],[1923,24,1303,28,"_yield$this$_exchange"],[1923,45,1303,28],[1923,46,1303,24,"data"],[1923,50,1303,28],[1924,16,1303,30,"error"],[1924,23,1303,35],[1924,26,1303,35,"_yield$this$_exchange"],[1924,47,1303,35],[1924,48,1303,30,"error"],[1924,53,1303,35],[1925,14,1304,16],[1925,18,1304,20,"error"],[1925,25,1304,25],[1925,27,1305,20],[1925,33,1305,26,"error"],[1925,40,1305,31],[1926,14,1306,16],[1926,18,1306,22,"url"],[1926,21,1306,25],[1926,24,1306,28],[1926,28,1306,32,"URL"],[1926,31,1306,35],[1926,32,1306,36,"window"],[1926,38,1306,42],[1926,39,1306,43,"location"],[1926,47,1306,51],[1926,48,1306,52,"href"],[1926,52,1306,56],[1926,53,1306,57],[1927,14,1307,16,"url"],[1927,17,1307,19],[1927,18,1307,20,"searchParams"],[1927,30,1307,32],[1927,31,1307,33,"delete"],[1927,37,1307,39],[1927,38,1307,40],[1927,44,1307,46],[1927,45,1307,47],[1928,14,1308,16,"window"],[1928,20,1308,22],[1928,21,1308,23,"history"],[1928,28,1308,30],[1928,29,1308,31,"replaceState"],[1928,41,1308,43],[1928,42,1308,44,"window"],[1928,48,1308,50],[1928,49,1308,51,"history"],[1928,56,1308,58],[1928,57,1308,59,"state"],[1928,62,1308,64],[1928,64,1308,66],[1928,66,1308,68],[1928,68,1308,70,"url"],[1928,71,1308,73],[1928,72,1308,74,"toString"],[1928,80,1308,82],[1928,81,1308,83],[1928,82,1308,84],[1928,83,1308,85],[1929,14,1309,16],[1929,21,1309,23],[1930,16,1309,25,"data"],[1930,20,1309,29],[1930,22,1309,31],[1931,18,1309,33,"session"],[1931,25,1309,40],[1931,27,1309,42,"data"],[1931,32,1309,46],[1931,33,1309,47,"session"],[1931,40,1309,54],[1932,18,1309,56,"redirectType"],[1932,30,1309,68],[1932,32,1309,70],[1933,16,1309,75],[1933,17,1309,76],[1934,16,1309,78,"error"],[1934,21,1309,83],[1934,23,1309,85],[1935,14,1309,90],[1935,15,1309,91],[1936,12,1310,12],[1937,12,1311,12],[1937,16,1311,20,"provider_token"],[1937,30,1311,34],[1937,33,1311,129,"params"],[1937,39,1311,135],[1937,40,1311,20,"provider_token"],[1937,54,1311,34],[1938,14,1311,36,"provider_refresh_token"],[1938,36,1311,58],[1938,39,1311,129,"params"],[1938,45,1311,135],[1938,46,1311,36,"provider_refresh_token"],[1938,68,1311,58],[1939,14,1311,60,"access_token"],[1939,26,1311,72],[1939,29,1311,129,"params"],[1939,35,1311,135],[1939,36,1311,60,"access_token"],[1939,48,1311,72],[1940,14,1311,74,"refresh_token"],[1940,27,1311,87],[1940,30,1311,129,"params"],[1940,36,1311,135],[1940,37,1311,74,"refresh_token"],[1940,50,1311,87],[1941,14,1311,89,"expires_in"],[1941,24,1311,99],[1941,27,1311,129,"params"],[1941,33,1311,135],[1941,34,1311,89,"expires_in"],[1941,44,1311,99],[1942,14,1311,101,"expires_at"],[1942,24,1311,111],[1942,27,1311,129,"params"],[1942,33,1311,135],[1942,34,1311,101,"expires_at"],[1942,44,1311,111],[1943,14,1311,113,"token_type"],[1943,24,1311,123],[1943,27,1311,129,"params"],[1943,33,1311,135],[1943,34,1311,113,"token_type"],[1943,44,1311,123],[1944,12,1312,12],[1944,16,1312,16],[1944,17,1312,17,"access_token"],[1944,29,1312,29],[1944,33,1312,33],[1944,34,1312,34,"expires_in"],[1944,44,1312,44],[1944,48,1312,48],[1944,49,1312,49,"refresh_token"],[1944,62,1312,62],[1944,66,1312,66],[1944,67,1312,67,"token_type"],[1944,77,1312,77],[1944,79,1312,79],[1945,14,1313,16],[1945,20,1313,22],[1945,24,1313,26,"errors_1"],[1945,32,1313,34],[1945,33,1313,35,"AuthImplicitGrantRedirectError"],[1945,63,1313,65],[1945,64,1313,66],[1945,91,1313,93],[1945,92,1313,94],[1946,12,1314,12],[1947,12,1315,12],[1947,16,1315,18,"timeNow"],[1947,23,1315,25],[1947,26,1315,28,"Math"],[1947,30,1315,32],[1947,31,1315,33,"round"],[1947,36,1315,38],[1947,37,1315,39,"Date"],[1947,41,1315,43],[1947,42,1315,44,"now"],[1947,45,1315,47],[1947,46,1315,48],[1947,47,1315,49],[1947,50,1315,52],[1947,54,1315,56],[1947,55,1315,57],[1948,12,1316,12],[1948,16,1316,18,"expiresIn"],[1948,25,1316,27],[1948,28,1316,30,"parseInt"],[1948,36,1316,38],[1948,37,1316,39,"expires_in"],[1948,47,1316,49],[1948,48,1316,50],[1949,12,1317,12],[1949,16,1317,16,"expiresAt"],[1949,25,1317,25],[1949,28,1317,28,"timeNow"],[1949,35,1317,35],[1949,38,1317,38,"expiresIn"],[1949,47,1317,47],[1950,12,1318,12],[1950,16,1318,16,"expires_at"],[1950,26,1318,26],[1950,28,1318,28],[1951,14,1319,16,"expiresAt"],[1951,23,1319,25],[1951,26,1319,28,"parseInt"],[1951,34,1319,36],[1951,35,1319,37,"expires_at"],[1951,45,1319,47],[1951,46,1319,48],[1952,12,1320,12],[1953,12,1321,12],[1953,16,1321,18,"actuallyExpiresIn"],[1953,33,1321,35],[1953,36,1321,38,"expiresAt"],[1953,45,1321,47],[1953,48,1321,50,"timeNow"],[1953,55,1321,57],[1954,12,1322,12],[1954,16,1322,16,"actuallyExpiresIn"],[1954,33,1322,33],[1954,36,1322,36],[1954,40,1322,40],[1954,44,1322,44,"constants_1"],[1954,55,1322,55],[1954,56,1322,56,"AUTO_REFRESH_TICK_DURATION_MS"],[1954,85,1322,85],[1954,87,1322,87],[1955,14,1323,16,"console"],[1955,21,1323,23],[1955,22,1323,24,"warn"],[1955,26,1323,28],[1955,27,1323,29],[1955,92,1323,94,"actuallyExpiresIn"],[1955,109,1323,111],[1955,142,1323,144,"expiresIn"],[1955,151,1323,153],[1955,154,1323,156],[1955,155,1323,157],[1956,12,1324,12],[1957,12,1325,12],[1957,16,1325,18,"issuedAt"],[1957,24,1325,26],[1957,27,1325,29,"expiresAt"],[1957,36,1325,38],[1957,39,1325,41,"expiresIn"],[1957,48,1325,50],[1958,12,1326,12],[1958,16,1326,16,"timeNow"],[1958,23,1326,23],[1958,26,1326,26,"issuedAt"],[1958,34,1326,34],[1958,38,1326,38],[1958,41,1326,41],[1958,43,1326,43],[1959,14,1327,16,"console"],[1959,21,1327,23],[1959,22,1327,24,"warn"],[1959,26,1327,28],[1959,27,1327,29],[1959,124,1327,126],[1959,126,1327,128,"issuedAt"],[1959,134,1327,136],[1959,136,1327,138,"expiresAt"],[1959,145,1327,147],[1959,147,1327,149,"timeNow"],[1959,154,1327,156],[1959,155,1327,157],[1960,12,1328,12],[1960,13,1328,13],[1960,19,1329,17],[1960,23,1329,21,"timeNow"],[1960,30,1329,28],[1960,33,1329,31,"issuedAt"],[1960,41,1329,39],[1960,44,1329,42],[1960,45,1329,43],[1960,47,1329,45],[1961,14,1330,16,"console"],[1961,21,1330,23],[1961,22,1330,24,"warn"],[1961,26,1330,28],[1961,27,1330,29],[1961,137,1330,139],[1961,139,1330,141,"issuedAt"],[1961,147,1330,149],[1961,149,1330,151,"expiresAt"],[1961,158,1330,160],[1961,160,1330,162,"timeNow"],[1961,167,1330,169],[1961,168,1330,170],[1962,12,1331,12],[1963,12,1332,12],[1963,16,1332,12,"_yield$this$_getUser2"],[1963,37,1332,12],[1963,46,1332,42],[1963,50,1332,46],[1963,51,1332,47,"_getUser"],[1963,59,1332,55],[1963,60,1332,56,"access_token"],[1963,72,1332,68],[1963,73,1332,69],[1964,14,1332,20,"data"],[1964,18,1332,24],[1964,21,1332,24,"_yield$this$_getUser2"],[1964,42,1332,24],[1964,43,1332,20,"data"],[1964,47,1332,24],[1965,14,1332,26,"error"],[1965,19,1332,31],[1965,22,1332,31,"_yield$this$_getUser2"],[1965,43,1332,31],[1965,44,1332,26,"error"],[1965,49,1332,31],[1966,12,1333,12],[1966,16,1333,16,"error"],[1966,21,1333,21],[1966,23,1334,16],[1966,29,1334,22,"error"],[1966,34,1334,27],[1967,12,1335,12],[1967,16,1335,18,"session"],[1967,23,1335,25],[1967,26,1335,28],[1968,14,1336,16,"provider_token"],[1968,28,1336,30],[1969,14,1337,16,"provider_refresh_token"],[1969,36,1337,38],[1970,14,1338,16,"access_token"],[1970,26,1338,28],[1971,14,1339,16,"expires_in"],[1971,24,1339,26],[1971,26,1339,28,"expiresIn"],[1971,35,1339,37],[1972,14,1340,16,"expires_at"],[1972,24,1340,26],[1972,26,1340,28,"expiresAt"],[1972,35,1340,37],[1973,14,1341,16,"refresh_token"],[1973,27,1341,29],[1974,14,1342,16,"token_type"],[1974,24,1342,26],[1975,14,1343,16,"user"],[1975,18,1343,20],[1975,20,1343,22,"data"],[1975,24,1343,26],[1975,25,1343,27,"user"],[1976,12,1344,12],[1976,13,1344,13],[1977,12,1345,12],[1978,12,1346,12,"window"],[1978,18,1346,18],[1978,19,1346,19,"location"],[1978,27,1346,27],[1978,28,1346,28,"hash"],[1978,32,1346,32],[1978,35,1346,35],[1978,37,1346,37],[1979,12,1347,12],[1979,16,1347,16],[1979,17,1347,17,"_debug"],[1979,23,1347,23],[1979,24,1347,24],[1979,47,1347,47],[1979,49,1347,49],[1979,80,1347,80],[1979,81,1347,81],[1980,12,1348,12],[1980,19,1348,19],[1981,14,1348,21,"data"],[1981,18,1348,25],[1981,20,1348,27],[1982,16,1348,29,"session"],[1982,23,1348,36],[1983,16,1348,38,"redirectType"],[1983,28,1348,50],[1983,30,1348,52,"params"],[1983,36,1348,58],[1983,37,1348,59,"type"],[1984,14,1348,64],[1984,15,1348,65],[1985,14,1348,67,"error"],[1985,19,1348,72],[1985,21,1348,74],[1986,12,1348,79],[1986,13,1348,80],[1987,10,1349,8],[1987,11,1349,9],[1987,12,1350,8],[1987,19,1350,15,"error"],[1987,24,1350,20],[1987,26,1350,22],[1988,12,1351,12],[1988,16,1351,16],[1988,17,1351,17],[1988,18,1351,18],[1988,20,1351,20,"errors_1"],[1988,28,1351,28],[1988,29,1351,29,"isAuthError"],[1988,40,1351,40],[1988,42,1351,42,"error"],[1988,47,1351,47],[1988,48,1351,48],[1988,50,1351,50],[1989,14,1352,16],[1989,21,1352,23],[1990,16,1352,25,"data"],[1990,20,1352,29],[1990,22,1352,31],[1991,18,1352,33,"session"],[1991,25,1352,40],[1991,27,1352,42],[1991,31,1352,46],[1992,18,1352,48,"redirectType"],[1992,30,1352,60],[1992,32,1352,62],[1993,16,1352,67],[1993,17,1352,68],[1994,16,1352,70,"error"],[1995,14,1352,76],[1995,15,1352,77],[1996,12,1353,12],[1997,12,1354,12],[1997,18,1354,18,"error"],[1997,23,1354,23],[1998,10,1355,8],[1999,8,1356,4],[1999,9,1356,5],[2000,8,1356,5],[2000,17,1270,10,"_getSessionFromURL"],[2000,35,1270,28,"_getSessionFromURL"],[2000,36,1270,28,"_x32"],[2000,40,1270,28],[2000,42,1270,28,"_x33"],[2000,46,1270,28],[2001,10,1270,28],[2001,17,1270,28,"_getSessionFromURL2"],[2001,36,1270,28],[2001,37,1270,28,"apply"],[2001,42,1270,28],[2001,49,1270,28,"arguments"],[2001,58,1270,28],[2002,8,1270,28],[2003,8,1270,28],[2003,15,1270,10,"_getSessionFromURL"],[2003,33,1270,28],[2004,6,1270,28],[2005,6,1357,4],[2006,0,1358,0],[2007,0,1359,0],[2008,6,1357,4],[2009,4,1357,4],[2010,6,1357,4,"key"],[2010,9,1357,4],[2011,6,1357,4,"value"],[2011,11,1357,4],[2011,13,1360,4],[2011,22,1360,4,"_isImplicitGrantCallback"],[2011,46,1360,28,"_isImplicitGrantCallback"],[2011,47,1360,29,"params"],[2011,53,1360,35],[2011,55,1360,37],[2012,8,1361,8],[2012,15,1361,15,"Boolean"],[2012,22,1361,22],[2012,23,1361,23,"params"],[2012,29,1361,29],[2012,30,1361,30,"access_token"],[2012,42,1361,42],[2012,46,1361,46,"params"],[2012,52,1361,52],[2012,53,1361,53,"error_description"],[2012,70,1361,70],[2012,71,1361,71],[2013,6,1362,4],[2014,6,1363,4],[2015,0,1364,0],[2016,0,1365,0],[2017,4,1363,4],[2018,6,1363,4,"key"],[2018,9,1363,4],[2019,6,1363,4,"value"],[2019,11,1363,4],[2020,8,1363,4],[2020,12,1363,4,"_isPKCECallback2"],[2020,28,1363,4],[2020,31,1363,4,"_asyncToGenerator"],[2020,48,1363,4],[2020,49,1366,4],[2020,60,1366,26,"params"],[2020,66,1366,32],[2020,68,1366,34],[2021,10,1367,8],[2021,14,1367,14,"currentStorageContent"],[2021,35,1367,35],[2021,44,1367,44],[2021,45,1367,45],[2021,46,1367,46],[2021,48,1367,48,"helpers_1"],[2021,57,1367,57],[2021,58,1367,58,"getItemAsync"],[2021,70,1367,70],[2021,72,1367,72],[2021,76,1367,76],[2021,77,1367,77,"storage"],[2021,84,1367,84],[2021,86,1367,86],[2021,89,1367,89],[2021,93,1367,93],[2021,94,1367,94,"storageKey"],[2021,104,1367,104],[2021,120,1367,120],[2021,121,1367,121],[2022,10,1368,8],[2022,17,1368,15],[2022,18,1368,16],[2022,20,1368,18,"params"],[2022,26,1368,24],[2022,27,1368,25,"code"],[2022,31,1368,29],[2022,35,1368,33,"currentStorageContent"],[2022,56,1368,54],[2022,57,1368,55],[2023,8,1369,4],[2023,9,1369,5],[2024,8,1369,5],[2024,17,1366,10,"_isPKCECallback"],[2024,32,1366,25,"_isPKCECallback"],[2024,33,1366,25,"_x34"],[2024,37,1366,25],[2025,10,1366,25],[2025,17,1366,25,"_isPKCECallback2"],[2025,33,1366,25],[2025,34,1366,25,"apply"],[2025,39,1366,25],[2025,46,1366,25,"arguments"],[2025,55,1366,25],[2026,8,1366,25],[2027,8,1366,25],[2027,15,1366,10,"_isPKCECallback"],[2027,30,1366,25],[2028,6,1366,25],[2029,6,1370,4],[2030,0,1371,0],[2031,0,1372,0],[2032,0,1373,0],[2033,0,1374,0],[2034,0,1375,0],[2035,0,1376,0],[2036,0,1377,0],[2037,6,1370,4],[2038,4,1370,4],[2039,6,1370,4,"key"],[2039,9,1370,4],[2040,6,1370,4,"value"],[2040,11,1370,4],[2041,8,1370,4],[2041,12,1370,4,"_signOut2"],[2041,21,1370,4],[2041,24,1370,4,"_asyncToGenerator"],[2041,41,1370,4],[2041,42,1378,4],[2041,55,1378,49],[2042,10,1378,49],[2042,14,1378,49,"_this14"],[2042,21,1378,49],[2043,10,1378,49],[2043,14,1378,18,"options"],[2043,21,1378,25],[2043,24,1378,25,"arguments"],[2043,33,1378,25],[2043,34,1378,25,"length"],[2043,40,1378,25],[2043,48,1378,25,"arguments"],[2043,57,1378,25],[2043,65,1378,25,"undefined"],[2043,74,1378,25],[2043,77,1378,25,"arguments"],[2043,86,1378,25],[2043,92,1378,28],[2044,12,1378,30,"scope"],[2044,17,1378,35],[2044,19,1378,37],[2045,10,1378,46],[2045,11,1378,47],[2046,10,1379,8],[2046,16,1379,14],[2046,20,1379,18],[2046,21,1379,19,"initializePromise"],[2046,38,1379,36],[2047,10,1380,8],[2047,23,1380,21],[2047,27,1380,25],[2047,28,1380,26,"_acquireLock"],[2047,40,1380,38],[2047,41,1380,39],[2047,42,1380,40],[2047,43,1380,41],[2047,58,1380,41,"_asyncToGenerator"],[2047,75,1380,41],[2047,76,1380,43],[2047,89,1380,55],[2048,12,1381,12],[2048,25,1381,25,"_this14"],[2048,32,1381,29],[2048,33,1381,30,"_signOut"],[2048,41,1381,38],[2048,42,1381,39,"options"],[2048,49,1381,46],[2048,50,1381,47],[2049,10,1382,8],[2049,11,1382,9],[2049,13,1382,10],[2050,8,1383,4],[2050,9,1383,5],[2051,8,1383,5],[2051,17,1378,10,"signOut"],[2051,24,1378,17,"signOut"],[2051,25,1378,17],[2052,10,1378,17],[2052,17,1378,17,"_signOut2"],[2052,26,1378,17],[2052,27,1378,17,"apply"],[2052,32,1378,17],[2052,39,1378,17,"arguments"],[2052,48,1378,17],[2053,8,1378,17],[2054,8,1378,17],[2054,15,1378,10,"signOut"],[2054,22,1378,17],[2055,6,1378,17],[2056,4,1378,17],[2057,6,1378,17,"key"],[2057,9,1378,17],[2058,6,1378,17,"value"],[2058,11,1378,17],[2059,8,1378,17],[2059,12,1378,17,"_signOut3"],[2059,21,1378,17],[2059,24,1378,17,"_asyncToGenerator"],[2059,41,1378,17],[2059,42,1384,4],[2059,55,1384,52],[2060,10,1384,52],[2060,14,1384,52,"_this15"],[2060,21,1384,52],[2061,10,1384,52],[2061,14,1384,52,"_ref21"],[2061,20,1384,52],[2061,23,1384,52,"arguments"],[2061,32,1384,52],[2061,33,1384,52,"length"],[2061,39,1384,52],[2061,47,1384,52,"arguments"],[2061,56,1384,52],[2061,64,1384,52,"undefined"],[2061,73,1384,52],[2061,76,1384,52,"arguments"],[2061,85,1384,52],[2061,91,1384,31],[2062,14,1384,33,"scope"],[2062,19,1384,38],[2062,21,1384,40],[2063,12,1384,49],[2063,13,1384,50],[2064,12,1384,21,"scope"],[2064,17,1384,26],[2064,20,1384,26,"_ref21"],[2064,26,1384,26],[2064,27,1384,21,"scope"],[2064,32,1384,26],[2065,10,1385,8],[2065,23,1385,21],[2065,27,1385,25],[2065,28,1385,26,"_useSession"],[2065,39,1385,37],[2066,12,1385,37],[2066,16,1385,37,"_ref22"],[2066,22,1385,37],[2066,25,1385,37,"_asyncToGenerator"],[2066,42,1385,37],[2066,43,1385,38],[2066,54,1385,45,"result"],[2066,60,1385,51],[2066,62,1385,56],[2067,14,1386,12],[2067,18,1386,16,"_a"],[2067,20,1386,18],[2068,14,1387,12],[2068,18,1387,20,"data"],[2068,22,1387,24],[2068,25,1387,50,"result"],[2068,31,1387,56],[2068,32,1387,20,"data"],[2068,36,1387,24],[2069,16,1387,33,"sessionError"],[2069,28,1387,45],[2069,31,1387,50,"result"],[2069,37,1387,56],[2069,38,1387,26,"error"],[2069,43,1387,31],[2070,14,1388,12],[2070,18,1388,16,"sessionError"],[2070,30,1388,28],[2070,32,1388,30],[2071,16,1389,16],[2071,23,1389,23],[2072,18,1389,25,"error"],[2072,23,1389,30],[2072,25,1389,32,"sessionError"],[2073,16,1389,45],[2073,17,1389,46],[2074,14,1390,12],[2075,14,1391,12],[2075,18,1391,18,"accessToken"],[2075,29,1391,29],[2075,32,1391,32],[2075,33,1391,33,"_a"],[2075,35,1391,35],[2075,38,1391,38,"data"],[2075,42,1391,42],[2075,43,1391,43,"session"],[2075,50,1391,50],[2075,56,1391,56],[2075,60,1391,60],[2075,64,1391,64,"_a"],[2075,66,1391,66],[2075,71,1391,71],[2075,76,1391,76],[2075,77,1391,77],[2075,80,1391,80],[2075,85,1391,85],[2075,86,1391,86],[2075,89,1391,89,"_a"],[2075,91,1391,91],[2075,92,1391,92,"access_token"],[2075,104,1391,104],[2076,14,1392,12],[2076,18,1392,16,"accessToken"],[2076,29,1392,27],[2076,31,1392,29],[2077,16,1393,16],[2077,20,1393,16,"_yield$_this15$admin$"],[2077,41,1393,16],[2077,50,1393,40,"_this15"],[2077,57,1393,44],[2077,58,1393,45,"admin"],[2077,63,1393,50],[2077,64,1393,51,"signOut"],[2077,71,1393,58],[2077,72,1393,59,"accessToken"],[2077,83,1393,70],[2077,85,1393,72,"scope"],[2077,90,1393,77],[2077,91,1393,78],[2078,18,1393,24,"error"],[2078,23,1393,29],[2078,26,1393,29,"_yield$_this15$admin$"],[2078,47,1393,29],[2078,48,1393,24,"error"],[2078,53,1393,29],[2079,16,1394,16],[2079,20,1394,20,"error"],[2079,25,1394,25],[2079,27,1394,27],[2080,18,1395,20],[2081,18,1396,20],[2082,18,1397,20],[2082,22,1397,24],[2082,24,1397,26],[2082,25,1397,27],[2082,26,1397,28],[2082,28,1397,30,"errors_1"],[2082,36,1397,38],[2082,37,1397,39,"isAuthApiError"],[2082,51,1397,53],[2082,53,1397,55,"error"],[2082,58,1397,60],[2082,59,1397,61],[2082,64,1398,25,"error"],[2082,69,1398,30],[2082,70,1398,31,"status"],[2082,76,1398,37],[2082,81,1398,42],[2082,84,1398,45],[2082,88,1398,49,"error"],[2082,93,1398,54],[2082,94,1398,55,"status"],[2082,100,1398,61],[2082,105,1398,66],[2082,108,1398,69],[2082,112,1398,73,"error"],[2082,117,1398,78],[2082,118,1398,79,"status"],[2082,124,1398,85],[2082,129,1398,90],[2082,132,1398,93],[2082,133,1398,94],[2082,134,1398,95],[2082,136,1398,97],[2083,20,1399,24],[2083,27,1399,31],[2084,22,1399,33,"error"],[2085,20,1399,39],[2085,21,1399,40],[2086,18,1400,20],[2087,16,1401,16],[2088,14,1402,12],[2089,14,1403,12],[2089,18,1403,16,"scope"],[2089,23,1403,21],[2089,28,1403,26],[2089,36,1403,34],[2089,38,1403,36],[2090,16,1404,16],[2090,22,1404,22,"_this15"],[2090,29,1404,26],[2090,30,1404,27,"_removeSession"],[2090,44,1404,41],[2090,45,1404,42],[2090,46,1404,43],[2091,16,1405,16],[2091,22,1405,22],[2091,23,1405,23],[2091,24,1405,24],[2091,26,1405,26,"helpers_1"],[2091,35,1405,35],[2091,36,1405,36,"removeItemAsync"],[2091,51,1405,51],[2091,53,1405,53,"_this15"],[2091,60,1405,57],[2091,61,1405,58,"storage"],[2091,68,1405,65],[2091,70,1405,67],[2091,73,1405,70,"_this15"],[2091,80,1405,74],[2091,81,1405,75,"storageKey"],[2091,91,1405,85],[2091,107,1405,101],[2091,108,1405,102],[2092,14,1406,12],[2093,14,1407,12],[2093,21,1407,19],[2094,16,1407,21,"error"],[2094,21,1407,26],[2094,23,1407,28],[2095,14,1407,33],[2095,15,1407,34],[2096,12,1408,8],[2096,13,1408,9],[2097,12,1408,9],[2097,29,1408,9,"_x35"],[2097,33,1408,9],[2098,14,1408,9],[2098,21,1408,9,"_ref22"],[2098,27,1408,9],[2098,28,1408,9,"apply"],[2098,33,1408,9],[2098,40,1408,9,"arguments"],[2098,49,1408,9],[2099,12,1408,9],[2100,10,1408,9],[2100,14,1408,10],[2101,8,1409,4],[2101,9,1409,5],[2102,8,1409,5],[2102,17,1384,10,"_signOut"],[2102,25,1384,18,"_signOut"],[2102,26,1384,18],[2103,10,1384,18],[2103,17,1384,18,"_signOut3"],[2103,26,1384,18],[2103,27,1384,18,"apply"],[2103,32,1384,18],[2103,39,1384,18,"arguments"],[2103,48,1384,18],[2104,8,1384,18],[2105,8,1384,18],[2105,15,1384,10,"_signOut"],[2105,23,1384,18],[2106,6,1384,18],[2107,6,1410,4],[2108,0,1411,0],[2109,0,1412,0],[2110,0,1413,0],[2111,4,1410,4],[2112,6,1410,4,"key"],[2112,9,1410,4],[2113,6,1410,4,"value"],[2113,11,1410,4],[2113,13,1414,4],[2113,22,1414,4,"onAuthStateChange"],[2113,39,1414,21,"onAuthStateChange"],[2113,40,1414,22,"callback"],[2113,48,1414,30],[2113,50,1414,32],[2114,8,1414,32],[2114,12,1414,32,"_this16"],[2114,19,1414,32],[2115,8,1415,8],[2115,12,1415,14,"id"],[2115,14,1415,16],[2115,17,1415,19],[2115,18,1415,20],[2115,19,1415,21],[2115,21,1415,23,"helpers_1"],[2115,30,1415,32],[2115,31,1415,33,"uuid"],[2115,35,1415,37],[2115,37,1415,39],[2115,38,1415,40],[2116,8,1416,8],[2116,12,1416,14,"subscription"],[2116,24,1416,26],[2116,27,1416,29],[2117,10,1417,12,"id"],[2117,12,1417,14],[2118,10,1418,12,"callback"],[2118,18,1418,20],[2119,10,1419,12,"unsubscribe"],[2119,21,1419,23],[2119,23,1419,25,"unsubscribe"],[2119,24,1419,25],[2119,29,1419,31],[2120,12,1420,16],[2120,16,1420,20],[2120,17,1420,21,"_debug"],[2120,23,1420,27],[2120,24,1420,28],[2120,40,1420,44],[2120,42,1420,46],[2120,81,1420,85],[2120,83,1420,87,"id"],[2120,85,1420,89],[2120,86,1420,90],[2121,12,1421,16],[2121,16,1421,20],[2121,17,1421,21,"stateChangeEmitters"],[2121,36,1421,40],[2121,37,1421,41,"delete"],[2121,43,1421,47],[2121,44,1421,48,"id"],[2121,46,1421,50],[2121,47,1421,51],[2122,10,1422,12],[2123,8,1423,8],[2123,9,1423,9],[2124,8,1424,8],[2124,12,1424,12],[2124,13,1424,13,"_debug"],[2124,19,1424,19],[2124,20,1424,20],[2124,42,1424,42],[2124,44,1424,44],[2124,73,1424,73],[2124,75,1424,75,"id"],[2124,77,1424,77],[2124,78,1424,78],[2125,8,1425,8],[2125,12,1425,12],[2125,13,1425,13,"stateChangeEmitters"],[2125,32,1425,32],[2125,33,1425,33,"set"],[2125,36,1425,36],[2125,37,1425,37,"id"],[2125,39,1425,39],[2125,41,1425,41,"subscription"],[2125,53,1425,53],[2125,54,1425,54],[2126,8,1426,8,"_asyncToGenerator"],[2126,25,1426,8],[2126,26,1426,9],[2126,39,1426,21],[2127,10,1427,12],[2127,16,1427,18,"_this16"],[2127,23,1427,22],[2127,24,1427,23,"initializePromise"],[2127,41,1427,40],[2128,10,1428,12],[2128,16,1428,18,"_this16"],[2128,23,1428,22],[2128,24,1428,23,"_acquireLock"],[2128,36,1428,35],[2128,37,1428,36],[2128,38,1428,37],[2128,39,1428,38],[2128,54,1428,38,"_asyncToGenerator"],[2128,71,1428,38],[2128,72,1428,40],[2128,85,1428,52],[2129,12,1429,16,"_this16"],[2129,19,1429,20],[2129,20,1429,21,"_emitInitialSession"],[2129,39,1429,40],[2129,40,1429,41,"id"],[2129,42,1429,43],[2129,43,1429,44],[2130,10,1430,12],[2130,11,1430,13],[2130,13,1430,14],[2131,8,1431,8],[2131,9,1431,9],[2131,11,1431,11],[2131,12,1431,12],[2132,8,1432,8],[2132,15,1432,15],[2133,10,1432,17,"data"],[2133,14,1432,21],[2133,16,1432,23],[2134,12,1432,25,"subscription"],[2135,10,1432,38],[2136,8,1432,40],[2136,9,1432,41],[2137,6,1433,4],[2138,4,1433,5],[2139,6,1433,5,"key"],[2139,9,1433,5],[2140,6,1433,5,"value"],[2140,11,1433,5],[2141,8,1433,5],[2141,12,1433,5,"_emitInitialSession2"],[2141,32,1433,5],[2141,35,1433,5,"_asyncToGenerator"],[2141,52,1433,5],[2141,53,1434,4],[2141,64,1434,30,"id"],[2141,66,1434,32],[2141,68,1434,34],[2142,10,1434,34],[2142,14,1434,34,"_this17"],[2142,21,1434,34],[2143,10,1435,8],[2143,23,1435,21],[2143,27,1435,25],[2143,28,1435,26,"_useSession"],[2143,39,1435,37],[2144,12,1435,37],[2144,16,1435,37,"_ref25"],[2144,22,1435,37],[2144,25,1435,37,"_asyncToGenerator"],[2144,42,1435,37],[2144,43,1435,38],[2144,54,1435,45,"result"],[2144,60,1435,51],[2144,62,1435,56],[2145,14,1436,12],[2145,18,1436,16,"_a"],[2145,20,1436,18],[2145,22,1436,20,"_b"],[2145,24,1436,22],[2146,14,1437,12],[2146,18,1437,16],[2147,16,1438,16],[2147,20,1438,32,"session"],[2147,27,1438,39],[2147,30,1438,54,"result"],[2147,36,1438,60],[2147,37,1438,24,"data"],[2147,41,1438,28],[2147,42,1438,32,"session"],[2147,49,1438,39],[2148,18,1438,43,"error"],[2148,23,1438,48],[2148,26,1438,54,"result"],[2148,32,1438,60],[2148,33,1438,43,"error"],[2148,38,1438,48],[2149,16,1439,16],[2149,20,1439,20,"error"],[2149,25,1439,25],[2149,27,1440,20],[2149,33,1440,26,"error"],[2149,38,1440,31],[2150,16,1441,16],[2150,22,1441,23],[2150,23,1441,24,"_a"],[2150,25,1441,26],[2150,28,1441,29,"_this17"],[2150,35,1441,33],[2150,36,1441,34,"stateChangeEmitters"],[2150,55,1441,53],[2150,56,1441,54,"get"],[2150,59,1441,57],[2150,60,1441,58,"id"],[2150,62,1441,60],[2150,63,1441,61],[2150,69,1441,67],[2150,73,1441,71],[2150,77,1441,75,"_a"],[2150,79,1441,77],[2150,84,1441,82],[2150,89,1441,87],[2150,90,1441,88],[2150,93,1441,91],[2150,98,1441,96],[2150,99,1441,97],[2150,102,1441,100,"_a"],[2150,104,1441,102],[2150,105,1441,103,"callback"],[2150,113,1441,111],[2150,114,1441,112],[2150,131,1441,129],[2150,133,1441,131,"session"],[2150,140,1441,138],[2150,141,1441,139],[2151,16,1442,16,"_this17"],[2151,23,1442,20],[2151,24,1442,21,"_debug"],[2151,30,1442,27],[2151,31,1442,28],[2151,48,1442,45],[2151,50,1442,47],[2151,63,1442,60],[2151,65,1442,62,"id"],[2151,67,1442,64],[2151,69,1442,66],[2151,78,1442,75],[2151,80,1442,77,"session"],[2151,87,1442,84],[2151,88,1442,85],[2152,14,1443,12],[2152,15,1443,13],[2152,16,1444,12],[2152,23,1444,19,"err"],[2152,26,1444,22],[2152,28,1444,24],[2153,16,1445,16],[2153,22,1445,23],[2153,23,1445,24,"_b"],[2153,25,1445,26],[2153,28,1445,29,"_this17"],[2153,35,1445,33],[2153,36,1445,34,"stateChangeEmitters"],[2153,55,1445,53],[2153,56,1445,54,"get"],[2153,59,1445,57],[2153,60,1445,58,"id"],[2153,62,1445,60],[2153,63,1445,61],[2153,69,1445,67],[2153,73,1445,71],[2153,77,1445,75,"_b"],[2153,79,1445,77],[2153,84,1445,82],[2153,89,1445,87],[2153,90,1445,88],[2153,93,1445,91],[2153,98,1445,96],[2153,99,1445,97],[2153,102,1445,100,"_b"],[2153,104,1445,102],[2153,105,1445,103,"callback"],[2153,113,1445,111],[2153,114,1445,112],[2153,131,1445,129],[2153,133,1445,131],[2153,137,1445,135],[2153,138,1445,136],[2154,16,1446,16,"_this17"],[2154,23,1446,20],[2154,24,1446,21,"_debug"],[2154,30,1446,27],[2154,31,1446,28],[2154,48,1446,45],[2154,50,1446,47],[2154,63,1446,60],[2154,65,1446,62,"id"],[2154,67,1446,64],[2154,69,1446,66],[2154,76,1446,73],[2154,78,1446,75,"err"],[2154,81,1446,78],[2154,82,1446,79],[2155,16,1447,16,"console"],[2155,23,1447,23],[2155,24,1447,24,"error"],[2155,29,1447,29],[2155,30,1447,30,"err"],[2155,33,1447,33],[2155,34,1447,34],[2156,14,1448,12],[2157,12,1449,8],[2157,13,1449,9],[2158,12,1449,9],[2158,29,1449,9,"_x37"],[2158,33,1449,9],[2159,14,1449,9],[2159,21,1449,9,"_ref25"],[2159,27,1449,9],[2159,28,1449,9,"apply"],[2159,33,1449,9],[2159,40,1449,9,"arguments"],[2159,49,1449,9],[2160,12,1449,9],[2161,10,1449,9],[2161,14,1449,10],[2162,8,1450,4],[2162,9,1450,5],[2163,8,1450,5],[2163,17,1434,10,"_emitInitialSession"],[2163,36,1434,29,"_emitInitialSession"],[2163,37,1434,29,"_x36"],[2163,41,1434,29],[2164,10,1434,29],[2164,17,1434,29,"_emitInitialSession2"],[2164,37,1434,29],[2164,38,1434,29,"apply"],[2164,43,1434,29],[2164,50,1434,29,"arguments"],[2164,59,1434,29],[2165,8,1434,29],[2166,8,1434,29],[2166,15,1434,10,"_emitInitialSession"],[2166,34,1434,29],[2167,6,1434,29],[2168,6,1451,4],[2169,0,1452,0],[2170,0,1453,0],[2171,0,1454,0],[2172,0,1455,0],[2173,0,1456,0],[2174,0,1457,0],[2175,4,1451,4],[2176,6,1451,4,"key"],[2176,9,1451,4],[2177,6,1451,4,"value"],[2177,11,1451,4],[2178,8,1451,4],[2178,12,1451,4,"_resetPasswordForEmail"],[2178,34,1451,4],[2178,37,1451,4,"_asyncToGenerator"],[2178,54,1451,4],[2178,55,1458,4],[2178,66,1458,32,"email"],[2178,71,1458,37],[2178,73,1458,53],[2179,10,1458,53],[2179,14,1458,39,"options"],[2179,21,1458,46],[2179,24,1458,46,"arguments"],[2179,33,1458,46],[2179,34,1458,46,"length"],[2179,40,1458,46],[2179,48,1458,46,"arguments"],[2179,57,1458,46],[2179,65,1458,46,"undefined"],[2179,74,1458,46],[2179,77,1458,46,"arguments"],[2179,86,1458,46],[2179,92,1458,49],[2179,93,1458,50],[2179,94,1458,51],[2180,10,1459,8],[2180,14,1459,12,"codeChallenge"],[2180,27,1459,25],[2180,30,1459,28],[2180,34,1459,32],[2181,10,1460,8],[2181,14,1460,12,"codeChallengeMethod"],[2181,33,1460,31],[2181,36,1460,34],[2181,40,1460,38],[2182,10,1461,8],[2182,14,1461,12],[2182,18,1461,16],[2182,19,1461,17,"flowType"],[2182,27,1461,25],[2182,32,1461,30],[2182,38,1461,36],[2182,40,1461,38],[2183,12,1462,12],[2184,12,1462,13],[2184,16,1462,13,"_yield16"],[2184,24,1462,13],[2184,33,1463,57],[2184,34,1463,58],[2184,35,1463,59],[2184,37,1463,61,"helpers_1"],[2184,46,1463,70],[2184,47,1463,71,"getCodeChallengeAndMethod"],[2184,72,1463,96],[2184,74,1463,98],[2184,78,1463,102],[2184,79,1463,103,"storage"],[2184,86,1463,110],[2184,88,1463,112],[2184,92,1463,116],[2184,93,1463,117,"storageKey"],[2184,103,1463,127],[2184,105,1463,129],[2184,109,1463,133],[2184,110,1463,134],[2185,12,1464,12],[2185,13,1464,13],[2186,12,1464,13],[2186,16,1464,13,"_yield17"],[2186,24,1464,13],[2186,27,1464,13,"_slicedToArray"],[2186,41,1464,13],[2186,42,1464,13,"_yield16"],[2186,50,1464,13],[2187,12,1463,13,"codeChallenge"],[2187,25,1463,26],[2187,28,1463,26,"_yield17"],[2187,36,1463,26],[2188,12,1463,28,"codeChallengeMethod"],[2188,31,1463,47],[2188,34,1463,47,"_yield17"],[2188,42,1463,47],[2189,10,1465,8],[2190,10,1466,8],[2190,14,1466,12],[2191,12,1467,12],[2191,25,1467,25],[2191,26,1467,26],[2191,27,1467,27],[2191,29,1467,29,"fetch_1"],[2191,36,1467,36],[2191,37,1467,37,"_request"],[2191,45,1467,45],[2191,47,1467,47],[2191,51,1467,51],[2191,52,1467,52,"fetch"],[2191,57,1467,57],[2191,59,1467,59],[2191,65,1467,65],[2191,67,1467,67],[2191,70,1467,70],[2191,74,1467,74],[2191,75,1467,75,"url"],[2191,78,1467,78],[2191,88,1467,88],[2191,90,1467,90],[2192,14,1468,16,"body"],[2192,18,1468,20],[2192,20,1468,22],[2193,16,1469,20,"email"],[2193,21,1469,25],[2194,16,1470,20,"code_challenge"],[2194,30,1470,34],[2194,32,1470,36,"codeChallenge"],[2194,45,1470,49],[2195,16,1471,20,"code_challenge_method"],[2195,37,1471,41],[2195,39,1471,43,"codeChallengeMethod"],[2195,58,1471,62],[2196,16,1472,20,"gotrue_meta_security"],[2196,36,1472,40],[2196,38,1472,42],[2197,18,1472,44,"captcha_token"],[2197,31,1472,57],[2197,33,1472,59,"options"],[2197,40,1472,66],[2197,41,1472,67,"captchaToken"],[2198,16,1472,80],[2199,14,1473,16],[2199,15,1473,17],[2200,14,1474,16,"headers"],[2200,21,1474,23],[2200,23,1474,25],[2200,27,1474,29],[2200,28,1474,30,"headers"],[2200,35,1474,37],[2201,14,1475,16,"redirectTo"],[2201,24,1475,26],[2201,26,1475,28,"options"],[2201,33,1475,35],[2201,34,1475,36,"redirectTo"],[2202,12,1476,12],[2202,13,1476,13],[2202,14,1476,14],[2203,10,1477,8],[2203,11,1477,9],[2203,12,1478,8],[2203,19,1478,15,"error"],[2203,24,1478,20],[2203,26,1478,22],[2204,12,1479,12],[2204,16,1479,16],[2204,17,1479,17],[2204,18,1479,18],[2204,20,1479,20,"errors_1"],[2204,28,1479,28],[2204,29,1479,29,"isAuthError"],[2204,40,1479,40],[2204,42,1479,42,"error"],[2204,47,1479,47],[2204,48,1479,48],[2204,50,1479,50],[2205,14,1480,16],[2205,21,1480,23],[2206,16,1480,25,"data"],[2206,20,1480,29],[2206,22,1480,31],[2206,26,1480,35],[2207,16,1480,37,"error"],[2208,14,1480,43],[2208,15,1480,44],[2209,12,1481,12],[2210,12,1482,12],[2210,18,1482,18,"error"],[2210,23,1482,23],[2211,10,1483,8],[2212,8,1484,4],[2212,9,1484,5],[2213,8,1484,5],[2213,17,1458,10,"resetPasswordForEmail"],[2213,38,1458,31,"resetPasswordForEmail"],[2213,39,1458,31,"_x38"],[2213,43,1458,31],[2214,10,1458,31],[2214,17,1458,31,"_resetPasswordForEmail"],[2214,39,1458,31],[2214,40,1458,31,"apply"],[2214,45,1458,31],[2214,52,1458,31,"arguments"],[2214,61,1458,31],[2215,8,1458,31],[2216,8,1458,31],[2216,15,1458,10,"resetPasswordForEmail"],[2216,36,1458,31],[2217,6,1458,31],[2218,6,1485,4],[2219,0,1486,0],[2220,0,1487,0],[2221,6,1485,4],[2222,4,1485,4],[2223,6,1485,4,"key"],[2223,9,1485,4],[2224,6,1485,4,"value"],[2224,11,1485,4],[2225,8,1485,4],[2225,12,1485,4,"_getUserIdentities"],[2225,30,1485,4],[2225,33,1485,4,"_asyncToGenerator"],[2225,50,1485,4],[2225,51,1488,4],[2225,64,1488,30],[2226,10,1489,8],[2226,14,1489,12,"_a"],[2226,16,1489,14],[2227,10,1490,8],[2227,14,1490,12],[2228,12,1491,12],[2228,16,1491,12,"_yield$this$getUser"],[2228,35,1491,12],[2228,44,1491,42],[2228,48,1491,46],[2228,49,1491,47,"getUser"],[2228,56,1491,54],[2228,57,1491,55],[2228,58,1491,56],[2229,14,1491,20,"data"],[2229,18,1491,24],[2229,21,1491,24,"_yield$this$getUser"],[2229,40,1491,24],[2229,41,1491,20,"data"],[2229,45,1491,24],[2230,14,1491,26,"error"],[2230,19,1491,31],[2230,22,1491,31,"_yield$this$getUser"],[2230,41,1491,31],[2230,42,1491,26,"error"],[2230,47,1491,31],[2231,12,1492,12],[2231,16,1492,16,"error"],[2231,21,1492,21],[2231,23,1493,16],[2231,29,1493,22,"error"],[2231,34,1493,27],[2232,12,1494,12],[2232,19,1494,19],[2233,14,1494,21,"data"],[2233,18,1494,25],[2233,20,1494,27],[2234,16,1494,29,"identities"],[2234,26,1494,39],[2234,28,1494,41],[2234,29,1494,42,"_a"],[2234,31,1494,44],[2234,34,1494,47,"data"],[2234,38,1494,51],[2234,39,1494,52,"user"],[2234,43,1494,56],[2234,44,1494,57,"identities"],[2234,54,1494,67],[2234,60,1494,73],[2234,64,1494,77],[2234,68,1494,81,"_a"],[2234,70,1494,83],[2234,75,1494,88],[2234,80,1494,93],[2234,81,1494,94],[2234,84,1494,97,"_a"],[2234,86,1494,99],[2234,89,1494,102],[2235,14,1494,105],[2235,15,1494,106],[2236,14,1494,108,"error"],[2236,19,1494,113],[2236,21,1494,115],[2237,12,1494,120],[2237,13,1494,121],[2238,10,1495,8],[2238,11,1495,9],[2238,12,1496,8],[2238,19,1496,15,"error"],[2238,24,1496,20],[2238,26,1496,22],[2239,12,1497,12],[2239,16,1497,16],[2239,17,1497,17],[2239,18,1497,18],[2239,20,1497,20,"errors_1"],[2239,28,1497,28],[2239,29,1497,29,"isAuthError"],[2239,40,1497,40],[2239,42,1497,42,"error"],[2239,47,1497,47],[2239,48,1497,48],[2239,50,1497,50],[2240,14,1498,16],[2240,21,1498,23],[2241,16,1498,25,"data"],[2241,20,1498,29],[2241,22,1498,31],[2241,26,1498,35],[2242,16,1498,37,"error"],[2243,14,1498,43],[2243,15,1498,44],[2244,12,1499,12],[2245,12,1500,12],[2245,18,1500,18,"error"],[2245,23,1500,23],[2246,10,1501,8],[2247,8,1502,4],[2247,9,1502,5],[2248,8,1502,5],[2248,17,1488,10,"getUserIdentities"],[2248,34,1488,27,"getUserIdentities"],[2248,35,1488,27],[2249,10,1488,27],[2249,17,1488,27,"_getUserIdentities"],[2249,35,1488,27],[2249,36,1488,27,"apply"],[2249,41,1488,27],[2249,48,1488,27,"arguments"],[2249,57,1488,27],[2250,8,1488,27],[2251,8,1488,27],[2251,15,1488,10,"getUserIdentities"],[2251,32,1488,27],[2252,6,1488,27],[2253,6,1503,4],[2254,0,1504,0],[2255,0,1505,0],[2256,0,1506,0],[2257,6,1503,4],[2258,4,1503,4],[2259,6,1503,4,"key"],[2259,9,1503,4],[2260,6,1503,4,"value"],[2260,11,1503,4],[2261,8,1503,4],[2261,12,1503,4,"_linkIdentity"],[2261,25,1503,4],[2261,28,1503,4,"_asyncToGenerator"],[2261,45,1503,4],[2261,46,1507,4],[2261,57,1507,23,"credentials"],[2261,68,1507,34],[2261,70,1507,36],[2262,10,1507,36],[2262,14,1507,36,"_this18"],[2262,21,1507,36],[2263,10,1508,8],[2263,14,1508,12,"_a"],[2263,16,1508,14],[2264,10,1509,8],[2264,14,1509,12],[2265,12,1510,12],[2265,16,1510,12,"_yield$this$_useSessi"],[2265,37,1510,12],[2265,46,1510,42],[2265,50,1510,46],[2265,51,1510,47,"_useSession"],[2265,62,1510,58],[2266,16,1510,58],[2266,20,1510,58,"_ref26"],[2266,26,1510,58],[2266,29,1510,58,"_asyncToGenerator"],[2266,46,1510,58],[2266,47,1510,59],[2266,58,1510,66,"result"],[2266,64,1510,72],[2266,66,1510,77],[2267,18,1511,16],[2267,22,1511,20,"_a"],[2267,24,1511,22],[2267,26,1511,24,"_b"],[2267,28,1511,26],[2267,30,1511,28,"_c"],[2267,32,1511,30],[2267,34,1511,32,"_d"],[2267,36,1511,34],[2267,38,1511,36,"_e"],[2267,40,1511,38],[2268,18,1512,16],[2268,22,1512,24,"data"],[2268,26,1512,28],[2268,29,1512,40,"result"],[2268,35,1512,46],[2268,36,1512,24,"data"],[2268,40,1512,28],[2269,20,1512,30,"error"],[2269,25,1512,35],[2269,28,1512,40,"result"],[2269,34,1512,46],[2269,35,1512,30,"error"],[2269,40,1512,35],[2270,18,1513,16],[2270,22,1513,20,"error"],[2270,27,1513,25],[2270,29,1514,20],[2270,35,1514,26,"error"],[2270,40,1514,31],[2271,18,1515,16],[2271,22,1515,22,"url"],[2271,25,1515,25],[2271,34,1515,34,"_this18"],[2271,41,1515,38],[2271,42,1515,39,"_getUrlForProvider"],[2271,60,1515,57],[2271,61,1515,58],[2271,64,1515,61,"_this18"],[2271,71,1515,65],[2271,72,1515,66,"url"],[2271,75,1515,69],[2271,103,1515,97],[2271,105,1515,99,"credentials"],[2271,116,1515,110],[2271,117,1515,111,"provider"],[2271,125,1515,119],[2271,127,1515,121],[2272,20,1516,20,"redirectTo"],[2272,30,1516,30],[2272,32,1516,32],[2272,33,1516,33,"_a"],[2272,35,1516,35],[2272,38,1516,38,"credentials"],[2272,49,1516,49],[2272,50,1516,50,"options"],[2272,57,1516,57],[2272,63,1516,63],[2272,67,1516,67],[2272,71,1516,71,"_a"],[2272,73,1516,73],[2272,78,1516,78],[2272,83,1516,83],[2272,84,1516,84],[2272,87,1516,87],[2272,92,1516,92],[2272,93,1516,93],[2272,96,1516,96,"_a"],[2272,98,1516,98],[2272,99,1516,99,"redirectTo"],[2272,109,1516,109],[2273,20,1517,20,"scopes"],[2273,26,1517,26],[2273,28,1517,28],[2273,29,1517,29,"_b"],[2273,31,1517,31],[2273,34,1517,34,"credentials"],[2273,45,1517,45],[2273,46,1517,46,"options"],[2273,53,1517,53],[2273,59,1517,59],[2273,63,1517,63],[2273,67,1517,67,"_b"],[2273,69,1517,69],[2273,74,1517,74],[2273,79,1517,79],[2273,80,1517,80],[2273,83,1517,83],[2273,88,1517,88],[2273,89,1517,89],[2273,92,1517,92,"_b"],[2273,94,1517,94],[2273,95,1517,95,"scopes"],[2273,101,1517,101],[2274,20,1518,20,"queryParams"],[2274,31,1518,31],[2274,33,1518,33],[2274,34,1518,34,"_c"],[2274,36,1518,36],[2274,39,1518,39,"credentials"],[2274,50,1518,50],[2274,51,1518,51,"options"],[2274,58,1518,58],[2274,64,1518,64],[2274,68,1518,68],[2274,72,1518,72,"_c"],[2274,74,1518,74],[2274,79,1518,79],[2274,84,1518,84],[2274,85,1518,85],[2274,88,1518,88],[2274,93,1518,93],[2274,94,1518,94],[2274,97,1518,97,"_c"],[2274,99,1518,99],[2274,100,1518,100,"queryParams"],[2274,111,1518,111],[2275,20,1519,20,"skipBrowserRedirect"],[2275,39,1519,39],[2275,41,1519,41],[2276,18,1520,16],[2276,19,1520,17],[2276,20,1520,18],[2277,18,1521,16],[2277,31,1521,29],[2277,32,1521,30],[2277,33,1521,31],[2277,35,1521,33,"fetch_1"],[2277,42,1521,40],[2277,43,1521,41,"_request"],[2277,51,1521,49],[2277,53,1521,51,"_this18"],[2277,60,1521,55],[2277,61,1521,56,"fetch"],[2277,66,1521,61],[2277,68,1521,63],[2277,73,1521,68],[2277,75,1521,70,"url"],[2277,78,1521,73],[2277,80,1521,75],[2278,20,1522,20,"headers"],[2278,27,1522,27],[2278,29,1522,29,"_this18"],[2278,36,1522,33],[2278,37,1522,34,"headers"],[2278,44,1522,41],[2279,20,1523,20,"jwt"],[2279,23,1523,23],[2279,25,1523,25],[2279,26,1523,26,"_e"],[2279,28,1523,28],[2279,31,1523,31],[2279,32,1523,32,"_d"],[2279,34,1523,34],[2279,37,1523,37,"data"],[2279,41,1523,41],[2279,42,1523,42,"session"],[2279,49,1523,49],[2279,55,1523,55],[2279,59,1523,59],[2279,63,1523,63,"_d"],[2279,65,1523,65],[2279,70,1523,70],[2279,75,1523,75],[2279,76,1523,76],[2279,79,1523,79],[2279,84,1523,84],[2279,85,1523,85],[2279,88,1523,88,"_d"],[2279,90,1523,90],[2279,91,1523,91,"access_token"],[2279,103,1523,103],[2279,109,1523,109],[2279,113,1523,113],[2279,117,1523,117,"_e"],[2279,119,1523,119],[2279,124,1523,124],[2279,129,1523,129],[2279,130,1523,130],[2279,133,1523,133,"_e"],[2279,135,1523,135],[2279,138,1523,138,"undefined"],[2280,18,1524,16],[2280,19,1524,17],[2280,20,1524,18],[2281,16,1525,12],[2281,17,1525,13],[2282,16,1525,13],[2282,33,1525,13,"_x40"],[2282,37,1525,13],[2283,18,1525,13],[2283,25,1525,13,"_ref26"],[2283,31,1525,13],[2283,32,1525,13,"apply"],[2283,37,1525,13],[2283,44,1525,13,"arguments"],[2283,53,1525,13],[2284,16,1525,13],[2285,14,1525,13],[2285,18,1525,14],[2286,14,1510,20,"data"],[2286,18,1510,24],[2286,21,1510,24,"_yield$this$_useSessi"],[2286,42,1510,24],[2286,43,1510,20,"data"],[2286,47,1510,24],[2287,14,1510,26,"error"],[2287,19,1510,31],[2287,22,1510,31,"_yield$this$_useSessi"],[2287,43,1510,31],[2287,44,1510,26,"error"],[2287,49,1510,31],[2288,12,1526,12],[2288,16,1526,16,"error"],[2288,21,1526,21],[2288,23,1527,16],[2288,29,1527,22,"error"],[2288,34,1527,27],[2289,12,1528,12],[2289,16,1528,16],[2289,17,1528,17],[2289,18,1528,18],[2289,20,1528,20,"helpers_1"],[2289,29,1528,29],[2289,30,1528,30,"isBrowser"],[2289,39,1528,39],[2289,41,1528,41],[2289,42,1528,42],[2289,46,1528,46],[2289,48,1528,48],[2289,49,1528,49,"_a"],[2289,51,1528,51],[2289,54,1528,54,"credentials"],[2289,65,1528,65],[2289,66,1528,66,"options"],[2289,73,1528,73],[2289,79,1528,79],[2289,83,1528,83],[2289,87,1528,87,"_a"],[2289,89,1528,89],[2289,94,1528,94],[2289,99,1528,99],[2289,100,1528,100],[2289,103,1528,103],[2289,108,1528,108],[2289,109,1528,109],[2289,112,1528,112,"_a"],[2289,114,1528,114],[2289,115,1528,115,"skipBrowserRedirect"],[2289,134,1528,134],[2289,135,1528,135],[2289,137,1528,137],[2290,14,1529,16,"window"],[2290,20,1529,22],[2290,21,1529,23,"location"],[2290,29,1529,31],[2290,30,1529,32,"assign"],[2290,36,1529,38],[2290,37,1529,39,"data"],[2290,41,1529,43],[2290,46,1529,48],[2290,50,1529,52],[2290,54,1529,56,"data"],[2290,58,1529,60],[2290,63,1529,65],[2290,68,1529,70],[2290,69,1529,71],[2290,72,1529,74],[2290,77,1529,79],[2290,78,1529,80],[2290,81,1529,83,"data"],[2290,85,1529,87],[2290,86,1529,88,"url"],[2290,89,1529,91],[2290,90,1529,92],[2291,12,1530,12],[2292,12,1531,12],[2292,19,1531,19],[2293,14,1531,21,"data"],[2293,18,1531,25],[2293,20,1531,27],[2294,16,1531,29,"provider"],[2294,24,1531,37],[2294,26,1531,39,"credentials"],[2294,37,1531,50],[2294,38,1531,51,"provider"],[2294,46,1531,59],[2295,16,1531,61,"url"],[2295,19,1531,64],[2295,21,1531,66,"data"],[2295,25,1531,70],[2295,30,1531,75],[2295,34,1531,79],[2295,38,1531,83,"data"],[2295,42,1531,87],[2295,47,1531,92],[2295,52,1531,97],[2295,53,1531,98],[2295,56,1531,101],[2295,61,1531,106],[2295,62,1531,107],[2295,65,1531,110,"data"],[2295,69,1531,114],[2295,70,1531,115,"url"],[2296,14,1531,119],[2296,15,1531,120],[2297,14,1531,122,"error"],[2297,19,1531,127],[2297,21,1531,129],[2298,12,1531,134],[2298,13,1531,135],[2299,10,1532,8],[2299,11,1532,9],[2299,12,1533,8],[2299,19,1533,15,"error"],[2299,24,1533,20],[2299,26,1533,22],[2300,12,1534,12],[2300,16,1534,16],[2300,17,1534,17],[2300,18,1534,18],[2300,20,1534,20,"errors_1"],[2300,28,1534,28],[2300,29,1534,29,"isAuthError"],[2300,40,1534,40],[2300,42,1534,42,"error"],[2300,47,1534,47],[2300,48,1534,48],[2300,50,1534,50],[2301,14,1535,16],[2301,21,1535,23],[2302,16,1535,25,"data"],[2302,20,1535,29],[2302,22,1535,31],[2303,18,1535,33,"provider"],[2303,26,1535,41],[2303,28,1535,43,"credentials"],[2303,39,1535,54],[2303,40,1535,55,"provider"],[2303,48,1535,63],[2304,18,1535,65,"url"],[2304,21,1535,68],[2304,23,1535,70],[2305,16,1535,75],[2305,17,1535,76],[2306,16,1535,78,"error"],[2307,14,1535,84],[2307,15,1535,85],[2308,12,1536,12],[2309,12,1537,12],[2309,18,1537,18,"error"],[2309,23,1537,23],[2310,10,1538,8],[2311,8,1539,4],[2311,9,1539,5],[2312,8,1539,5],[2312,17,1507,10,"linkIdentity"],[2312,29,1507,22,"linkIdentity"],[2312,30,1507,22,"_x39"],[2312,34,1507,22],[2313,10,1507,22],[2313,17,1507,22,"_linkIdentity"],[2313,30,1507,22],[2313,31,1507,22,"apply"],[2313,36,1507,22],[2313,43,1507,22,"arguments"],[2313,52,1507,22],[2314,8,1507,22],[2315,8,1507,22],[2315,15,1507,10,"linkIdentity"],[2315,27,1507,22],[2316,6,1507,22],[2317,6,1540,4],[2318,0,1541,0],[2319,0,1542,0],[2320,6,1540,4],[2321,4,1540,4],[2322,6,1540,4,"key"],[2322,9,1540,4],[2323,6,1540,4,"value"],[2323,11,1540,4],[2324,8,1540,4],[2324,12,1540,4,"_unlinkIdentity"],[2324,27,1540,4],[2324,30,1540,4,"_asyncToGenerator"],[2324,47,1540,4],[2324,48,1543,4],[2324,59,1543,25,"identity"],[2324,67,1543,33],[2324,69,1543,35],[2325,10,1543,35],[2325,14,1543,35,"_this19"],[2325,21,1543,35],[2326,10,1544,8],[2326,14,1544,12],[2327,12,1545,12],[2327,25,1545,25],[2327,29,1545,29],[2327,30,1545,30,"_useSession"],[2327,41,1545,41],[2328,14,1545,41],[2328,18,1545,41,"_ref27"],[2328,24,1545,41],[2328,27,1545,41,"_asyncToGenerator"],[2328,44,1545,41],[2328,45,1545,42],[2328,56,1545,49,"result"],[2328,62,1545,55],[2328,64,1545,60],[2329,16,1546,16],[2329,20,1546,20,"_a"],[2329,22,1546,22],[2329,24,1546,24,"_b"],[2329,26,1546,26],[2330,16,1547,16],[2330,20,1547,24,"data"],[2330,24,1547,28],[2330,27,1547,40,"result"],[2330,33,1547,46],[2330,34,1547,24,"data"],[2330,38,1547,28],[2331,18,1547,30,"error"],[2331,23,1547,35],[2331,26,1547,40,"result"],[2331,32,1547,46],[2331,33,1547,30,"error"],[2331,38,1547,35],[2332,16,1548,16],[2332,20,1548,20,"error"],[2332,25,1548,25],[2332,27,1548,27],[2333,18,1549,20],[2333,24,1549,26,"error"],[2333,29,1549,31],[2334,16,1550,16],[2335,16,1551,16],[2335,29,1551,29],[2335,30,1551,30],[2335,31,1551,31],[2335,33,1551,33,"fetch_1"],[2335,40,1551,40],[2335,41,1551,41,"_request"],[2335,49,1551,49],[2335,51,1551,51,"_this19"],[2335,58,1551,55],[2335,59,1551,56,"fetch"],[2335,64,1551,61],[2335,66,1551,63],[2335,74,1551,71],[2335,76,1551,73],[2335,79,1551,76,"_this19"],[2335,86,1551,80],[2335,87,1551,81,"url"],[2335,90,1551,84],[2335,110,1551,104,"identity"],[2335,118,1551,112],[2335,119,1551,113,"identity_id"],[2335,130,1551,124],[2335,132,1551,126],[2335,134,1551,128],[2336,18,1552,20,"headers"],[2336,25,1552,27],[2336,27,1552,29,"_this19"],[2336,34,1552,33],[2336,35,1552,34,"headers"],[2336,42,1552,41],[2337,18,1553,20,"jwt"],[2337,21,1553,23],[2337,23,1553,25],[2337,24,1553,26,"_b"],[2337,26,1553,28],[2337,29,1553,31],[2337,30,1553,32,"_a"],[2337,32,1553,34],[2337,35,1553,37,"data"],[2337,39,1553,41],[2337,40,1553,42,"session"],[2337,47,1553,49],[2337,53,1553,55],[2337,57,1553,59],[2337,61,1553,63,"_a"],[2337,63,1553,65],[2337,68,1553,70],[2337,73,1553,75],[2337,74,1553,76],[2337,77,1553,79],[2337,82,1553,84],[2337,83,1553,85],[2337,86,1553,88,"_a"],[2337,88,1553,90],[2337,89,1553,91,"access_token"],[2337,101,1553,103],[2337,107,1553,109],[2337,111,1553,113],[2337,115,1553,117,"_b"],[2337,117,1553,119],[2337,122,1553,124],[2337,127,1553,129],[2337,128,1553,130],[2337,131,1553,133,"_b"],[2337,133,1553,135],[2337,136,1553,138,"undefined"],[2338,16,1554,16],[2338,17,1554,17],[2338,18,1554,18],[2339,14,1555,12],[2339,15,1555,13],[2340,14,1555,13],[2340,31,1555,13,"_x42"],[2340,35,1555,13],[2341,16,1555,13],[2341,23,1555,13,"_ref27"],[2341,29,1555,13],[2341,30,1555,13,"apply"],[2341,35,1555,13],[2341,42,1555,13,"arguments"],[2341,51,1555,13],[2342,14,1555,13],[2343,12,1555,13],[2343,16,1555,14],[2344,10,1556,8],[2344,11,1556,9],[2344,12,1557,8],[2344,19,1557,15,"error"],[2344,24,1557,20],[2344,26,1557,22],[2345,12,1558,12],[2345,16,1558,16],[2345,17,1558,17],[2345,18,1558,18],[2345,20,1558,20,"errors_1"],[2345,28,1558,28],[2345,29,1558,29,"isAuthError"],[2345,40,1558,40],[2345,42,1558,42,"error"],[2345,47,1558,47],[2345,48,1558,48],[2345,50,1558,50],[2346,14,1559,16],[2346,21,1559,23],[2347,16,1559,25,"data"],[2347,20,1559,29],[2347,22,1559,31],[2347,26,1559,35],[2348,16,1559,37,"error"],[2349,14,1559,43],[2349,15,1559,44],[2350,12,1560,12],[2351,12,1561,12],[2351,18,1561,18,"error"],[2351,23,1561,23],[2352,10,1562,8],[2353,8,1563,4],[2353,9,1563,5],[2354,8,1563,5],[2354,17,1543,10,"unlinkIdentity"],[2354,31,1543,24,"unlinkIdentity"],[2354,32,1543,24,"_x41"],[2354,36,1543,24],[2355,10,1543,24],[2355,17,1543,24,"_unlinkIdentity"],[2355,32,1543,24],[2355,33,1543,24,"apply"],[2355,38,1543,24],[2355,45,1543,24,"arguments"],[2355,54,1543,24],[2356,8,1543,24],[2357,8,1543,24],[2357,15,1543,10,"unlinkIdentity"],[2357,29,1543,24],[2358,6,1543,24],[2359,6,1564,4],[2360,0,1565,0],[2361,0,1566,0],[2362,0,1567,0],[2363,6,1564,4],[2364,4,1564,4],[2365,6,1564,4,"key"],[2365,9,1564,4],[2366,6,1564,4,"value"],[2366,11,1564,4],[2367,8,1564,4],[2367,12,1564,4,"_refreshAccessToken2"],[2367,32,1564,4],[2367,35,1564,4,"_asyncToGenerator"],[2367,52,1564,4],[2367,53,1568,4],[2367,64,1568,30,"refreshToken"],[2367,76,1568,42],[2367,78,1568,44],[2368,10,1568,44],[2368,14,1568,44,"_this20"],[2368,21,1568,44],[2369,10,1569,8],[2369,14,1569,14,"debugName"],[2369,23,1569,23],[2369,26,1569,26],[2369,50,1569,50,"refreshToken"],[2369,62,1569,62],[2369,63,1569,63,"substring"],[2369,72,1569,72],[2369,73,1569,73],[2369,74,1569,74],[2369,76,1569,76],[2369,77,1569,77],[2369,78,1569,78],[2369,84,1569,84],[2370,10,1570,8],[2370,14,1570,12],[2370,15,1570,13,"_debug"],[2370,21,1570,19],[2370,22,1570,20,"debugName"],[2370,31,1570,29],[2370,33,1570,31],[2370,40,1570,38],[2370,41,1570,39],[2371,10,1571,8],[2371,14,1571,12],[2372,12,1572,12],[2372,16,1572,18,"startedAt"],[2372,25,1572,27],[2372,28,1572,30,"Date"],[2372,32,1572,34],[2372,33,1572,35,"now"],[2372,36,1572,38],[2372,37,1572,39],[2372,38,1572,40],[2373,12,1573,12],[2374,12,1574,12],[2374,25,1574,25],[2374,26,1574,26],[2374,27,1574,27],[2374,29,1574,29,"helpers_1"],[2374,38,1574,38],[2374,39,1574,39,"retryable"],[2374,48,1574,48],[2375,14,1574,48],[2375,18,1574,48,"_ref28"],[2375,24,1574,48],[2375,27,1574,48,"_asyncToGenerator"],[2375,44,1574,48],[2375,45,1574,50],[2375,56,1574,57,"attempt"],[2375,63,1574,64],[2375,65,1574,69],[2376,16,1575,16],[2376,20,1575,20,"attempt"],[2376,27,1575,27],[2376,30,1575,30],[2376,31,1575,31],[2376,33,1575,33],[2377,18,1576,20],[2377,24,1576,26],[2377,25,1576,27],[2377,26,1576,28],[2377,28,1576,30,"helpers_1"],[2377,37,1576,39],[2377,38,1576,40,"sleep"],[2377,43,1576,45],[2377,45,1576,47],[2377,48,1576,50],[2377,51,1576,53,"Math"],[2377,55,1576,57],[2377,56,1576,58,"pow"],[2377,59,1576,61],[2377,60,1576,62],[2377,61,1576,63],[2377,63,1576,65,"attempt"],[2377,70,1576,72],[2377,73,1576,75],[2377,74,1576,76],[2377,75,1576,77],[2377,76,1576,78],[2377,77,1576,79],[2377,78,1576,80],[2378,16,1577,16],[2379,16,1578,16,"_this20"],[2379,23,1578,20],[2379,24,1578,21,"_debug"],[2379,30,1578,27],[2379,31,1578,28,"debugName"],[2379,40,1578,37],[2379,42,1578,39],[2379,62,1578,59],[2379,64,1578,61,"attempt"],[2379,71,1578,68],[2379,72,1578,69],[2380,16,1579,16],[2380,29,1579,29],[2380,30,1579,30],[2380,31,1579,31],[2380,33,1579,33,"fetch_1"],[2380,40,1579,40],[2380,41,1579,41,"_request"],[2380,49,1579,49],[2380,51,1579,51,"_this20"],[2380,58,1579,55],[2380,59,1579,56,"fetch"],[2380,64,1579,61],[2380,66,1579,63],[2380,72,1579,69],[2380,74,1579,71],[2380,77,1579,74,"_this20"],[2380,84,1579,78],[2380,85,1579,79,"url"],[2380,88,1579,82],[2380,121,1579,115],[2380,123,1579,117],[2381,18,1580,20,"body"],[2381,22,1580,24],[2381,24,1580,26],[2382,20,1580,28,"refresh_token"],[2382,33,1580,41],[2382,35,1580,43,"refreshToken"],[2383,18,1580,56],[2383,19,1580,57],[2384,18,1581,20,"headers"],[2384,25,1581,27],[2384,27,1581,29,"_this20"],[2384,34,1581,33],[2384,35,1581,34,"headers"],[2384,42,1581,41],[2385,18,1582,20,"xform"],[2385,23,1582,25],[2385,25,1582,27,"fetch_1"],[2385,32,1582,34],[2385,33,1582,35,"_sessionResponse"],[2386,16,1583,16],[2386,17,1583,17],[2386,18,1583,18],[2387,14,1584,12],[2387,15,1584,13],[2388,14,1584,13],[2388,31,1584,13,"_x44"],[2388,35,1584,13],[2389,16,1584,13],[2389,23,1584,13,"_ref28"],[2389,29,1584,13],[2389,30,1584,13,"apply"],[2389,35,1584,13],[2389,42,1584,13,"arguments"],[2389,51,1584,13],[2390,14,1584,13],[2391,12,1584,13],[2391,17,1584,15],[2391,18,1584,16,"attempt"],[2391,25,1584,23],[2391,27,1584,25,"error"],[2391,32,1584,30],[2391,37,1584,35],[2392,14,1585,16],[2392,18,1585,22,"nextBackOffInterval"],[2392,37,1585,41],[2392,40,1585,44],[2392,43,1585,47],[2392,46,1585,50,"Math"],[2392,50,1585,54],[2392,51,1585,55,"pow"],[2392,54,1585,58],[2392,55,1585,59],[2392,56,1585,60],[2392,58,1585,62,"attempt"],[2392,65,1585,69],[2392,66,1585,70],[2393,14,1586,16],[2393,21,1586,24,"error"],[2393,26,1586,29],[2393,30,1587,20],[2393,31,1587,21],[2393,32,1587,22],[2393,34,1587,24,"errors_1"],[2393,42,1587,32],[2393,43,1587,33,"isAuthRetryableFetchError"],[2393,68,1587,58],[2393,70,1587,60,"error"],[2393,75,1587,65],[2393,76,1587,66],[2394,14,1588,20],[2395,14,1589,20,"Date"],[2395,18,1589,24],[2395,19,1589,25,"now"],[2395,22,1589,28],[2395,23,1589,29],[2395,24,1589,30],[2395,27,1589,33,"nextBackOffInterval"],[2395,46,1589,52],[2395,49,1589,55,"startedAt"],[2395,58,1589,64],[2395,61,1589,67,"constants_1"],[2395,72,1589,78],[2395,73,1589,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2395,102,1589,108],[2396,12,1590,12],[2396,13,1590,13],[2396,14,1590,14],[2397,10,1591,8],[2397,11,1591,9],[2397,12,1592,8],[2397,19,1592,15,"error"],[2397,24,1592,20],[2397,26,1592,22],[2398,12,1593,12],[2398,16,1593,16],[2398,17,1593,17,"_debug"],[2398,23,1593,23],[2398,24,1593,24,"debugName"],[2398,33,1593,33],[2398,35,1593,35],[2398,42,1593,42],[2398,44,1593,44,"error"],[2398,49,1593,49],[2398,50,1593,50],[2399,12,1594,12],[2399,16,1594,16],[2399,17,1594,17],[2399,18,1594,18],[2399,20,1594,20,"errors_1"],[2399,28,1594,28],[2399,29,1594,29,"isAuthError"],[2399,40,1594,40],[2399,42,1594,42,"error"],[2399,47,1594,47],[2399,48,1594,48],[2399,50,1594,50],[2400,14,1595,16],[2400,21,1595,23],[2401,16,1595,25,"data"],[2401,20,1595,29],[2401,22,1595,31],[2402,18,1595,33,"session"],[2402,25,1595,40],[2402,27,1595,42],[2402,31,1595,46],[2403,18,1595,48,"user"],[2403,22,1595,52],[2403,24,1595,54],[2404,16,1595,59],[2404,17,1595,60],[2405,16,1595,62,"error"],[2406,14,1595,68],[2406,15,1595,69],[2407,12,1596,12],[2408,12,1597,12],[2408,18,1597,18,"error"],[2408,23,1597,23],[2409,10,1598,8],[2409,11,1598,9],[2409,20,1599,16],[2410,12,1600,12],[2410,16,1600,16],[2410,17,1600,17,"_debug"],[2410,23,1600,23],[2410,24,1600,24,"debugName"],[2410,33,1600,33],[2410,35,1600,35],[2410,40,1600,40],[2410,41,1600,41],[2411,10,1601,8],[2412,8,1602,4],[2412,9,1602,5],[2413,8,1602,5],[2413,17,1568,10,"_refreshAccessToken"],[2413,36,1568,29,"_refreshAccessToken"],[2413,37,1568,29,"_x43"],[2413,41,1568,29],[2414,10,1568,29],[2414,17,1568,29,"_refreshAccessToken2"],[2414,37,1568,29],[2414,38,1568,29,"apply"],[2414,43,1568,29],[2414,50,1568,29,"arguments"],[2414,59,1568,29],[2415,8,1568,29],[2416,8,1568,29],[2416,15,1568,10,"_refreshAccessToken"],[2416,34,1568,29],[2417,6,1568,29],[2418,4,1568,29],[2419,6,1568,29,"key"],[2419,9,1568,29],[2420,6,1568,29,"value"],[2420,11,1568,29],[2420,13,1603,4],[2420,22,1603,4,"_isValidSession"],[2420,37,1603,19,"_isValidSession"],[2420,38,1603,20,"maybeSession"],[2420,50,1603,32],[2420,52,1603,34],[2421,8,1604,8],[2421,12,1604,14,"isValidSession"],[2421,26,1604,28],[2421,29,1604,31],[2421,36,1604,38,"maybeSession"],[2421,48,1604,50],[2421,53,1604,55],[2421,61,1604,63],[2421,65,1605,12,"maybeSession"],[2421,77,1605,24],[2421,82,1605,29],[2421,86,1605,33],[2421,90,1606,12],[2421,104,1606,26],[2421,108,1606,30,"maybeSession"],[2421,120,1606,42],[2421,124,1607,12],[2421,139,1607,27],[2421,143,1607,31,"maybeSession"],[2421,155,1607,43],[2421,159,1608,12],[2421,171,1608,24],[2421,175,1608,28,"maybeSession"],[2421,187,1608,40],[2422,8,1609,8],[2422,15,1609,15,"isValidSession"],[2422,29,1609,29],[2423,6,1610,4],[2424,4,1610,5],[2425,6,1610,5,"key"],[2425,9,1610,5],[2426,6,1610,5,"value"],[2426,11,1610,5],[2427,8,1610,5],[2427,12,1610,5,"_handleProviderSignIn2"],[2427,34,1610,5],[2427,37,1610,5,"_asyncToGenerator"],[2427,54,1610,5],[2427,55,1611,4],[2427,66,1611,32,"provider"],[2427,74,1611,40],[2427,76,1611,42,"options"],[2427,83,1611,49],[2427,85,1611,51],[2428,10,1612,8],[2428,14,1612,14,"url"],[2428,17,1612,17],[2428,26,1612,26],[2428,30,1612,30],[2428,31,1612,31,"_getUrlForProvider"],[2428,49,1612,49],[2428,50,1612,50],[2428,53,1612,53],[2428,57,1612,57],[2428,58,1612,58,"url"],[2428,61,1612,61],[2428,73,1612,73],[2428,75,1612,75,"provider"],[2428,83,1612,83],[2428,85,1612,85],[2429,12,1613,12,"redirectTo"],[2429,22,1613,22],[2429,24,1613,24,"options"],[2429,31,1613,31],[2429,32,1613,32,"redirectTo"],[2429,42,1613,42],[2430,12,1614,12,"scopes"],[2430,18,1614,18],[2430,20,1614,20,"options"],[2430,27,1614,27],[2430,28,1614,28,"scopes"],[2430,34,1614,34],[2431,12,1615,12,"queryParams"],[2431,23,1615,23],[2431,25,1615,25,"options"],[2431,32,1615,32],[2431,33,1615,33,"queryParams"],[2432,10,1616,8],[2432,11,1616,9],[2432,12,1616,10],[2433,10,1617,8],[2433,14,1617,12],[2433,15,1617,13,"_debug"],[2433,21,1617,19],[2433,22,1617,20],[2433,48,1617,46],[2433,50,1617,48],[2433,60,1617,58],[2433,62,1617,60,"provider"],[2433,70,1617,68],[2433,72,1617,70],[2433,81,1617,79],[2433,83,1617,81,"options"],[2433,90,1617,88],[2433,92,1617,90],[2433,97,1617,95],[2433,99,1617,97,"url"],[2433,102,1617,100],[2433,103,1617,101],[2434,10,1618,8],[2435,10,1619,8],[2435,14,1619,12],[2435,15,1619,13],[2435,16,1619,14],[2435,18,1619,16,"helpers_1"],[2435,27,1619,25],[2435,28,1619,26,"isBrowser"],[2435,37,1619,35],[2435,39,1619,37],[2435,40,1619,38],[2435,44,1619,42],[2435,45,1619,43,"options"],[2435,52,1619,50],[2435,53,1619,51,"skipBrowserRedirect"],[2435,72,1619,70],[2435,74,1619,72],[2436,12,1620,12,"window"],[2436,18,1620,18],[2436,19,1620,19,"location"],[2436,27,1620,27],[2436,28,1620,28,"assign"],[2436,34,1620,34],[2436,35,1620,35,"url"],[2436,38,1620,38],[2436,39,1620,39],[2437,10,1621,8],[2438,10,1622,8],[2438,17,1622,15],[2439,12,1622,17,"data"],[2439,16,1622,21],[2439,18,1622,23],[2440,14,1622,25,"provider"],[2440,22,1622,33],[2441,14,1622,35,"url"],[2442,12,1622,39],[2442,13,1622,40],[2443,12,1622,42,"error"],[2443,17,1622,47],[2443,19,1622,49],[2444,10,1622,54],[2444,11,1622,55],[2445,8,1623,4],[2445,9,1623,5],[2446,8,1623,5],[2446,17,1611,10,"_handleProviderSignIn"],[2446,38,1611,31,"_handleProviderSignIn"],[2446,39,1611,31,"_x45"],[2446,43,1611,31],[2446,45,1611,31,"_x46"],[2446,49,1611,31],[2447,10,1611,31],[2447,17,1611,31,"_handleProviderSignIn2"],[2447,39,1611,31],[2447,40,1611,31,"apply"],[2447,45,1611,31],[2447,52,1611,31,"arguments"],[2447,61,1611,31],[2448,8,1611,31],[2449,8,1611,31],[2449,15,1611,10,"_handleProviderSignIn"],[2449,36,1611,31],[2450,6,1611,31],[2451,6,1624,4],[2452,0,1625,0],[2453,0,1626,0],[2454,0,1627,0],[2455,4,1624,4],[2456,6,1624,4,"key"],[2456,9,1624,4],[2457,6,1624,4,"value"],[2457,11,1624,4],[2458,8,1624,4],[2458,12,1624,4,"_recoverAndRefresh2"],[2458,31,1624,4],[2458,34,1624,4,"_asyncToGenerator"],[2458,51,1624,4],[2458,52,1628,4],[2458,65,1628,31],[2459,10,1629,8],[2459,14,1629,12,"_a"],[2459,16,1629,14],[2459,18,1629,16,"_b"],[2459,20,1629,18],[2460,10,1630,8],[2460,14,1630,14,"debugName"],[2460,23,1630,23],[2460,26,1630,26],[2460,49,1630,49],[2461,10,1631,8],[2461,14,1631,12],[2461,15,1631,13,"_debug"],[2461,21,1631,19],[2461,22,1631,20,"debugName"],[2461,31,1631,29],[2461,33,1631,31],[2461,40,1631,38],[2461,41,1631,39],[2462,10,1632,8],[2462,14,1632,12],[2463,12,1633,12],[2463,16,1633,18,"currentSession"],[2463,30,1633,32],[2463,39,1633,42],[2463,40,1633,43],[2463,41,1633,44],[2463,43,1633,46,"helpers_1"],[2463,52,1633,55],[2463,53,1633,56,"getItemAsync"],[2463,65,1633,68],[2463,67,1633,70],[2463,71,1633,74],[2463,72,1633,75,"storage"],[2463,79,1633,82],[2463,81,1633,84],[2463,85,1633,88],[2463,86,1633,89,"storageKey"],[2463,96,1633,99],[2463,97,1633,101],[2464,12,1634,12],[2464,16,1634,16,"currentSession"],[2464,30,1634,30],[2464,34,1634,34],[2464,38,1634,38],[2464,39,1634,39,"userStorage"],[2464,50,1634,50],[2464,52,1634,52],[2465,14,1635,16],[2465,18,1635,20,"maybeUser"],[2465,27,1635,29],[2465,36,1635,39],[2465,37,1635,40],[2465,38,1635,41],[2465,40,1635,43,"helpers_1"],[2465,49,1635,52],[2465,50,1635,53,"getItemAsync"],[2465,62,1635,65],[2465,64,1635,67],[2465,68,1635,71],[2465,69,1635,72,"userStorage"],[2465,80,1635,83],[2465,82,1635,85],[2465,86,1635,89],[2465,87,1635,90,"storageKey"],[2465,97,1635,100],[2465,100,1635,103],[2465,107,1635,110],[2465,108,1635,112],[2466,14,1636,16],[2466,18,1636,20],[2466,19,1636,21],[2466,23,1636,25],[2466,24,1636,26,"storage"],[2466,31,1636,33],[2466,32,1636,34,"isServer"],[2466,40,1636,42],[2466,44,1636,46,"Object"],[2466,50,1636,52],[2466,51,1636,53,"is"],[2466,53,1636,55],[2466,54,1636,56],[2466,58,1636,60],[2466,59,1636,61,"storage"],[2466,66,1636,68],[2466,68,1636,70],[2466,72,1636,74],[2466,73,1636,75,"userStorage"],[2466,84,1636,86],[2466,85,1636,87],[2466,89,1636,91],[2466,90,1636,92,"maybeUser"],[2466,99,1636,101],[2466,101,1636,103],[2467,16,1637,20],[2468,16,1638,20],[2469,16,1639,20],[2470,16,1640,20],[2471,16,1641,20,"maybeUser"],[2471,25,1641,29],[2471,28,1641,32],[2472,18,1641,34,"user"],[2472,22,1641,38],[2472,24,1641,40,"currentSession"],[2472,38,1641,54],[2472,39,1641,55,"user"],[2473,16,1641,60],[2473,17,1641,61],[2474,16,1642,20],[2474,22,1642,26],[2474,23,1642,27],[2474,24,1642,28],[2474,26,1642,30,"helpers_1"],[2474,35,1642,39],[2474,36,1642,40,"setItemAsync"],[2474,48,1642,52],[2474,50,1642,54],[2474,54,1642,58],[2474,55,1642,59,"userStorage"],[2474,66,1642,70],[2474,68,1642,72],[2474,72,1642,76],[2474,73,1642,77,"storageKey"],[2474,83,1642,87],[2474,86,1642,90],[2474,93,1642,97],[2474,95,1642,99,"maybeUser"],[2474,104,1642,108],[2474,105,1642,109],[2475,14,1643,16],[2476,14,1644,16,"currentSession"],[2476,28,1644,30],[2476,29,1644,31,"user"],[2476,33,1644,35],[2476,36,1644,38],[2476,37,1644,39,"_a"],[2476,39,1644,41],[2476,42,1644,44,"maybeUser"],[2476,51,1644,53],[2476,56,1644,58],[2476,60,1644,62],[2476,64,1644,66,"maybeUser"],[2476,73,1644,75],[2476,78,1644,80],[2476,83,1644,85],[2476,84,1644,86],[2476,87,1644,89],[2476,92,1644,94],[2476,93,1644,95],[2476,96,1644,98,"maybeUser"],[2476,105,1644,107],[2476,106,1644,108,"user"],[2476,110,1644,112],[2476,116,1644,118],[2476,120,1644,122],[2476,124,1644,126,"_a"],[2476,126,1644,128],[2476,131,1644,133],[2476,136,1644,138],[2476,137,1644,139],[2476,140,1644,142,"_a"],[2476,142,1644,144],[2476,145,1644,147],[2476,146,1644,148],[2476,147,1644,149],[2476,149,1644,151,"helpers_1"],[2476,158,1644,160],[2476,159,1644,161,"userNotAvailableProxy"],[2476,180,1644,182],[2476,182,1644,184],[2476,183,1644,185],[2477,12,1645,12],[2477,13,1645,13],[2477,19,1646,17],[2477,23,1646,21,"currentSession"],[2477,37,1646,35],[2477,41,1646,39],[2477,42,1646,40,"currentSession"],[2477,56,1646,54],[2477,57,1646,55,"user"],[2477,61,1646,59],[2477,63,1646,61],[2478,14,1647,16],[2479,14,1648,16],[2480,14,1649,16],[2480,18,1649,20],[2480,19,1649,21,"currentSession"],[2480,33,1649,35],[2480,34,1649,36,"user"],[2480,38,1649,40],[2480,40,1649,42],[2481,16,1650,20],[2482,16,1651,20],[2482,20,1651,26,"separateUser"],[2482,32,1651,38],[2482,41,1651,48],[2482,42,1651,49],[2482,43,1651,50],[2482,45,1651,52,"helpers_1"],[2482,54,1651,61],[2482,55,1651,62,"getItemAsync"],[2482,67,1651,74],[2482,69,1651,76],[2482,73,1651,80],[2482,74,1651,81,"storage"],[2482,81,1651,88],[2482,83,1651,90],[2482,87,1651,94],[2482,88,1651,95,"storageKey"],[2482,98,1651,105],[2482,101,1651,108],[2482,108,1651,115],[2482,109,1651,117],[2483,16,1652,20],[2483,20,1652,24,"separateUser"],[2483,32,1652,36],[2483,37,1652,41,"separateUser"],[2483,49,1652,53],[2483,54,1652,58],[2483,58,1652,62],[2483,62,1652,66,"separateUser"],[2483,74,1652,78],[2483,79,1652,83],[2483,84,1652,88],[2483,85,1652,89],[2483,88,1652,92],[2483,93,1652,97],[2483,94,1652,98],[2483,97,1652,101,"separateUser"],[2483,109,1652,113],[2483,110,1652,114,"user"],[2483,114,1652,118],[2483,115,1652,119],[2483,117,1652,121],[2484,18,1653,24,"currentSession"],[2484,32,1653,38],[2484,33,1653,39,"user"],[2484,37,1653,43],[2484,40,1653,46,"separateUser"],[2484,52,1653,58],[2484,53,1653,59,"user"],[2484,57,1653,63],[2485,18,1654,24],[2485,24,1654,30],[2485,25,1654,31],[2485,26,1654,32],[2485,28,1654,34,"helpers_1"],[2485,37,1654,43],[2485,38,1654,44,"removeItemAsync"],[2485,53,1654,59],[2485,55,1654,61],[2485,59,1654,65],[2485,60,1654,66,"storage"],[2485,67,1654,73],[2485,69,1654,75],[2485,73,1654,79],[2485,74,1654,80,"storageKey"],[2485,84,1654,90],[2485,87,1654,93],[2485,94,1654,100],[2485,95,1654,101],[2486,18,1655,24],[2486,24,1655,30],[2486,25,1655,31],[2486,26,1655,32],[2486,28,1655,34,"helpers_1"],[2486,37,1655,43],[2486,38,1655,44,"setItemAsync"],[2486,50,1655,56],[2486,52,1655,58],[2486,56,1655,62],[2486,57,1655,63,"storage"],[2486,64,1655,70],[2486,66,1655,72],[2486,70,1655,76],[2486,71,1655,77,"storageKey"],[2486,81,1655,87],[2486,83,1655,89,"currentSession"],[2486,97,1655,103],[2486,98,1655,104],[2487,16,1656,20],[2487,17,1656,21],[2487,23,1657,25],[2488,18,1658,24,"currentSession"],[2488,32,1658,38],[2488,33,1658,39,"user"],[2488,37,1658,43],[2488,40,1658,46],[2488,41,1658,47],[2488,42,1658,48],[2488,44,1658,50,"helpers_1"],[2488,53,1658,59],[2488,54,1658,60,"userNotAvailableProxy"],[2488,75,1658,81],[2488,77,1658,83],[2488,78,1658,84],[2489,16,1659,20],[2490,14,1660,16],[2491,12,1661,12],[2492,12,1662,12],[2492,16,1662,16],[2492,17,1662,17,"_debug"],[2492,23,1662,23],[2492,24,1662,24,"debugName"],[2492,33,1662,33],[2492,35,1662,35],[2492,57,1662,57],[2492,59,1662,59,"currentSession"],[2492,73,1662,73],[2492,74,1662,74],[2493,12,1663,12],[2493,16,1663,16],[2493,17,1663,17],[2493,21,1663,21],[2493,22,1663,22,"_isValidSession"],[2493,37,1663,37],[2493,38,1663,38,"currentSession"],[2493,52,1663,52],[2493,53,1663,53],[2493,55,1663,55],[2494,14,1664,16],[2494,18,1664,20],[2494,19,1664,21,"_debug"],[2494,25,1664,27],[2494,26,1664,28,"debugName"],[2494,35,1664,37],[2494,37,1664,39],[2494,59,1664,61],[2494,60,1664,62],[2495,14,1665,16],[2495,18,1665,20,"currentSession"],[2495,32,1665,34],[2495,37,1665,39],[2495,41,1665,43],[2495,43,1665,45],[2496,16,1666,20],[2496,22,1666,26],[2496,26,1666,30],[2496,27,1666,31,"_removeSession"],[2496,41,1666,45],[2496,42,1666,46],[2496,43,1666,47],[2497,14,1667,16],[2498,14,1668,16],[2499,12,1669,12],[2500,12,1670,12],[2500,16,1670,18,"expiresWithMargin"],[2500,33,1670,35],[2500,36,1670,38],[2500,37,1670,39],[2500,38,1670,40,"_b"],[2500,40,1670,42],[2500,43,1670,45,"currentSession"],[2500,57,1670,59],[2500,58,1670,60,"expires_at"],[2500,68,1670,70],[2500,74,1670,76],[2500,78,1670,80],[2500,82,1670,84,"_b"],[2500,84,1670,86],[2500,89,1670,91],[2500,94,1670,96],[2500,95,1670,97],[2500,98,1670,100,"_b"],[2500,100,1670,102],[2500,103,1670,105,"Infinity"],[2500,111,1670,113],[2500,115,1670,117],[2500,119,1670,121],[2500,122,1670,124,"Date"],[2500,126,1670,128],[2500,127,1670,129,"now"],[2500,130,1670,132],[2500,131,1670,133],[2500,132,1670,134],[2500,135,1670,137,"constants_1"],[2500,146,1670,148],[2500,147,1670,149,"EXPIRY_MARGIN_MS"],[2500,163,1670,165],[2501,12,1671,12],[2501,16,1671,16],[2501,17,1671,17,"_debug"],[2501,23,1671,23],[2501,24,1671,24,"debugName"],[2501,33,1671,33],[2501,35,1671,35],[2501,49,1671,49,"expiresWithMargin"],[2501,66,1671,66],[2501,69,1671,69],[2501,71,1671,71],[2501,74,1671,74],[2501,80,1671,80],[2501,107,1671,107,"constants_1"],[2501,118,1671,118],[2501,119,1671,119,"EXPIRY_MARGIN_MS"],[2501,135,1671,135],[2501,138,1671,138],[2501,139,1671,139],[2502,12,1672,12],[2502,16,1672,16,"expiresWithMargin"],[2502,33,1672,33],[2502,35,1672,35],[2503,14,1673,16],[2503,18,1673,20],[2503,22,1673,24],[2503,23,1673,25,"autoRefreshToken"],[2503,39,1673,41],[2503,43,1673,45,"currentSession"],[2503,57,1673,59],[2503,58,1673,60,"refresh_token"],[2503,71,1673,73],[2503,73,1673,75],[2504,16,1674,20],[2504,20,1674,20,"_yield$this$_callRefr3"],[2504,42,1674,20],[2504,51,1674,44],[2504,55,1674,48],[2504,56,1674,49,"_callRefreshToken"],[2504,73,1674,66],[2504,74,1674,67,"currentSession"],[2504,88,1674,81],[2504,89,1674,82,"refresh_token"],[2504,102,1674,95],[2504,103,1674,96],[2505,18,1674,28,"error"],[2505,23,1674,33],[2505,26,1674,33,"_yield$this$_callRefr3"],[2505,48,1674,33],[2505,49,1674,28,"error"],[2505,54,1674,33],[2506,16,1675,20],[2506,20,1675,24,"error"],[2506,25,1675,29],[2506,27,1675,31],[2507,18,1676,24,"console"],[2507,25,1676,31],[2507,26,1676,32,"error"],[2507,31,1676,37],[2507,32,1676,38,"error"],[2507,37,1676,43],[2507,38,1676,44],[2508,18,1677,24],[2508,22,1677,28],[2508,23,1677,29],[2508,24,1677,30],[2508,25,1677,31],[2508,27,1677,33,"errors_1"],[2508,35,1677,41],[2508,36,1677,42,"isAuthRetryableFetchError"],[2508,61,1677,67],[2508,63,1677,69,"error"],[2508,68,1677,74],[2508,69,1677,75],[2508,71,1677,77],[2509,20,1678,28],[2509,24,1678,32],[2509,25,1678,33,"_debug"],[2509,31,1678,39],[2509,32,1678,40,"debugName"],[2509,41,1678,49],[2509,43,1678,51],[2509,108,1678,116],[2509,110,1678,118,"error"],[2509,115,1678,123],[2509,116,1678,124],[2510,20,1679,28],[2510,26,1679,34],[2510,30,1679,38],[2510,31,1679,39,"_removeSession"],[2510,45,1679,53],[2510,46,1679,54],[2510,47,1679,55],[2511,18,1680,24],[2512,16,1681,20],[2513,14,1682,16],[2514,12,1683,12],[2514,13,1683,13],[2514,19,1684,17],[2514,23,1684,21,"currentSession"],[2514,37,1684,35],[2514,38,1684,36,"user"],[2514,42,1684,40],[2514,46,1685,16,"currentSession"],[2514,60,1685,30],[2514,61,1685,31,"user"],[2514,65,1685,35],[2514,66,1685,36,"__isUserNotAvailableProxy"],[2514,91,1685,61],[2514,96,1685,66],[2514,100,1685,70],[2514,102,1685,72],[2515,14,1686,16],[2516,14,1687,16],[2516,18,1687,20],[2517,16,1688,20],[2517,20,1688,20,"_yield$this$_getUser3"],[2517,41,1688,20],[2517,50,1688,61],[2517,54,1688,65],[2517,55,1688,66,"_getUser"],[2517,63,1688,74],[2517,64,1688,75,"currentSession"],[2517,78,1688,89],[2517,79,1688,90,"access_token"],[2517,91,1688,102],[2517,92,1688,103],[2518,18,1688,28,"data"],[2518,22,1688,32],[2518,25,1688,32,"_yield$this$_getUser3"],[2518,46,1688,32],[2518,47,1688,28,"data"],[2518,51,1688,32],[2519,18,1688,41,"userError"],[2519,27,1688,50],[2519,30,1688,50,"_yield$this$_getUser3"],[2519,51,1688,50],[2519,52,1688,34,"error"],[2519,57,1688,39],[2520,16,1689,20],[2520,20,1689,24],[2520,21,1689,25,"userError"],[2520,30,1689,34],[2520,35,1689,39,"data"],[2520,39,1689,43],[2520,44,1689,48],[2520,48,1689,52],[2520,52,1689,56,"data"],[2520,56,1689,60],[2520,61,1689,65],[2520,66,1689,70],[2520,67,1689,71],[2520,70,1689,74],[2520,75,1689,79],[2520,76,1689,80],[2520,79,1689,83,"data"],[2520,83,1689,87],[2520,84,1689,88,"user"],[2520,88,1689,92],[2520,89,1689,93],[2520,91,1689,95],[2521,18,1690,24,"currentSession"],[2521,32,1690,38],[2521,33,1690,39,"user"],[2521,37,1690,43],[2521,40,1690,46,"data"],[2521,44,1690,50],[2521,45,1690,51,"user"],[2521,49,1690,55],[2522,18,1691,24],[2522,24,1691,30],[2522,28,1691,34],[2522,29,1691,35,"_saveSession"],[2522,41,1691,47],[2522,42,1691,48,"currentSession"],[2522,56,1691,62],[2522,57,1691,63],[2523,18,1692,24],[2523,24,1692,30],[2523,28,1692,34],[2523,29,1692,35,"_notifyAllSubscribers"],[2523,50,1692,56],[2523,51,1692,57],[2523,62,1692,68],[2523,64,1692,70,"currentSession"],[2523,78,1692,84],[2523,79,1692,85],[2524,16,1693,20],[2524,17,1693,21],[2524,23,1694,25],[2525,18,1695,24],[2525,22,1695,28],[2525,23,1695,29,"_debug"],[2525,29,1695,35],[2525,30,1695,36,"debugName"],[2525,39,1695,45],[2525,41,1695,47],[2525,99,1695,105],[2525,100,1695,106],[2526,16,1696,20],[2527,14,1697,16],[2527,15,1697,17],[2527,16,1698,16],[2527,23,1698,23,"getUserError"],[2527,35,1698,35],[2527,37,1698,37],[2528,16,1699,20,"console"],[2528,23,1699,27],[2528,24,1699,28,"error"],[2528,29,1699,33],[2528,30,1699,34],[2528,56,1699,60],[2528,58,1699,62,"getUserError"],[2528,70,1699,74],[2528,71,1699,75],[2529,16,1700,20],[2529,20,1700,24],[2529,21,1700,25,"_debug"],[2529,27,1700,31],[2529,28,1700,32,"debugName"],[2529,37,1700,41],[2529,39,1700,43],[2529,97,1700,101],[2529,99,1700,103,"getUserError"],[2529,111,1700,115],[2529,112,1700,116],[2530,14,1701,16],[2531,12,1702,12],[2531,13,1702,13],[2531,19,1703,17],[2532,14,1704,16],[2533,14,1705,16],[2534,14,1706,16],[2535,14,1707,16],[2535,20,1707,22],[2535,24,1707,26],[2535,25,1707,27,"_notifyAllSubscribers"],[2535,46,1707,48],[2535,47,1707,49],[2535,58,1707,60],[2535,60,1707,62,"currentSession"],[2535,74,1707,76],[2535,75,1707,77],[2536,12,1708,12],[2537,10,1709,8],[2537,11,1709,9],[2537,12,1710,8],[2537,19,1710,15,"err"],[2537,22,1710,18],[2537,24,1710,20],[2538,12,1711,12],[2538,16,1711,16],[2538,17,1711,17,"_debug"],[2538,23,1711,23],[2538,24,1711,24,"debugName"],[2538,33,1711,33],[2538,35,1711,35],[2538,42,1711,42],[2538,44,1711,44,"err"],[2538,47,1711,47],[2538,48,1711,48],[2539,12,1712,12,"console"],[2539,19,1712,19],[2539,20,1712,20,"error"],[2539,25,1712,25],[2539,26,1712,26,"err"],[2539,29,1712,29],[2539,30,1712,30],[2540,12,1713,12],[2541,10,1714,8],[2541,11,1714,9],[2541,20,1715,16],[2542,12,1716,12],[2542,16,1716,16],[2542,17,1716,17,"_debug"],[2542,23,1716,23],[2542,24,1716,24,"debugName"],[2542,33,1716,33],[2542,35,1716,35],[2542,40,1716,40],[2542,41,1716,41],[2543,10,1717,8],[2544,8,1718,4],[2544,9,1718,5],[2545,8,1718,5],[2545,17,1628,10,"_recoverAndRefresh"],[2545,35,1628,28,"_recoverAndRefresh"],[2545,36,1628,28],[2546,10,1628,28],[2546,17,1628,28,"_recoverAndRefresh2"],[2546,36,1628,28],[2546,37,1628,28,"apply"],[2546,42,1628,28],[2546,49,1628,28,"arguments"],[2546,58,1628,28],[2547,8,1628,28],[2548,8,1628,28],[2548,15,1628,10,"_recoverAndRefresh"],[2548,33,1628,28],[2549,6,1628,28],[2550,4,1628,28],[2551,6,1628,28,"key"],[2551,9,1628,28],[2552,6,1628,28,"value"],[2552,11,1628,28],[2553,8,1628,28],[2553,12,1628,28,"_callRefreshToken2"],[2553,30,1628,28],[2553,33,1628,28,"_asyncToGenerator"],[2553,50,1628,28],[2553,51,1719,4],[2553,62,1719,28,"refreshToken"],[2553,74,1719,40],[2553,76,1719,42],[2554,10,1720,8],[2554,14,1720,12,"_a"],[2554,16,1720,14],[2554,18,1720,16,"_b"],[2554,20,1720,18],[2555,10,1721,8],[2555,14,1721,12],[2555,15,1721,13,"refreshToken"],[2555,27,1721,25],[2555,29,1721,27],[2556,12,1722,12],[2556,18,1722,18],[2556,22,1722,22,"errors_1"],[2556,30,1722,30],[2556,31,1722,31,"AuthSessionMissingError"],[2556,54,1722,54],[2556,55,1722,55],[2556,56,1722,56],[2557,10,1723,8],[2558,10,1724,8],[2559,10,1725,8],[2559,14,1725,12],[2559,18,1725,16],[2559,19,1725,17,"refreshingDeferred"],[2559,37,1725,35],[2559,39,1725,37],[2560,12,1726,12],[2560,19,1726,19],[2560,23,1726,23],[2560,24,1726,24,"refreshingDeferred"],[2560,42,1726,42],[2560,43,1726,43,"promise"],[2560,50,1726,50],[2561,10,1727,8],[2562,10,1728,8],[2562,14,1728,14,"debugName"],[2562,23,1728,23],[2562,26,1728,26],[2562,48,1728,48,"refreshToken"],[2562,60,1728,60],[2562,61,1728,61,"substring"],[2562,70,1728,70],[2562,71,1728,71],[2562,72,1728,72],[2562,74,1728,74],[2562,75,1728,75],[2562,76,1728,76],[2562,82,1728,82],[2563,10,1729,8],[2563,14,1729,12],[2563,15,1729,13,"_debug"],[2563,21,1729,19],[2563,22,1729,20,"debugName"],[2563,31,1729,29],[2563,33,1729,31],[2563,40,1729,38],[2563,41,1729,39],[2564,10,1730,8],[2564,14,1730,12],[2565,12,1731,12],[2565,16,1731,16],[2565,17,1731,17,"refreshingDeferred"],[2565,35,1731,35],[2565,38,1731,38],[2565,42,1731,42,"helpers_1"],[2565,51,1731,51],[2565,52,1731,52,"Deferred"],[2565,60,1731,60],[2565,61,1731,61],[2565,62,1731,62],[2566,12,1732,12],[2566,16,1732,12,"_yield$this$_refreshA"],[2566,37,1732,12],[2566,46,1732,42],[2566,50,1732,46],[2566,51,1732,47,"_refreshAccessToken"],[2566,70,1732,66],[2566,71,1732,67,"refreshToken"],[2566,83,1732,79],[2566,84,1732,80],[2567,14,1732,20,"data"],[2567,18,1732,24],[2567,21,1732,24,"_yield$this$_refreshA"],[2567,42,1732,24],[2567,43,1732,20,"data"],[2567,47,1732,24],[2568,14,1732,26,"error"],[2568,19,1732,31],[2568,22,1732,31,"_yield$this$_refreshA"],[2568,43,1732,31],[2568,44,1732,26,"error"],[2568,49,1732,31],[2569,12,1733,12],[2569,16,1733,16,"error"],[2569,21,1733,21],[2569,23,1734,16],[2569,29,1734,22,"error"],[2569,34,1734,27],[2570,12,1735,12],[2570,16,1735,16],[2570,17,1735,17,"data"],[2570,21,1735,21],[2570,22,1735,22,"session"],[2570,29,1735,29],[2570,31,1736,16],[2570,37,1736,22],[2570,41,1736,26,"errors_1"],[2570,49,1736,34],[2570,50,1736,35,"AuthSessionMissingError"],[2570,73,1736,58],[2570,74,1736,59],[2570,75,1736,60],[2571,12,1737,12],[2571,18,1737,18],[2571,22,1737,22],[2571,23,1737,23,"_saveSession"],[2571,35,1737,35],[2571,36,1737,36,"data"],[2571,40,1737,40],[2571,41,1737,41,"session"],[2571,48,1737,48],[2571,49,1737,49],[2572,12,1738,12],[2572,18,1738,18],[2572,22,1738,22],[2572,23,1738,23,"_notifyAllSubscribers"],[2572,44,1738,44],[2572,45,1738,45],[2572,62,1738,62],[2572,64,1738,64,"data"],[2572,68,1738,68],[2572,69,1738,69,"session"],[2572,76,1738,76],[2572,77,1738,77],[2573,12,1739,12],[2573,16,1739,18,"result"],[2573,22,1739,24],[2573,25,1739,27],[2574,14,1739,29,"session"],[2574,21,1739,36],[2574,23,1739,38,"data"],[2574,27,1739,42],[2574,28,1739,43,"session"],[2574,35,1739,50],[2575,14,1739,52,"error"],[2575,19,1739,57],[2575,21,1739,59],[2576,12,1739,64],[2576,13,1739,65],[2577,12,1740,12],[2577,16,1740,16],[2577,17,1740,17,"refreshingDeferred"],[2577,35,1740,35],[2577,36,1740,36,"resolve"],[2577,43,1740,43],[2577,44,1740,44,"result"],[2577,50,1740,50],[2577,51,1740,51],[2578,12,1741,12],[2578,19,1741,19,"result"],[2578,25,1741,25],[2579,10,1742,8],[2579,11,1742,9],[2579,12,1743,8],[2579,19,1743,15,"error"],[2579,24,1743,20],[2579,26,1743,22],[2580,12,1744,12],[2580,16,1744,16],[2580,17,1744,17,"_debug"],[2580,23,1744,23],[2580,24,1744,24,"debugName"],[2580,33,1744,33],[2580,35,1744,35],[2580,42,1744,42],[2580,44,1744,44,"error"],[2580,49,1744,49],[2580,50,1744,50],[2581,12,1745,12],[2581,16,1745,16],[2581,17,1745,17],[2581,18,1745,18],[2581,20,1745,20,"errors_1"],[2581,28,1745,28],[2581,29,1745,29,"isAuthError"],[2581,40,1745,40],[2581,42,1745,42,"error"],[2581,47,1745,47],[2581,48,1745,48],[2581,50,1745,50],[2582,14,1746,16],[2582,18,1746,22,"result"],[2582,26,1746,28],[2582,29,1746,31],[2583,16,1746,33,"session"],[2583,23,1746,40],[2583,25,1746,42],[2583,29,1746,46],[2584,16,1746,48,"error"],[2585,14,1746,54],[2585,15,1746,55],[2586,14,1747,16],[2586,18,1747,20],[2586,19,1747,21],[2586,20,1747,22],[2586,21,1747,23],[2586,23,1747,25,"errors_1"],[2586,31,1747,33],[2586,32,1747,34,"isAuthRetryableFetchError"],[2586,57,1747,59],[2586,59,1747,61,"error"],[2586,64,1747,66],[2586,65,1747,67],[2586,67,1747,69],[2587,16,1748,20],[2587,22,1748,26],[2587,26,1748,30],[2587,27,1748,31,"_removeSession"],[2587,41,1748,45],[2587,42,1748,46],[2587,43,1748,47],[2588,14,1749,16],[2589,14,1750,16],[2589,15,1750,17,"_a"],[2589,17,1750,19],[2589,20,1750,22],[2589,24,1750,26],[2589,25,1750,27,"refreshingDeferred"],[2589,43,1750,45],[2589,49,1750,51],[2589,53,1750,55],[2589,57,1750,59,"_a"],[2589,59,1750,61],[2589,64,1750,66],[2589,69,1750,71],[2589,70,1750,72],[2589,73,1750,75],[2589,78,1750,80],[2589,79,1750,81],[2589,82,1750,84,"_a"],[2589,84,1750,86],[2589,85,1750,87,"resolve"],[2589,92,1750,94],[2589,93,1750,95,"result"],[2589,101,1750,101],[2589,102,1750,102],[2590,14,1751,16],[2590,21,1751,23,"result"],[2590,29,1751,29],[2591,12,1752,12],[2592,12,1753,12],[2592,13,1753,13,"_b"],[2592,15,1753,15],[2592,18,1753,18],[2592,22,1753,22],[2592,23,1753,23,"refreshingDeferred"],[2592,41,1753,41],[2592,47,1753,47],[2592,51,1753,51],[2592,55,1753,55,"_b"],[2592,57,1753,57],[2592,62,1753,62],[2592,67,1753,67],[2592,68,1753,68],[2592,71,1753,71],[2592,76,1753,76],[2592,77,1753,77],[2592,80,1753,80,"_b"],[2592,82,1753,82],[2592,83,1753,83,"reject"],[2592,89,1753,89],[2592,90,1753,90,"error"],[2592,95,1753,95],[2592,96,1753,96],[2593,12,1754,12],[2593,18,1754,18,"error"],[2593,23,1754,23],[2594,10,1755,8],[2594,11,1755,9],[2594,20,1756,16],[2595,12,1757,12],[2595,16,1757,16],[2595,17,1757,17,"refreshingDeferred"],[2595,35,1757,35],[2595,38,1757,38],[2595,42,1757,42],[2596,12,1758,12],[2596,16,1758,16],[2596,17,1758,17,"_debug"],[2596,23,1758,23],[2596,24,1758,24,"debugName"],[2596,33,1758,33],[2596,35,1758,35],[2596,40,1758,40],[2596,41,1758,41],[2597,10,1759,8],[2598,8,1760,4],[2598,9,1760,5],[2599,8,1760,5],[2599,17,1719,10,"_callRefreshToken"],[2599,34,1719,27,"_callRefreshToken"],[2599,35,1719,27,"_x47"],[2599,39,1719,27],[2600,10,1719,27],[2600,17,1719,27,"_callRefreshToken2"],[2600,35,1719,27],[2600,36,1719,27,"apply"],[2600,41,1719,27],[2600,48,1719,27,"arguments"],[2600,57,1719,27],[2601,8,1719,27],[2602,8,1719,27],[2602,15,1719,10,"_callRefreshToken"],[2602,32,1719,27],[2603,6,1719,27],[2604,4,1719,27],[2605,6,1719,27,"key"],[2605,9,1719,27],[2606,6,1719,27,"value"],[2606,11,1719,27],[2607,8,1719,27],[2607,12,1719,27,"_notifyAllSubscribers2"],[2607,34,1719,27],[2607,37,1719,27,"_asyncToGenerator"],[2607,54,1719,27],[2607,55,1761,4],[2607,66,1761,32,"event"],[2607,71,1761,37],[2607,73,1761,39,"session"],[2607,80,1761,46],[2607,82,1761,66],[2608,10,1761,66],[2608,14,1761,48,"broadcast"],[2608,23,1761,57],[2608,26,1761,57,"arguments"],[2608,35,1761,57],[2608,36,1761,57,"length"],[2608,42,1761,57],[2608,50,1761,57,"arguments"],[2608,59,1761,57],[2608,67,1761,57,"undefined"],[2608,76,1761,57],[2608,79,1761,57,"arguments"],[2608,88,1761,57],[2608,94,1761,60],[2608,98,1761,64],[2609,10,1762,8],[2609,14,1762,14,"debugName"],[2609,23,1762,23],[2609,26,1762,26],[2609,52,1762,52,"event"],[2609,57,1762,57],[2609,60,1762,60],[2610,10,1763,8],[2610,14,1763,12],[2610,15,1763,13,"_debug"],[2610,21,1763,19],[2610,22,1763,20,"debugName"],[2610,31,1763,29],[2610,33,1763,31],[2610,40,1763,38],[2610,42,1763,40,"session"],[2610,49,1763,47],[2610,51,1763,49],[2610,66,1763,64,"broadcast"],[2610,75,1763,73],[2610,77,1763,75],[2610,78,1763,76],[2611,10,1764,8],[2611,14,1764,12],[2612,12,1765,12],[2612,16,1765,16],[2612,20,1765,20],[2612,21,1765,21,"broadcastChannel"],[2612,37,1765,37],[2612,41,1765,41,"broadcast"],[2612,50,1765,50],[2612,52,1765,52],[2613,14,1766,16],[2613,18,1766,20],[2613,19,1766,21,"broadcastChannel"],[2613,35,1766,37],[2613,36,1766,38,"postMessage"],[2613,47,1766,49],[2613,48,1766,50],[2614,16,1766,52,"event"],[2614,21,1766,57],[2615,16,1766,59,"session"],[2616,14,1766,67],[2616,15,1766,68],[2616,16,1766,69],[2617,12,1767,12],[2618,12,1768,12],[2618,16,1768,18,"errors"],[2618,22,1768,24],[2618,25,1768,27],[2618,27,1768,29],[2619,12,1769,12],[2619,16,1769,18,"promises"],[2619,24,1769,26],[2619,27,1769,29,"Array"],[2619,32,1769,34],[2619,33,1769,35,"from"],[2619,37,1769,39],[2619,38,1769,40],[2619,42,1769,44],[2619,43,1769,45,"stateChangeEmitters"],[2619,62,1769,64],[2619,63,1769,65,"values"],[2619,69,1769,71],[2619,70,1769,72],[2619,71,1769,73],[2619,72,1769,74],[2619,73,1769,75,"map"],[2619,76,1769,78],[2620,14,1769,78],[2620,18,1769,78,"_ref29"],[2620,24,1769,78],[2620,27,1769,78,"_asyncToGenerator"],[2620,44,1769,78],[2620,45,1769,79],[2620,56,1769,86,"x"],[2620,57,1769,87],[2620,59,1769,92],[2621,16,1770,16],[2621,20,1770,20],[2622,18,1771,20],[2622,24,1771,26,"x"],[2622,25,1771,27],[2622,26,1771,28,"callback"],[2622,34,1771,36],[2622,35,1771,37,"event"],[2622,40,1771,42],[2622,42,1771,44,"session"],[2622,49,1771,51],[2622,50,1771,52],[2623,16,1772,16],[2623,17,1772,17],[2623,18,1773,16],[2623,25,1773,23,"e"],[2623,26,1773,24],[2623,28,1773,26],[2624,18,1774,20,"errors"],[2624,24,1774,26],[2624,25,1774,27,"push"],[2624,29,1774,31],[2624,30,1774,32,"e"],[2624,31,1774,33],[2624,32,1774,34],[2625,16,1775,16],[2626,14,1776,12],[2626,15,1776,13],[2627,14,1776,13],[2627,31,1776,13,"_x50"],[2627,35,1776,13],[2628,16,1776,13],[2628,23,1776,13,"_ref29"],[2628,29,1776,13],[2628,30,1776,13,"apply"],[2628,35,1776,13],[2628,42,1776,13,"arguments"],[2628,51,1776,13],[2629,14,1776,13],[2630,12,1776,13],[2630,16,1776,14],[2631,12,1777,12],[2631,18,1777,18,"Promise"],[2631,25,1777,25],[2631,26,1777,26,"all"],[2631,29,1777,29],[2631,30,1777,30,"promises"],[2631,38,1777,38],[2631,39,1777,39],[2632,12,1778,12],[2632,16,1778,16,"errors"],[2632,22,1778,22],[2632,23,1778,23,"length"],[2632,29,1778,29],[2632,32,1778,32],[2632,33,1778,33],[2632,35,1778,35],[2633,14,1779,16],[2633,19,1779,21],[2633,23,1779,25,"i"],[2633,24,1779,26],[2633,27,1779,29],[2633,28,1779,30],[2633,30,1779,32,"i"],[2633,31,1779,33],[2633,34,1779,36,"errors"],[2633,40,1779,42],[2633,41,1779,43,"length"],[2633,47,1779,49],[2633,49,1779,51,"i"],[2633,50,1779,52],[2633,54,1779,56],[2633,55,1779,57],[2633,57,1779,59],[2634,16,1780,20,"console"],[2634,23,1780,27],[2634,24,1780,28,"error"],[2634,29,1780,33],[2634,30,1780,34,"errors"],[2634,36,1780,40],[2634,37,1780,41,"i"],[2634,38,1780,42],[2634,39,1780,43],[2634,40,1780,44],[2635,14,1781,16],[2636,14,1782,16],[2636,20,1782,22,"errors"],[2636,26,1782,28],[2636,27,1782,29],[2636,28,1782,30],[2636,29,1782,31],[2637,12,1783,12],[2638,10,1784,8],[2638,11,1784,9],[2638,20,1785,16],[2639,12,1786,12],[2639,16,1786,16],[2639,17,1786,17,"_debug"],[2639,23,1786,23],[2639,24,1786,24,"debugName"],[2639,33,1786,33],[2639,35,1786,35],[2639,40,1786,40],[2639,41,1786,41],[2640,10,1787,8],[2641,8,1788,4],[2641,9,1788,5],[2642,8,1788,5],[2642,17,1761,10,"_notifyAllSubscribers"],[2642,38,1761,31,"_notifyAllSubscribers"],[2642,39,1761,31,"_x48"],[2642,43,1761,31],[2642,45,1761,31,"_x49"],[2642,49,1761,31],[2643,10,1761,31],[2643,17,1761,31,"_notifyAllSubscribers2"],[2643,39,1761,31],[2643,40,1761,31,"apply"],[2643,45,1761,31],[2643,52,1761,31,"arguments"],[2643,61,1761,31],[2644,8,1761,31],[2645,8,1761,31],[2645,15,1761,10,"_notifyAllSubscribers"],[2645,36,1761,31],[2646,6,1761,31],[2647,6,1789,4],[2648,0,1790,0],[2649,0,1791,0],[2650,0,1792,0],[2651,4,1789,4],[2652,6,1789,4,"key"],[2652,9,1789,4],[2653,6,1789,4,"value"],[2653,11,1789,4],[2654,8,1789,4],[2654,12,1789,4,"_saveSession2"],[2654,25,1789,4],[2654,28,1789,4,"_asyncToGenerator"],[2654,45,1789,4],[2654,46,1793,4],[2654,57,1793,23,"session"],[2654,64,1793,30],[2654,66,1793,32],[2655,10,1794,8],[2655,14,1794,12],[2655,15,1794,13,"_debug"],[2655,21,1794,19],[2655,22,1794,20],[2655,39,1794,37],[2655,41,1794,39,"session"],[2655,48,1794,46],[2655,49,1794,47],[2656,10,1795,8],[2657,10,1796,8],[2658,10,1797,8],[2658,14,1797,12],[2658,15,1797,13,"suppressGetSessionWarning"],[2658,40,1797,38],[2658,43,1797,41],[2658,47,1797,45],[2659,10,1798,8],[2660,10,1799,8],[2660,14,1799,14,"sessionToProcess"],[2660,30,1799,30],[2660,33,1799,33,"Object"],[2660,39,1799,39],[2660,40,1799,40,"assign"],[2660,46,1799,46],[2660,47,1799,47],[2660,48,1799,48],[2660,49,1799,49],[2660,51,1799,51,"session"],[2660,58,1799,58],[2660,59,1799,59],[2661,10,1800,8],[2661,14,1800,14,"userIsProxy"],[2661,25,1800,25],[2661,28,1800,28,"sessionToProcess"],[2661,44,1800,44],[2661,45,1800,45,"user"],[2661,49,1800,49],[2661,53,1800,53,"sessionToProcess"],[2661,69,1800,69],[2661,70,1800,70,"user"],[2661,74,1800,74],[2661,75,1800,75,"__isUserNotAvailableProxy"],[2661,100,1800,100],[2661,105,1800,105],[2661,109,1800,109],[2662,10,1801,8],[2662,14,1801,12],[2662,18,1801,16],[2662,19,1801,17,"userStorage"],[2662,30,1801,28],[2662,32,1801,30],[2663,12,1802,12],[2663,16,1802,16],[2663,17,1802,17,"userIsProxy"],[2663,28,1802,28],[2663,32,1802,32,"sessionToProcess"],[2663,48,1802,48],[2663,49,1802,49,"user"],[2663,53,1802,53],[2663,55,1802,55],[2664,14,1803,16],[2665,14,1804,16],[2665,20,1804,22],[2665,21,1804,23],[2665,22,1804,24],[2665,24,1804,26,"helpers_1"],[2665,33,1804,35],[2665,34,1804,36,"setItemAsync"],[2665,46,1804,48],[2665,48,1804,50],[2665,52,1804,54],[2665,53,1804,55,"userStorage"],[2665,64,1804,66],[2665,66,1804,68],[2665,70,1804,72],[2665,71,1804,73,"storageKey"],[2665,81,1804,83],[2665,84,1804,86],[2665,91,1804,93],[2665,93,1804,95],[2666,16,1805,20,"user"],[2666,20,1805,24],[2666,22,1805,26,"sessionToProcess"],[2666,38,1805,42],[2666,39,1805,43,"user"],[2667,14,1806,16],[2667,15,1806,17],[2667,16,1806,18],[2668,12,1807,12],[2668,13,1807,13],[2668,19,1808,17],[2668,23,1808,21,"userIsProxy"],[2668,34,1808,32],[2668,36,1808,34],[2669,14,1809,16],[2670,14,1810,16],[2671,14,1811,16],[2672,14,1812,16],[2673,12,1812,16],[2674,12,1814,12],[2675,12,1815,12],[2676,12,1816,12],[2676,16,1816,18,"mainSessionData"],[2676,31,1816,33],[2676,34,1816,36,"Object"],[2676,40,1816,42],[2676,41,1816,43,"assign"],[2676,47,1816,49],[2676,48,1816,50],[2676,49,1816,51],[2676,50,1816,52],[2676,52,1816,54,"sessionToProcess"],[2676,68,1816,70],[2676,69,1816,71],[2677,12,1817,12],[2677,19,1817,19,"mainSessionData"],[2677,34,1817,34],[2677,35,1817,35,"user"],[2677,39,1817,39],[2677,40,1817,40],[2677,41,1817,41],[2678,12,1818,12],[2678,16,1818,18,"clonedMainSessionData"],[2678,37,1818,39],[2678,40,1818,42],[2678,41,1818,43],[2678,42,1818,44],[2678,44,1818,46,"helpers_2"],[2678,53,1818,55],[2678,54,1818,56,"deepClone"],[2678,63,1818,65],[2678,65,1818,67,"mainSessionData"],[2678,80,1818,82],[2678,81,1818,83],[2679,12,1819,12],[2679,18,1819,18],[2679,19,1819,19],[2679,20,1819,20],[2679,22,1819,22,"helpers_1"],[2679,31,1819,31],[2679,32,1819,32,"setItemAsync"],[2679,44,1819,44],[2679,46,1819,46],[2679,50,1819,50],[2679,51,1819,51,"storage"],[2679,58,1819,58],[2679,60,1819,60],[2679,64,1819,64],[2679,65,1819,65,"storageKey"],[2679,75,1819,75],[2679,77,1819,77,"clonedMainSessionData"],[2679,98,1819,98],[2679,99,1819,99],[2680,10,1820,8],[2680,11,1820,9],[2680,17,1821,13],[2681,12,1822,12],[2682,12,1823,12],[2683,12,1824,12],[2684,12,1825,12],[2684,16,1825,18,"clonedSession"],[2684,29,1825,31],[2684,32,1825,34],[2684,33,1825,35],[2684,34,1825,36],[2684,36,1825,38,"helpers_2"],[2684,45,1825,47],[2684,46,1825,48,"deepClone"],[2684,55,1825,57],[2684,57,1825,59,"sessionToProcess"],[2684,73,1825,75],[2684,74,1825,76],[2684,75,1825,77],[2684,76,1825,78],[2685,12,1826,12],[2685,18,1826,18],[2685,19,1826,19],[2685,20,1826,20],[2685,22,1826,22,"helpers_1"],[2685,31,1826,31],[2685,32,1826,32,"setItemAsync"],[2685,44,1826,44],[2685,46,1826,46],[2685,50,1826,50],[2685,51,1826,51,"storage"],[2685,58,1826,58],[2685,60,1826,60],[2685,64,1826,64],[2685,65,1826,65,"storageKey"],[2685,75,1826,75],[2685,77,1826,77,"clonedSession"],[2685,90,1826,90],[2685,91,1826,91],[2686,10,1827,8],[2687,8,1828,4],[2687,9,1828,5],[2688,8,1828,5],[2688,17,1793,10,"_saveSession"],[2688,29,1793,22,"_saveSession"],[2688,30,1793,22,"_x51"],[2688,34,1793,22],[2689,10,1793,22],[2689,17,1793,22,"_saveSession2"],[2689,30,1793,22],[2689,31,1793,22,"apply"],[2689,36,1793,22],[2689,43,1793,22,"arguments"],[2689,52,1793,22],[2690,8,1793,22],[2691,8,1793,22],[2691,15,1793,10,"_saveSession"],[2691,27,1793,22],[2692,6,1793,22],[2693,4,1793,22],[2694,6,1793,22,"key"],[2694,9,1793,22],[2695,6,1793,22,"value"],[2695,11,1793,22],[2696,8,1793,22],[2696,12,1793,22,"_removeSession2"],[2696,27,1793,22],[2696,30,1793,22,"_asyncToGenerator"],[2696,47,1793,22],[2696,48,1829,4],[2696,61,1829,27],[2697,10,1830,8],[2697,14,1830,12],[2697,15,1830,13,"_debug"],[2697,21,1830,19],[2697,22,1830,20],[2697,41,1830,39],[2697,42,1830,40],[2698,10,1831,8],[2698,16,1831,14],[2698,17,1831,15],[2698,18,1831,16],[2698,20,1831,18,"helpers_1"],[2698,29,1831,27],[2698,30,1831,28,"removeItemAsync"],[2698,45,1831,43],[2698,47,1831,45],[2698,51,1831,49],[2698,52,1831,50,"storage"],[2698,59,1831,57],[2698,61,1831,59],[2698,65,1831,63],[2698,66,1831,64,"storageKey"],[2698,76,1831,74],[2698,77,1831,75],[2699,10,1832,8],[2699,16,1832,14],[2699,17,1832,15],[2699,18,1832,16],[2699,20,1832,18,"helpers_1"],[2699,29,1832,27],[2699,30,1832,28,"removeItemAsync"],[2699,45,1832,43],[2699,47,1832,45],[2699,51,1832,49],[2699,52,1832,50,"storage"],[2699,59,1832,57],[2699,61,1832,59],[2699,65,1832,63],[2699,66,1832,64,"storageKey"],[2699,76,1832,74],[2699,79,1832,77],[2699,95,1832,93],[2699,96,1832,94],[2700,10,1833,8],[2700,16,1833,14],[2700,17,1833,15],[2700,18,1833,16],[2700,20,1833,18,"helpers_1"],[2700,29,1833,27],[2700,30,1833,28,"removeItemAsync"],[2700,45,1833,43],[2700,47,1833,45],[2700,51,1833,49],[2700,52,1833,50,"storage"],[2700,59,1833,57],[2700,61,1833,59],[2700,65,1833,63],[2700,66,1833,64,"storageKey"],[2700,76,1833,74],[2700,79,1833,77],[2700,86,1833,84],[2700,87,1833,85],[2701,10,1834,8],[2701,14,1834,12],[2701,18,1834,16],[2701,19,1834,17,"userStorage"],[2701,30,1834,28],[2701,32,1834,30],[2702,12,1835,12],[2702,18,1835,18],[2702,19,1835,19],[2702,20,1835,20],[2702,22,1835,22,"helpers_1"],[2702,31,1835,31],[2702,32,1835,32,"removeItemAsync"],[2702,47,1835,47],[2702,49,1835,49],[2702,53,1835,53],[2702,54,1835,54,"userStorage"],[2702,65,1835,65],[2702,67,1835,67],[2702,71,1835,71],[2702,72,1835,72,"storageKey"],[2702,82,1835,82],[2702,85,1835,85],[2702,92,1835,92],[2702,93,1835,93],[2703,10,1836,8],[2704,10,1837,8],[2704,16,1837,14],[2704,20,1837,18],[2704,21,1837,19,"_notifyAllSubscribers"],[2704,42,1837,40],[2704,43,1837,41],[2704,55,1837,53],[2704,57,1837,55],[2704,61,1837,59],[2704,62,1837,60],[2705,8,1838,4],[2705,9,1838,5],[2706,8,1838,5],[2706,17,1829,10,"_removeSession"],[2706,31,1829,24,"_removeSession"],[2706,32,1829,24],[2707,10,1829,24],[2707,17,1829,24,"_removeSession2"],[2707,32,1829,24],[2707,33,1829,24,"apply"],[2707,38,1829,24],[2707,45,1829,24,"arguments"],[2707,54,1829,24],[2708,8,1829,24],[2709,8,1829,24],[2709,15,1829,10,"_removeSession"],[2709,29,1829,24],[2710,6,1829,24],[2711,6,1839,4],[2712,0,1840,0],[2713,0,1841,0],[2714,0,1842,0],[2715,0,1843,0],[2716,0,1844,0],[2717,4,1839,4],[2718,6,1839,4,"key"],[2718,9,1839,4],[2719,6,1839,4,"value"],[2719,11,1839,4],[2719,13,1845,4],[2719,22,1845,4,"_removeVisibilityChangedCallback"],[2719,54,1845,36,"_removeVisibilityChangedCallback"],[2719,55,1845,36],[2719,57,1845,39],[2720,8,1846,8],[2720,12,1846,12],[2720,13,1846,13,"_debug"],[2720,19,1846,19],[2720,20,1846,20],[2720,57,1846,57],[2720,58,1846,58],[2721,8,1847,8],[2721,12,1847,14,"callback"],[2721,20,1847,22],[2721,23,1847,25],[2721,27,1847,29],[2721,28,1847,30,"visibilityChangedCallback"],[2721,53,1847,55],[2722,8,1848,8],[2722,12,1848,12],[2722,13,1848,13,"visibilityChangedCallback"],[2722,38,1848,38],[2722,41,1848,41],[2722,45,1848,45],[2723,8,1849,8],[2723,12,1849,12],[2724,10,1850,12],[2724,14,1850,16,"callback"],[2724,22,1850,24],[2724,26,1850,28],[2724,27,1850,29],[2724,28,1850,30],[2724,30,1850,32,"helpers_1"],[2724,39,1850,41],[2724,40,1850,42,"isBrowser"],[2724,49,1850,51],[2724,51,1850,53],[2724,52,1850,54],[2724,57,1850,59,"window"],[2724,63,1850,65],[2724,68,1850,70],[2724,72,1850,74],[2724,76,1850,78,"window"],[2724,82,1850,84],[2724,87,1850,89],[2724,92,1850,94],[2724,93,1850,95],[2724,96,1850,98],[2724,101,1850,103],[2724,102,1850,104],[2724,105,1850,107,"window"],[2724,111,1850,113],[2724,112,1850,114,"removeEventListener"],[2724,131,1850,133],[2724,132,1850,134],[2724,134,1850,136],[2725,12,1851,16,"window"],[2725,18,1851,22],[2725,19,1851,23,"removeEventListener"],[2725,38,1851,42],[2725,39,1851,43],[2725,57,1851,61],[2725,59,1851,63,"callback"],[2725,67,1851,71],[2725,68,1851,72],[2726,10,1852,12],[2727,8,1853,8],[2727,9,1853,9],[2727,10,1854,8],[2727,17,1854,15,"e"],[2727,18,1854,16],[2727,20,1854,18],[2728,10,1855,12,"console"],[2728,17,1855,19],[2728,18,1855,20,"error"],[2728,23,1855,25],[2728,24,1855,26],[2728,67,1855,69],[2728,69,1855,71,"e"],[2728,70,1855,72],[2728,71,1855,73],[2729,8,1856,8],[2730,6,1857,4],[2731,6,1858,4],[2732,0,1859,0],[2733,0,1860,0],[2734,0,1861,0],[2735,4,1858,4],[2736,6,1858,4,"key"],[2736,9,1858,4],[2737,6,1858,4,"value"],[2737,11,1858,4],[2738,8,1858,4],[2738,12,1858,4,"_startAutoRefresh2"],[2738,30,1858,4],[2738,33,1858,4,"_asyncToGenerator"],[2738,50,1858,4],[2738,51,1862,4],[2738,64,1862,30],[2739,10,1862,30],[2739,14,1862,30,"_this21"],[2739,21,1862,30],[2740,10,1863,8],[2740,16,1863,14],[2740,20,1863,18],[2740,21,1863,19,"_stopAutoRefresh"],[2740,37,1863,35],[2740,38,1863,36],[2740,39,1863,37],[2741,10,1864,8],[2741,14,1864,12],[2741,15,1864,13,"_debug"],[2741,21,1864,19],[2741,22,1864,20],[2741,44,1864,42],[2741,45,1864,43],[2742,10,1865,8],[2742,14,1865,14,"ticker"],[2742,20,1865,20],[2742,23,1865,23,"setInterval"],[2742,34,1865,34],[2742,35,1865,35],[2742,41,1865,41],[2742,45,1865,45],[2742,46,1865,46,"_autoRefreshTokenTick"],[2742,67,1865,67],[2742,68,1865,68],[2742,69,1865,69],[2742,71,1865,71,"constants_1"],[2742,82,1865,82],[2742,83,1865,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2742,112,1865,112],[2742,113,1865,113],[2743,10,1866,8],[2743,14,1866,12],[2743,15,1866,13,"autoRefreshTicker"],[2743,32,1866,30],[2743,35,1866,33,"ticker"],[2743,41,1866,39],[2744,10,1867,8],[2744,14,1867,12,"ticker"],[2744,20,1867,18],[2744,24,1867,22],[2744,31,1867,29,"ticker"],[2744,37,1867,35],[2744,42,1867,40],[2744,50,1867,48],[2744,54,1867,52],[2744,61,1867,59,"ticker"],[2744,67,1867,65],[2744,68,1867,66,"unref"],[2744,73,1867,71],[2744,78,1867,76],[2744,88,1867,86],[2744,90,1867,88],[2745,12,1868,12],[2746,12,1869,12],[2747,12,1870,12],[2748,12,1871,12],[2749,12,1872,12],[2750,12,1873,12],[2751,12,1874,12,"ticker"],[2751,18,1874,18],[2751,19,1874,19,"unref"],[2751,24,1874,24],[2751,25,1874,25],[2751,26,1874,26],[2752,12,1875,12],[2753,10,1876,8],[2753,11,1876,9],[2753,17,1877,13],[2753,21,1877,17],[2753,28,1877,24,"Deno"],[2753,32,1877,28],[2753,37,1877,33],[2753,48,1877,44],[2753,52,1877,48],[2753,59,1877,55,"Deno"],[2753,63,1877,59],[2753,64,1877,60,"unrefTimer"],[2753,74,1877,70],[2753,79,1877,75],[2753,89,1877,85],[2753,91,1877,87],[2754,12,1878,12],[2755,12,1879,12],[2756,12,1880,12],[2757,12,1881,12,"Deno"],[2757,16,1881,16],[2757,17,1881,17,"unrefTimer"],[2757,27,1881,27],[2757,28,1881,28,"ticker"],[2757,34,1881,34],[2757,35,1881,35],[2758,10,1882,8],[2759,10,1883,8],[2760,10,1884,8],[2761,10,1885,8],[2762,10,1886,8,"setTimeout"],[2762,20,1886,18],[2762,34,1886,18,"_asyncToGenerator"],[2762,51,1886,18],[2762,52,1886,19],[2762,65,1886,31],[2763,12,1887,12],[2763,18,1887,18,"_this21"],[2763,25,1887,22],[2763,26,1887,23,"initializePromise"],[2763,43,1887,40],[2764,12,1888,12],[2764,18,1888,18,"_this21"],[2764,25,1888,22],[2764,26,1888,23,"_autoRefreshTokenTick"],[2764,47,1888,44],[2764,48,1888,45],[2764,49,1888,46],[2765,10,1889,8],[2765,11,1889,9],[2765,14,1889,11],[2765,15,1889,12],[2765,16,1889,13],[2766,8,1890,4],[2766,9,1890,5],[2767,8,1890,5],[2767,17,1862,10,"_startAutoRefresh"],[2767,34,1862,27,"_startAutoRefresh"],[2767,35,1862,27],[2768,10,1862,27],[2768,17,1862,27,"_startAutoRefresh2"],[2768,35,1862,27],[2768,36,1862,27,"apply"],[2768,41,1862,27],[2768,48,1862,27,"arguments"],[2768,57,1862,27],[2769,8,1862,27],[2770,8,1862,27],[2770,15,1862,10,"_startAutoRefresh"],[2770,32,1862,27],[2771,6,1862,27],[2772,6,1891,4],[2773,0,1892,0],[2774,0,1893,0],[2775,0,1894,0],[2776,6,1891,4],[2777,4,1891,4],[2778,6,1891,4,"key"],[2778,9,1891,4],[2779,6,1891,4,"value"],[2779,11,1891,4],[2780,8,1891,4],[2780,12,1891,4,"_stopAutoRefresh2"],[2780,29,1891,4],[2780,32,1891,4,"_asyncToGenerator"],[2780,49,1891,4],[2780,50,1895,4],[2780,63,1895,29],[2781,10,1896,8],[2781,14,1896,12],[2781,15,1896,13,"_debug"],[2781,21,1896,19],[2781,22,1896,20],[2781,43,1896,41],[2781,44,1896,42],[2782,10,1897,8],[2782,14,1897,14,"ticker"],[2782,20,1897,20],[2782,23,1897,23],[2782,27,1897,27],[2782,28,1897,28,"autoRefreshTicker"],[2782,45,1897,45],[2783,10,1898,8],[2783,14,1898,12],[2783,15,1898,13,"autoRefreshTicker"],[2783,32,1898,30],[2783,35,1898,33],[2783,39,1898,37],[2784,10,1899,8],[2784,14,1899,12,"ticker"],[2784,20,1899,18],[2784,22,1899,20],[2785,12,1900,12,"clearInterval"],[2785,25,1900,25],[2785,26,1900,26,"ticker"],[2785,32,1900,32],[2785,33,1900,33],[2786,10,1901,8],[2787,8,1902,4],[2787,9,1902,5],[2788,8,1902,5],[2788,17,1895,10,"_stopAutoRefresh"],[2788,33,1895,26,"_stopAutoRefresh"],[2788,34,1895,26],[2789,10,1895,26],[2789,17,1895,26,"_stopAutoRefresh2"],[2789,34,1895,26],[2789,35,1895,26,"apply"],[2789,40,1895,26],[2789,47,1895,26,"arguments"],[2789,56,1895,26],[2790,8,1895,26],[2791,8,1895,26],[2791,15,1895,10,"_stopAutoRefresh"],[2791,31,1895,26],[2792,6,1895,26],[2793,6,1903,4],[2794,0,1904,0],[2795,0,1905,0],[2796,0,1906,0],[2797,0,1907,0],[2798,0,1908,0],[2799,0,1909,0],[2800,0,1910,0],[2801,0,1911,0],[2802,0,1912,0],[2803,0,1913,0],[2804,0,1914,0],[2805,0,1915,0],[2806,0,1916,0],[2807,0,1917,0],[2808,0,1918,0],[2809,0,1919,0],[2810,0,1920,0],[2811,0,1921,0],[2812,0,1922,0],[2813,0,1923,0],[2814,0,1924,0],[2815,6,1903,4],[2816,4,1903,4],[2817,6,1903,4,"key"],[2817,9,1903,4],[2818,6,1903,4,"value"],[2818,11,1903,4],[2819,8,1903,4],[2819,12,1903,4,"_startAutoRefresh3"],[2819,30,1903,4],[2819,33,1903,4,"_asyncToGenerator"],[2819,50,1903,4],[2819,51,1925,4],[2819,64,1925,29],[2820,10,1926,8],[2820,14,1926,12],[2820,15,1926,13,"_removeVisibilityChangedCallback"],[2820,47,1926,45],[2820,48,1926,46],[2820,49,1926,47],[2821,10,1927,8],[2821,16,1927,14],[2821,20,1927,18],[2821,21,1927,19,"_startAutoRefresh"],[2821,38,1927,36],[2821,39,1927,37],[2821,40,1927,38],[2822,8,1928,4],[2822,9,1928,5],[2823,8,1928,5],[2823,17,1925,10,"startAutoRefresh"],[2823,33,1925,26,"startAutoRefresh"],[2823,34,1925,26],[2824,10,1925,26],[2824,17,1925,26,"_startAutoRefresh3"],[2824,35,1925,26],[2824,36,1925,26,"apply"],[2824,41,1925,26],[2824,48,1925,26,"arguments"],[2824,57,1925,26],[2825,8,1925,26],[2826,8,1925,26],[2826,15,1925,10,"startAutoRefresh"],[2826,31,1925,26],[2827,6,1925,26],[2828,6,1929,4],[2829,0,1930,0],[2830,0,1931,0],[2831,0,1932,0],[2832,0,1933,0],[2833,0,1934,0],[2834,0,1935,0],[2835,0,1936,0],[2836,6,1929,4],[2837,4,1929,4],[2838,6,1929,4,"key"],[2838,9,1929,4],[2839,6,1929,4,"value"],[2839,11,1929,4],[2840,8,1929,4],[2840,12,1929,4,"_stopAutoRefresh3"],[2840,29,1929,4],[2840,32,1929,4,"_asyncToGenerator"],[2840,49,1929,4],[2840,50,1937,4],[2840,63,1937,28],[2841,10,1938,8],[2841,14,1938,12],[2841,15,1938,13,"_removeVisibilityChangedCallback"],[2841,47,1938,45],[2841,48,1938,46],[2841,49,1938,47],[2842,10,1939,8],[2842,16,1939,14],[2842,20,1939,18],[2842,21,1939,19,"_stopAutoRefresh"],[2842,37,1939,35],[2842,38,1939,36],[2842,39,1939,37],[2843,8,1940,4],[2843,9,1940,5],[2844,8,1940,5],[2844,17,1937,10,"stopAutoRefresh"],[2844,32,1937,25,"stopAutoRefresh"],[2844,33,1937,25],[2845,10,1937,25],[2845,17,1937,25,"_stopAutoRefresh3"],[2845,34,1937,25],[2845,35,1937,25,"apply"],[2845,40,1937,25],[2845,47,1937,25,"arguments"],[2845,56,1937,25],[2846,8,1937,25],[2847,8,1937,25],[2847,15,1937,10,"stopAutoRefresh"],[2847,30,1937,25],[2848,6,1937,25],[2849,6,1941,4],[2850,0,1942,0],[2851,0,1943,0],[2852,6,1941,4],[2853,4,1941,4],[2854,6,1941,4,"key"],[2854,9,1941,4],[2855,6,1941,4,"value"],[2855,11,1941,4],[2856,8,1941,4],[2856,12,1941,4,"_autoRefreshTokenTick2"],[2856,34,1941,4],[2856,37,1941,4,"_asyncToGenerator"],[2856,54,1941,4],[2856,55,1944,4],[2856,68,1944,34],[2857,10,1944,34],[2857,14,1944,34,"_this22"],[2857,21,1944,34],[2858,10,1945,8],[2858,14,1945,12],[2858,15,1945,13,"_debug"],[2858,21,1945,19],[2858,22,1945,20],[2858,48,1945,46],[2858,50,1945,48],[2858,57,1945,55],[2858,58,1945,56],[2859,10,1946,8],[2859,14,1946,12],[2860,12,1947,12],[2860,18,1947,18],[2860,22,1947,22],[2860,23,1947,23,"_acquireLock"],[2860,35,1947,35],[2860,36,1947,36],[2860,37,1947,37],[2860,52,1947,37,"_asyncToGenerator"],[2860,69,1947,37],[2860,70,1947,39],[2860,83,1947,51],[2861,14,1948,16],[2861,18,1948,20],[2862,16,1949,20],[2862,20,1949,26,"now"],[2862,23,1949,29],[2862,26,1949,32,"Date"],[2862,30,1949,36],[2862,31,1949,37,"now"],[2862,34,1949,40],[2862,35,1949,41],[2862,36,1949,42],[2863,16,1950,20],[2863,20,1950,24],[2864,18,1951,24],[2864,31,1951,37,"_this22"],[2864,38,1951,41],[2864,39,1951,42,"_useSession"],[2864,50,1951,53],[2865,20,1951,53],[2865,24,1951,53,"_ref32"],[2865,30,1951,53],[2865,33,1951,53,"_asyncToGenerator"],[2865,50,1951,53],[2865,51,1951,54],[2865,62,1951,61,"result"],[2865,68,1951,67],[2865,70,1951,72],[2866,22,1952,28],[2866,26,1952,44,"session"],[2866,33,1952,51],[2866,36,1952,59,"result"],[2866,42,1952,65],[2866,43,1952,36,"data"],[2866,47,1952,40],[2866,48,1952,44,"session"],[2866,55,1952,51],[2867,22,1953,28],[2867,26,1953,32],[2867,27,1953,33,"session"],[2867,34,1953,40],[2867,38,1953,44],[2867,39,1953,45,"session"],[2867,46,1953,52],[2867,47,1953,53,"refresh_token"],[2867,60,1953,66],[2867,64,1953,70],[2867,65,1953,71,"session"],[2867,72,1953,78],[2867,73,1953,79,"expires_at"],[2867,83,1953,89],[2867,85,1953,91],[2868,24,1954,32,"_this22"],[2868,31,1954,36],[2868,32,1954,37,"_debug"],[2868,38,1954,43],[2868,39,1954,44],[2868,65,1954,70],[2868,67,1954,72],[2868,79,1954,84],[2868,80,1954,85],[2869,24,1955,32],[2870,22,1956,28],[2871,22,1957,28],[2872,22,1958,28],[2872,26,1958,34,"expiresInTicks"],[2872,40,1958,48],[2872,43,1958,51,"Math"],[2872,47,1958,55],[2872,48,1958,56,"floor"],[2872,53,1958,61],[2872,54,1958,62],[2872,55,1958,63,"session"],[2872,62,1958,70],[2872,63,1958,71,"expires_at"],[2872,73,1958,81],[2872,76,1958,84],[2872,80,1958,88],[2872,83,1958,91,"now"],[2872,86,1958,94],[2872,90,1958,98,"constants_1"],[2872,101,1958,109],[2872,102,1958,110,"AUTO_REFRESH_TICK_DURATION_MS"],[2872,131,1958,139],[2872,132,1958,140],[2873,22,1959,28,"_this22"],[2873,29,1959,32],[2873,30,1959,33,"_debug"],[2873,36,1959,39],[2873,37,1959,40],[2873,63,1959,66],[2873,65,1959,68],[2873,92,1959,95,"expiresInTicks"],[2873,106,1959,109],[2873,130,1959,133,"constants_1"],[2873,141,1959,144],[2873,142,1959,145,"AUTO_REFRESH_TICK_DURATION_MS"],[2873,171,1959,174],[2873,199,1959,202,"constants_1"],[2873,210,1959,213],[2873,211,1959,214,"AUTO_REFRESH_TICK_THRESHOLD"],[2873,238,1959,241],[2873,246,1959,249],[2873,247,1959,250],[2874,22,1960,28],[2874,26,1960,32,"expiresInTicks"],[2874,40,1960,46],[2874,44,1960,50,"constants_1"],[2874,55,1960,61],[2874,56,1960,62,"AUTO_REFRESH_TICK_THRESHOLD"],[2874,83,1960,89],[2874,85,1960,91],[2875,24,1961,32],[2875,30,1961,38,"_this22"],[2875,37,1961,42],[2875,38,1961,43,"_callRefreshToken"],[2875,55,1961,60],[2875,56,1961,61,"session"],[2875,63,1961,68],[2875,64,1961,69,"refresh_token"],[2875,77,1961,82],[2875,78,1961,83],[2876,22,1962,28],[2877,20,1963,24],[2877,21,1963,25],[2878,20,1963,25],[2878,37,1963,25,"_x52"],[2878,41,1963,25],[2879,22,1963,25],[2879,29,1963,25,"_ref32"],[2879,35,1963,25],[2879,36,1963,25,"apply"],[2879,41,1963,25],[2879,48,1963,25,"arguments"],[2879,57,1963,25],[2880,20,1963,25],[2881,18,1963,25],[2881,22,1963,26],[2882,16,1964,20],[2882,17,1964,21],[2882,18,1965,20],[2882,25,1965,27,"e"],[2882,26,1965,28],[2882,28,1965,30],[2883,18,1966,24,"console"],[2883,25,1966,31],[2883,26,1966,32,"error"],[2883,31,1966,37],[2883,32,1966,38],[2883,104,1966,110],[2883,106,1966,112,"e"],[2883,107,1966,113],[2883,108,1966,114],[2884,16,1967,20],[2885,14,1968,16],[2885,15,1968,17],[2885,24,1969,24],[2886,16,1970,20,"_this22"],[2886,23,1970,24],[2886,24,1970,25,"_debug"],[2886,30,1970,31],[2886,31,1970,32],[2886,57,1970,58],[2886,59,1970,60],[2886,64,1970,65],[2886,65,1970,66],[2887,14,1971,16],[2888,12,1972,12],[2888,13,1972,13],[2888,15,1972,14],[2889,10,1973,8],[2889,11,1973,9],[2889,12,1974,8],[2889,19,1974,15,"e"],[2889,20,1974,16],[2889,22,1974,18],[2890,12,1975,12],[2890,16,1975,16,"e"],[2890,17,1975,17],[2890,18,1975,18,"isAcquireTimeout"],[2890,34,1975,34],[2890,38,1975,38,"e"],[2890,39,1975,39],[2890,51,1975,51,"locks_1"],[2890,58,1975,58],[2890,59,1975,59,"LockAcquireTimeoutError"],[2890,82,1975,82],[2890,84,1975,84],[2891,14,1976,16],[2891,18,1976,20],[2891,19,1976,21,"_debug"],[2891,25,1976,27],[2891,26,1976,28],[2891,70,1976,72],[2891,71,1976,73],[2892,12,1977,12],[2892,13,1977,13],[2892,19,1978,17],[2893,14,1979,16],[2893,20,1979,22,"e"],[2893,21,1979,23],[2894,12,1980,12],[2895,10,1981,8],[2896,8,1982,4],[2896,9,1982,5],[2897,8,1982,5],[2897,17,1944,10,"_autoRefreshTokenTick"],[2897,38,1944,31,"_autoRefreshTokenTick"],[2897,39,1944,31],[2898,10,1944,31],[2898,17,1944,31,"_autoRefreshTokenTick2"],[2898,39,1944,31],[2898,40,1944,31,"apply"],[2898,45,1944,31],[2898,52,1944,31,"arguments"],[2898,61,1944,31],[2899,8,1944,31],[2900,8,1944,31],[2900,15,1944,10,"_autoRefreshTokenTick"],[2900,36,1944,31],[2901,6,1944,31],[2902,6,1983,4],[2903,0,1984,0],[2904,0,1985,0],[2905,0,1986,0],[2906,0,1987,0],[2907,6,1983,4],[2908,4,1983,4],[2909,6,1983,4,"key"],[2909,9,1983,4],[2910,6,1983,4,"value"],[2910,11,1983,4],[2911,8,1983,4],[2911,12,1983,4,"_handleVisibilityChange2"],[2911,36,1983,4],[2911,39,1983,4,"_asyncToGenerator"],[2911,56,1983,4],[2911,57,1988,4],[2911,70,1988,36],[2912,10,1988,36],[2912,14,1988,36,"_this23"],[2912,21,1988,36],[2913,10,1989,8],[2913,14,1989,12],[2913,15,1989,13,"_debug"],[2913,21,1989,19],[2913,22,1989,20],[2913,50,1989,48],[2913,51,1989,49],[2914,10,1990,8],[2914,14,1990,12],[2914,15,1990,13],[2914,16,1990,14],[2914,17,1990,15],[2914,19,1990,17,"helpers_1"],[2914,28,1990,26],[2914,29,1990,27,"isBrowser"],[2914,38,1990,36],[2914,40,1990,38],[2914,41,1990,39],[2914,45,1990,43],[2914,47,1990,45,"window"],[2914,53,1990,51],[2914,58,1990,56],[2914,62,1990,60],[2914,66,1990,64,"window"],[2914,72,1990,70],[2914,77,1990,75],[2914,82,1990,80],[2914,83,1990,81],[2914,86,1990,84],[2914,91,1990,89],[2914,92,1990,90],[2914,95,1990,93,"window"],[2914,101,1990,99],[2914,102,1990,100,"addEventListener"],[2914,118,1990,116],[2914,119,1990,117],[2914,121,1990,119],[2915,12,1991,12],[2915,16,1991,16],[2915,20,1991,20],[2915,21,1991,21,"autoRefreshToken"],[2915,37,1991,37],[2915,39,1991,39],[2916,14,1992,16],[2917,14,1993,16],[2917,18,1993,20],[2917,19,1993,21,"startAutoRefresh"],[2917,35,1993,37],[2917,36,1993,38],[2917,37,1993,39],[2918,12,1994,12],[2919,12,1995,12],[2919,19,1995,19],[2919,24,1995,24],[2920,10,1996,8],[2921,10,1997,8],[2921,14,1997,12],[2922,12,1998,12],[2922,16,1998,16],[2922,17,1998,17,"visibilityChangedCallback"],[2922,42,1998,42],[2922,58,1998,42,"_asyncToGenerator"],[2922,75,1998,42],[2922,76,1998,45],[2923,14,1998,45],[2923,27,1998,63,"_this23"],[2923,34,1998,67],[2923,35,1998,68,"_onVisibilityChanged"],[2923,55,1998,88],[2923,56,1998,89],[2923,61,1998,94],[2923,62,1998,95],[2924,12,1998,95],[2925,12,1999,12,"window"],[2925,18,1999,18],[2925,23,1999,23],[2925,27,1999,27],[2925,31,1999,31,"window"],[2925,37,1999,37],[2925,42,1999,42],[2925,47,1999,47],[2925,48,1999,48],[2925,51,1999,51],[2925,56,1999,56],[2925,57,1999,57],[2925,60,1999,60,"window"],[2925,66,1999,66],[2925,67,1999,67,"addEventListener"],[2925,83,1999,83],[2925,84,1999,84],[2925,102,1999,102],[2925,104,1999,104],[2925,108,1999,108],[2925,109,1999,109,"visibilityChangedCallback"],[2925,134,1999,134],[2925,135,1999,135],[2926,12,2000,12],[2927,12,2001,12],[2928,12,2002,12],[2928,18,2002,18],[2928,22,2002,22],[2928,23,2002,23,"_onVisibilityChanged"],[2928,43,2002,43],[2928,44,2002,44],[2928,48,2002,48],[2928,49,2002,49],[2928,50,2002,50],[2928,51,2002,51],[2929,10,2003,8],[2929,11,2003,9],[2929,12,2004,8],[2929,19,2004,15,"error"],[2929,24,2004,20],[2929,26,2004,22],[2930,12,2005,12,"console"],[2930,19,2005,19],[2930,20,2005,20,"error"],[2930,25,2005,25],[2930,26,2005,26],[2930,51,2005,51],[2930,53,2005,53,"error"],[2930,58,2005,58],[2930,59,2005,59],[2931,10,2006,8],[2932,8,2007,4],[2932,9,2007,5],[2933,8,2007,5],[2933,17,1988,10,"_handleVisibilityChange"],[2933,40,1988,33,"_handleVisibilityChange"],[2933,41,1988,33],[2934,10,1988,33],[2934,17,1988,33,"_handleVisibilityChange2"],[2934,41,1988,33],[2934,42,1988,33,"apply"],[2934,47,1988,33],[2934,54,1988,33,"arguments"],[2934,63,1988,33],[2935,8,1988,33],[2936,8,1988,33],[2936,15,1988,10,"_handleVisibilityChange"],[2936,38,1988,33],[2937,6,1988,33],[2938,6,2008,4],[2939,0,2009,0],[2940,0,2010,0],[2941,6,2008,4],[2942,4,2008,4],[2943,6,2008,4,"key"],[2943,9,2008,4],[2944,6,2008,4,"value"],[2944,11,2008,4],[2945,8,2008,4],[2945,12,2008,4,"_onVisibilityChanged2"],[2945,33,2008,4],[2945,36,2008,4,"_asyncToGenerator"],[2945,53,2008,4],[2945,54,2011,4],[2945,65,2011,31,"calledFromInitialize"],[2945,85,2011,51],[2945,87,2011,53],[2946,10,2011,53],[2946,14,2011,53,"_this24"],[2946,21,2011,53],[2947,10,2012,8],[2947,14,2012,14,"methodName"],[2947,24,2012,24],[2947,27,2012,27],[2947,52,2012,52,"calledFromInitialize"],[2947,72,2012,72],[2947,75,2012,75],[2948,10,2013,8],[2948,14,2013,12],[2948,15,2013,13,"_debug"],[2948,21,2013,19],[2948,22,2013,20,"methodName"],[2948,32,2013,30],[2948,34,2013,32],[2948,51,2013,49],[2948,53,2013,51,"document"],[2948,61,2013,59],[2948,62,2013,60,"visibilityState"],[2948,77,2013,75],[2948,78,2013,76],[2949,10,2014,8],[2949,14,2014,12,"document"],[2949,22,2014,20],[2949,23,2014,21,"visibilityState"],[2949,38,2014,36],[2949,43,2014,41],[2949,52,2014,50],[2949,54,2014,52],[2950,12,2015,12],[2950,16,2015,16],[2950,20,2015,20],[2950,21,2015,21,"autoRefreshToken"],[2950,37,2015,37],[2950,39,2015,39],[2951,14,2016,16],[2952,14,2017,16],[2953,14,2018,16],[2953,18,2018,20],[2953,19,2018,21,"_startAutoRefresh"],[2953,36,2018,38],[2953,37,2018,39],[2953,38,2018,40],[2954,12,2019,12],[2955,12,2020,12],[2955,16,2020,16],[2955,17,2020,17,"calledFromInitialize"],[2955,37,2020,37],[2955,39,2020,39],[2956,14,2021,16],[2957,14,2022,16],[2958,14,2023,16],[2959,14,2024,16],[2960,14,2025,16],[2960,20,2025,22],[2960,24,2025,26],[2960,25,2025,27,"initializePromise"],[2960,42,2025,44],[2961,14,2026,16],[2961,20,2026,22],[2961,24,2026,26],[2961,25,2026,27,"_acquireLock"],[2961,37,2026,39],[2961,38,2026,40],[2961,39,2026,41],[2961,40,2026,42],[2961,55,2026,42,"_asyncToGenerator"],[2961,72,2026,42],[2961,73,2026,44],[2961,86,2026,56],[2962,16,2027,20],[2962,20,2027,24,"document"],[2962,28,2027,32],[2962,29,2027,33,"visibilityState"],[2962,44,2027,48],[2962,49,2027,53],[2962,58,2027,62],[2962,60,2027,64],[2963,18,2028,24,"_this24"],[2963,25,2028,28],[2963,26,2028,29,"_debug"],[2963,32,2028,35],[2963,33,2028,36,"methodName"],[2963,43,2028,46],[2963,45,2028,48],[2963,151,2028,154],[2963,152,2028,155],[2964,18,2029,24],[2965,18,2030,24],[2966,16,2031,20],[2967,16,2032,20],[2968,16,2033,20],[2968,22,2033,26,"_this24"],[2968,29,2033,30],[2968,30,2033,31,"_recoverAndRefresh"],[2968,48,2033,49],[2968,49,2033,50],[2968,50,2033,51],[2969,14,2034,16],[2969,15,2034,17],[2969,17,2034,18],[2970,12,2035,12],[2971,10,2036,8],[2971,11,2036,9],[2971,17,2037,13],[2971,21,2037,17,"document"],[2971,29,2037,25],[2971,30,2037,26,"visibilityState"],[2971,45,2037,41],[2971,50,2037,46],[2971,58,2037,54],[2971,60,2037,56],[2972,12,2038,12],[2972,16,2038,16],[2972,20,2038,20],[2972,21,2038,21,"autoRefreshToken"],[2972,37,2038,37],[2972,39,2038,39],[2973,14,2039,16],[2973,18,2039,20],[2973,19,2039,21,"_stopAutoRefresh"],[2973,35,2039,37],[2973,36,2039,38],[2973,37,2039,39],[2974,12,2040,12],[2975,10,2041,8],[2976,8,2042,4],[2976,9,2042,5],[2977,8,2042,5],[2977,17,2011,10,"_onVisibilityChanged"],[2977,37,2011,30,"_onVisibilityChanged"],[2977,38,2011,30,"_x53"],[2977,42,2011,30],[2978,10,2011,30],[2978,17,2011,30,"_onVisibilityChanged2"],[2978,38,2011,30],[2978,39,2011,30,"apply"],[2978,44,2011,30],[2978,51,2011,30,"arguments"],[2978,60,2011,30],[2979,8,2011,30],[2980,8,2011,30],[2980,15,2011,10,"_onVisibilityChanged"],[2980,35,2011,30],[2981,6,2011,30],[2982,6,2043,4],[2983,0,2044,0],[2984,0,2045,0],[2985,0,2046,0],[2986,0,2047,0],[2987,0,2048,0],[2988,6,2043,4],[2989,4,2043,4],[2990,6,2043,4,"key"],[2990,9,2043,4],[2991,6,2043,4,"value"],[2991,11,2043,4],[2992,8,2043,4],[2992,12,2043,4,"_getUrlForProvider2"],[2992,31,2043,4],[2992,34,2043,4,"_asyncToGenerator"],[2992,51,2043,4],[2992,52,2049,4],[2992,63,2049,29,"url"],[2992,66,2049,32],[2992,68,2049,34,"provider"],[2992,76,2049,42],[2992,78,2049,44,"options"],[2992,85,2049,51],[2992,87,2049,53],[2993,10,2050,8],[2993,14,2050,14,"urlParams"],[2993,23,2050,23],[2993,26,2050,26],[2993,27,2050,27],[2993,39,2050,39,"encodeURIComponent"],[2993,57,2050,57],[2993,58,2050,58,"provider"],[2993,66,2050,66],[2993,67,2050,67],[2993,69,2050,69],[2993,70,2050,70],[2994,10,2051,8],[2994,14,2051,12,"options"],[2994,21,2051,19],[2994,26,2051,24],[2994,30,2051,28],[2994,34,2051,32,"options"],[2994,41,2051,39],[2994,46,2051,44],[2994,51,2051,49],[2994,52,2051,50],[2994,55,2051,53],[2994,60,2051,58],[2994,61,2051,59],[2994,64,2051,62,"options"],[2994,71,2051,69],[2994,72,2051,70,"redirectTo"],[2994,82,2051,80],[2994,84,2051,82],[2995,12,2052,12,"urlParams"],[2995,21,2052,21],[2995,22,2052,22,"push"],[2995,26,2052,26],[2995,27,2052,27],[2995,42,2052,42,"encodeURIComponent"],[2995,60,2052,60],[2995,61,2052,61,"options"],[2995,68,2052,68],[2995,69,2052,69,"redirectTo"],[2995,79,2052,79],[2995,80,2052,80],[2995,82,2052,82],[2995,83,2052,83],[2996,10,2053,8],[2997,10,2054,8],[2997,14,2054,12,"options"],[2997,21,2054,19],[2997,26,2054,24],[2997,30,2054,28],[2997,34,2054,32,"options"],[2997,41,2054,39],[2997,46,2054,44],[2997,51,2054,49],[2997,52,2054,50],[2997,55,2054,53],[2997,60,2054,58],[2997,61,2054,59],[2997,64,2054,62,"options"],[2997,71,2054,69],[2997,72,2054,70,"scopes"],[2997,78,2054,76],[2997,80,2054,78],[2998,12,2055,12,"urlParams"],[2998,21,2055,21],[2998,22,2055,22,"push"],[2998,26,2055,26],[2998,27,2055,27],[2998,37,2055,37,"encodeURIComponent"],[2998,55,2055,55],[2998,56,2055,56,"options"],[2998,63,2055,63],[2998,64,2055,64,"scopes"],[2998,70,2055,70],[2998,71,2055,71],[2998,73,2055,73],[2998,74,2055,74],[2999,10,2056,8],[3000,10,2057,8],[3000,14,2057,12],[3000,18,2057,16],[3000,19,2057,17,"flowType"],[3000,27,2057,25],[3000,32,2057,30],[3000,38,2057,36],[3000,40,2057,38],[3001,12,2058,12],[3001,16,2058,12,"_yield18"],[3001,24,2058,12],[3001,33,2058,63],[3001,34,2058,64],[3001,35,2058,65],[3001,37,2058,67,"helpers_1"],[3001,46,2058,76],[3001,47,2058,77,"getCodeChallengeAndMethod"],[3001,72,2058,102],[3001,74,2058,104],[3001,78,2058,108],[3001,79,2058,109,"storage"],[3001,86,2058,116],[3001,88,2058,118],[3001,92,2058,122],[3001,93,2058,123,"storageKey"],[3001,103,2058,133],[3001,104,2058,134],[3002,14,2058,134,"_yield19"],[3002,22,2058,134],[3002,25,2058,134,"_slicedToArray"],[3002,39,2058,134],[3002,40,2058,134,"_yield18"],[3002,48,2058,134],[3003,14,2058,19,"codeChallenge"],[3003,27,2058,32],[3003,30,2058,32,"_yield19"],[3003,38,2058,32],[3004,14,2058,34,"codeChallengeMethod"],[3004,33,2058,53],[3004,36,2058,53,"_yield19"],[3004,44,2058,53],[3005,12,2059,12],[3005,16,2059,18,"flowParams"],[3005,26,2059,28],[3005,29,2059,31],[3005,33,2059,35,"URLSearchParams"],[3005,48,2059,50],[3005,49,2059,51],[3006,14,2060,16,"code_challenge"],[3006,28,2060,30],[3006,30,2060,32],[3006,33,2060,35,"encodeURIComponent"],[3006,51,2060,53],[3006,52,2060,54,"codeChallenge"],[3006,65,2060,67],[3006,66,2060,68],[3006,68,2060,70],[3007,14,2061,16,"code_challenge_method"],[3007,35,2061,37],[3007,37,2061,39],[3007,40,2061,42,"encodeURIComponent"],[3007,58,2061,60],[3007,59,2061,61,"codeChallengeMethod"],[3007,78,2061,80],[3007,79,2061,81],[3008,12,2062,12],[3008,13,2062,13],[3008,14,2062,14],[3009,12,2063,12,"urlParams"],[3009,21,2063,21],[3009,22,2063,22,"push"],[3009,26,2063,26],[3009,27,2063,27,"flowParams"],[3009,37,2063,37],[3009,38,2063,38,"toString"],[3009,46,2063,46],[3009,47,2063,47],[3009,48,2063,48],[3009,49,2063,49],[3010,10,2064,8],[3011,10,2065,8],[3011,14,2065,12,"options"],[3011,21,2065,19],[3011,26,2065,24],[3011,30,2065,28],[3011,34,2065,32,"options"],[3011,41,2065,39],[3011,46,2065,44],[3011,51,2065,49],[3011,52,2065,50],[3011,55,2065,53],[3011,60,2065,58],[3011,61,2065,59],[3011,64,2065,62,"options"],[3011,71,2065,69],[3011,72,2065,70,"queryParams"],[3011,83,2065,81],[3011,85,2065,83],[3012,12,2066,12],[3012,16,2066,18,"query"],[3012,21,2066,23],[3012,24,2066,26],[3012,28,2066,30,"URLSearchParams"],[3012,43,2066,45],[3012,44,2066,46,"options"],[3012,51,2066,53],[3012,52,2066,54,"queryParams"],[3012,63,2066,65],[3012,64,2066,66],[3013,12,2067,12,"urlParams"],[3013,21,2067,21],[3013,22,2067,22,"push"],[3013,26,2067,26],[3013,27,2067,27,"query"],[3013,32,2067,32],[3013,33,2067,33,"toString"],[3013,41,2067,41],[3013,42,2067,42],[3013,43,2067,43],[3013,44,2067,44],[3014,10,2068,8],[3015,10,2069,8],[3015,14,2069,12,"options"],[3015,21,2069,19],[3015,26,2069,24],[3015,30,2069,28],[3015,34,2069,32,"options"],[3015,41,2069,39],[3015,46,2069,44],[3015,51,2069,49],[3015,52,2069,50],[3015,55,2069,53],[3015,60,2069,58],[3015,61,2069,59],[3015,64,2069,62,"options"],[3015,71,2069,69],[3015,72,2069,70,"skipBrowserRedirect"],[3015,91,2069,89],[3015,93,2069,91],[3016,12,2070,12,"urlParams"],[3016,21,2070,21],[3016,22,2070,22,"push"],[3016,26,2070,26],[3016,27,2070,27],[3016,49,2070,49,"options"],[3016,56,2070,56],[3016,57,2070,57,"skipBrowserRedirect"],[3016,76,2070,76],[3016,78,2070,78],[3016,79,2070,79],[3017,10,2071,8],[3018,10,2072,8],[3018,17,2072,15],[3018,20,2072,18,"url"],[3018,23,2072,21],[3018,27,2072,25,"urlParams"],[3018,36,2072,34],[3018,37,2072,35,"join"],[3018,41,2072,39],[3018,42,2072,40],[3018,45,2072,43],[3018,46,2072,44],[3018,48,2072,46],[3019,8,2073,4],[3019,9,2073,5],[3020,8,2073,5],[3020,17,2049,10,"_getUrlForProvider"],[3020,35,2049,28,"_getUrlForProvider"],[3020,36,2049,28,"_x54"],[3020,40,2049,28],[3020,42,2049,28,"_x55"],[3020,46,2049,28],[3020,48,2049,28,"_x56"],[3020,52,2049,28],[3021,10,2049,28],[3021,17,2049,28,"_getUrlForProvider2"],[3021,36,2049,28],[3021,37,2049,28,"apply"],[3021,42,2049,28],[3021,49,2049,28,"arguments"],[3021,58,2049,28],[3022,8,2049,28],[3023,8,2049,28],[3023,15,2049,10,"_getUrlForProvider"],[3023,33,2049,28],[3024,6,2049,28],[3025,4,2049,28],[3026,6,2049,28,"key"],[3026,9,2049,28],[3027,6,2049,28,"value"],[3027,11,2049,28],[3028,8,2049,28],[3028,12,2049,28,"_unenroll2"],[3028,22,2049,28],[3028,25,2049,28,"_asyncToGenerator"],[3028,42,2049,28],[3028,43,2074,4],[3028,54,2074,20,"params"],[3028,60,2074,26],[3028,62,2074,28],[3029,10,2074,28],[3029,14,2074,28,"_this25"],[3029,21,2074,28],[3030,10,2075,8],[3030,14,2075,12],[3031,12,2076,12],[3031,25,2076,25],[3031,29,2076,29],[3031,30,2076,30,"_useSession"],[3031,41,2076,41],[3032,14,2076,41],[3032,18,2076,41,"_ref35"],[3032,24,2076,41],[3032,27,2076,41,"_asyncToGenerator"],[3032,44,2076,41],[3032,45,2076,42],[3032,56,2076,49,"result"],[3032,62,2076,55],[3032,64,2076,60],[3033,16,2077,16],[3033,20,2077,20,"_a"],[3033,22,2077,22],[3034,16,2078,16],[3034,20,2078,30,"sessionData"],[3034,31,2078,41],[3034,34,2078,67,"result"],[3034,40,2078,73],[3034,41,2078,24,"data"],[3034,45,2078,28],[3035,18,2078,50,"sessionError"],[3035,30,2078,62],[3035,33,2078,67,"result"],[3035,39,2078,73],[3035,40,2078,43,"error"],[3035,45,2078,48],[3036,16,2079,16],[3036,20,2079,20,"sessionError"],[3036,32,2079,32],[3036,34,2079,34],[3037,18,2080,20],[3037,25,2080,27],[3038,20,2080,29,"data"],[3038,24,2080,33],[3038,26,2080,35],[3038,30,2080,39],[3039,20,2080,41,"error"],[3039,25,2080,46],[3039,27,2080,48,"sessionError"],[3040,18,2080,61],[3040,19,2080,62],[3041,16,2081,16],[3042,16,2082,16],[3042,29,2082,29],[3042,30,2082,30],[3042,31,2082,31],[3042,33,2082,33,"fetch_1"],[3042,40,2082,40],[3042,41,2082,41,"_request"],[3042,49,2082,49],[3042,51,2082,51,"_this25"],[3042,58,2082,55],[3042,59,2082,56,"fetch"],[3042,64,2082,61],[3042,66,2082,63],[3042,74,2082,71],[3042,76,2082,73],[3042,79,2082,76,"_this25"],[3042,86,2082,80],[3042,87,2082,81,"url"],[3042,90,2082,84],[3042,102,2082,96,"params"],[3042,108,2082,102],[3042,109,2082,103,"factorId"],[3042,117,2082,111],[3042,119,2082,113],[3042,121,2082,115],[3043,18,2083,20,"headers"],[3043,25,2083,27],[3043,27,2083,29,"_this25"],[3043,34,2083,33],[3043,35,2083,34,"headers"],[3043,42,2083,41],[3044,18,2084,20,"jwt"],[3044,21,2084,23],[3044,23,2084,25],[3044,24,2084,26,"_a"],[3044,26,2084,28],[3044,29,2084,31,"sessionData"],[3044,40,2084,42],[3044,45,2084,47],[3044,49,2084,51],[3044,53,2084,55,"sessionData"],[3044,64,2084,66],[3044,69,2084,71],[3044,74,2084,76],[3044,75,2084,77],[3044,78,2084,80],[3044,83,2084,85],[3044,84,2084,86],[3044,87,2084,89,"sessionData"],[3044,98,2084,100],[3044,99,2084,101,"session"],[3044,106,2084,108],[3044,112,2084,114],[3044,116,2084,118],[3044,120,2084,122,"_a"],[3044,122,2084,124],[3044,127,2084,129],[3044,132,2084,134],[3044,133,2084,135],[3044,136,2084,138],[3044,141,2084,143],[3044,142,2084,144],[3044,145,2084,147,"_a"],[3044,147,2084,149],[3044,148,2084,150,"access_token"],[3045,16,2085,16],[3045,17,2085,17],[3045,18,2085,18],[3046,14,2086,12],[3046,15,2086,13],[3047,14,2086,13],[3047,31,2086,13,"_x58"],[3047,35,2086,13],[3048,16,2086,13],[3048,23,2086,13,"_ref35"],[3048,29,2086,13],[3048,30,2086,13,"apply"],[3048,35,2086,13],[3048,42,2086,13,"arguments"],[3048,51,2086,13],[3049,14,2086,13],[3050,12,2086,13],[3050,16,2086,14],[3051,10,2087,8],[3051,11,2087,9],[3051,12,2088,8],[3051,19,2088,15,"error"],[3051,24,2088,20],[3051,26,2088,22],[3052,12,2089,12],[3052,16,2089,16],[3052,17,2089,17],[3052,18,2089,18],[3052,20,2089,20,"errors_1"],[3052,28,2089,28],[3052,29,2089,29,"isAuthError"],[3052,40,2089,40],[3052,42,2089,42,"error"],[3052,47,2089,47],[3052,48,2089,48],[3052,50,2089,50],[3053,14,2090,16],[3053,21,2090,23],[3054,16,2090,25,"data"],[3054,20,2090,29],[3054,22,2090,31],[3054,26,2090,35],[3055,16,2090,37,"error"],[3056,14,2090,43],[3056,15,2090,44],[3057,12,2091,12],[3058,12,2092,12],[3058,18,2092,18,"error"],[3058,23,2092,23],[3059,10,2093,8],[3060,8,2094,4],[3060,9,2094,5],[3061,8,2094,5],[3061,17,2074,10,"_unenroll"],[3061,26,2074,19,"_unenroll"],[3061,27,2074,19,"_x57"],[3061,31,2074,19],[3062,10,2074,19],[3062,17,2074,19,"_unenroll2"],[3062,27,2074,19],[3062,28,2074,19,"apply"],[3062,33,2074,19],[3062,40,2074,19,"arguments"],[3062,49,2074,19],[3063,8,2074,19],[3064,8,2074,19],[3064,15,2074,10,"_unenroll"],[3064,24,2074,19],[3065,6,2074,19],[3066,4,2074,19],[3067,6,2074,19,"key"],[3067,9,2074,19],[3068,6,2074,19,"value"],[3068,11,2074,19],[3069,8,2074,19],[3069,12,2074,19,"_enroll2"],[3069,20,2074,19],[3069,23,2074,19,"_asyncToGenerator"],[3069,40,2074,19],[3069,41,2095,4],[3069,52,2095,18,"params"],[3069,58,2095,24],[3069,60,2095,26],[3070,10,2095,26],[3070,14,2095,26,"_this26"],[3070,21,2095,26],[3071,10,2096,8],[3071,14,2096,12],[3072,12,2097,12],[3072,25,2097,25],[3072,29,2097,29],[3072,30,2097,30,"_useSession"],[3072,41,2097,41],[3073,14,2097,41],[3073,18,2097,41,"_ref36"],[3073,24,2097,41],[3073,27,2097,41,"_asyncToGenerator"],[3073,44,2097,41],[3073,45,2097,42],[3073,56,2097,49,"result"],[3073,62,2097,55],[3073,64,2097,60],[3074,16,2098,16],[3074,20,2098,20,"_a"],[3074,22,2098,22],[3074,24,2098,24,"_b"],[3074,26,2098,26],[3075,16,2099,16],[3075,20,2099,30,"sessionData"],[3075,31,2099,41],[3075,34,2099,67,"result"],[3075,40,2099,73],[3075,41,2099,24,"data"],[3075,45,2099,28],[3076,18,2099,50,"sessionError"],[3076,30,2099,62],[3076,33,2099,67,"result"],[3076,39,2099,73],[3076,40,2099,43,"error"],[3076,45,2099,48],[3077,16,2100,16],[3077,20,2100,20,"sessionError"],[3077,32,2100,32],[3077,34,2100,34],[3078,18,2101,20],[3078,25,2101,27],[3079,20,2101,29,"data"],[3079,24,2101,33],[3079,26,2101,35],[3079,30,2101,39],[3080,20,2101,41,"error"],[3080,25,2101,46],[3080,27,2101,48,"sessionError"],[3081,18,2101,61],[3081,19,2101,62],[3082,16,2102,16],[3083,16,2103,16],[3083,20,2103,22,"body"],[3083,24,2103,26],[3083,27,2103,29,"Object"],[3083,33,2103,35],[3083,34,2103,36,"assign"],[3083,40,2103,42],[3083,41,2103,43],[3084,18,2103,45,"friendly_name"],[3084,31,2103,58],[3084,33,2103,60,"params"],[3084,39,2103,66],[3084,40,2103,67,"friendlyName"],[3084,52,2103,79],[3085,18,2103,81,"factor_type"],[3085,29,2103,92],[3085,31,2103,94,"params"],[3085,37,2103,100],[3085,38,2103,101,"factorType"],[3086,16,2103,112],[3086,17,2103,113],[3086,19,2103,116,"params"],[3086,25,2103,122],[3086,26,2103,123,"factorType"],[3086,36,2103,133],[3086,41,2103,138],[3086,48,2103,145],[3086,51,2103,148],[3087,18,2103,150,"phone"],[3087,23,2103,155],[3087,25,2103,157,"params"],[3087,31,2103,163],[3087,32,2103,164,"phone"],[3088,16,2103,170],[3088,17,2103,171],[3088,20,2103,174],[3089,18,2103,176,"issuer"],[3089,24,2103,182],[3089,26,2103,184,"params"],[3089,32,2103,190],[3089,33,2103,191,"issuer"],[3090,16,2103,198],[3090,17,2103,200],[3090,18,2103,201],[3091,16,2104,16],[3091,20,2104,16,"_yield20"],[3091,28,2104,16],[3091,37,2104,46],[3091,38,2104,47],[3091,39,2104,48],[3091,41,2104,50,"fetch_1"],[3091,48,2104,57],[3091,49,2104,58,"_request"],[3091,57,2104,66],[3091,59,2104,68,"_this26"],[3091,66,2104,72],[3091,67,2104,73,"fetch"],[3091,72,2104,78],[3091,74,2104,80],[3091,80,2104,86],[3091,82,2104,88],[3091,85,2104,91,"_this26"],[3091,92,2104,95],[3091,93,2104,96,"url"],[3091,96,2104,99],[3091,106,2104,109],[3091,108,2104,111],[3092,20,2105,20,"body"],[3092,24,2105,24],[3093,20,2106,20,"headers"],[3093,27,2106,27],[3093,29,2106,29,"_this26"],[3093,36,2106,33],[3093,37,2106,34,"headers"],[3093,44,2106,41],[3094,20,2107,20,"jwt"],[3094,23,2107,23],[3094,25,2107,25],[3094,26,2107,26,"_a"],[3094,28,2107,28],[3094,31,2107,31,"sessionData"],[3094,42,2107,42],[3094,47,2107,47],[3094,51,2107,51],[3094,55,2107,55,"sessionData"],[3094,66,2107,66],[3094,71,2107,71],[3094,76,2107,76],[3094,77,2107,77],[3094,80,2107,80],[3094,85,2107,85],[3094,86,2107,86],[3094,89,2107,89,"sessionData"],[3094,100,2107,100],[3094,101,2107,101,"session"],[3094,108,2107,108],[3094,114,2107,114],[3094,118,2107,118],[3094,122,2107,122,"_a"],[3094,124,2107,124],[3094,129,2107,129],[3094,134,2107,134],[3094,135,2107,135],[3094,138,2107,138],[3094,143,2107,143],[3094,144,2107,144],[3094,147,2107,147,"_a"],[3094,149,2107,149],[3094,150,2107,150,"access_token"],[3095,18,2108,16],[3095,19,2108,17],[3095,20,2108,18],[3096,18,2104,24,"data"],[3096,22,2104,28],[3096,25,2104,28,"_yield20"],[3096,33,2104,28],[3096,34,2104,24,"data"],[3096,38,2104,28],[3097,18,2104,30,"error"],[3097,23,2104,35],[3097,26,2104,35,"_yield20"],[3097,34,2104,35],[3097,35,2104,30,"error"],[3097,40,2104,35],[3098,16,2109,16],[3098,20,2109,20,"error"],[3098,25,2109,25],[3098,27,2109,27],[3099,18,2110,20],[3099,25,2110,27],[3100,20,2110,29,"data"],[3100,24,2110,33],[3100,26,2110,35],[3100,30,2110,39],[3101,20,2110,41,"error"],[3102,18,2110,47],[3102,19,2110,48],[3103,16,2111,16],[3104,16,2112,16],[3104,20,2112,20,"params"],[3104,26,2112,26],[3104,27,2112,27,"factorType"],[3104,37,2112,37],[3104,42,2112,42],[3104,48,2112,48],[3104,53,2112,53],[3104,54,2112,54,"_b"],[3104,56,2112,56],[3104,59,2112,59,"data"],[3104,63,2112,63],[3104,68,2112,68],[3104,72,2112,72],[3104,76,2112,76,"data"],[3104,80,2112,80],[3104,85,2112,85],[3104,90,2112,90],[3104,91,2112,91],[3104,94,2112,94],[3104,99,2112,99],[3104,100,2112,100],[3104,103,2112,103,"data"],[3104,107,2112,107],[3104,108,2112,108,"totp"],[3104,112,2112,112],[3104,118,2112,118],[3104,122,2112,122],[3104,126,2112,126,"_b"],[3104,128,2112,128],[3104,133,2112,133],[3104,138,2112,138],[3104,139,2112,139],[3104,142,2112,142],[3104,147,2112,147],[3104,148,2112,148],[3104,151,2112,151,"_b"],[3104,153,2112,153],[3104,154,2112,154,"qr_code"],[3104,161,2112,161],[3104,162,2112,162],[3104,164,2112,164],[3105,18,2113,20,"data"],[3105,22,2113,24],[3105,23,2113,25,"totp"],[3105,27,2113,29],[3105,28,2113,30,"qr_code"],[3105,35,2113,37],[3105,38,2113,40],[3105,66,2113,68,"data"],[3105,70,2113,72],[3105,71,2113,73,"totp"],[3105,75,2113,77],[3105,76,2113,78,"qr_code"],[3105,83,2113,85],[3105,85,2113,87],[3106,16,2114,16],[3107,16,2115,16],[3107,23,2115,23],[3108,18,2115,25,"data"],[3108,22,2115,29],[3109,18,2115,31,"error"],[3109,23,2115,36],[3109,25,2115,38],[3110,16,2115,43],[3110,17,2115,44],[3111,14,2116,12],[3111,15,2116,13],[3112,14,2116,13],[3112,31,2116,13,"_x60"],[3112,35,2116,13],[3113,16,2116,13],[3113,23,2116,13,"_ref36"],[3113,29,2116,13],[3113,30,2116,13,"apply"],[3113,35,2116,13],[3113,42,2116,13,"arguments"],[3113,51,2116,13],[3114,14,2116,13],[3115,12,2116,13],[3115,16,2116,14],[3116,10,2117,8],[3116,11,2117,9],[3116,12,2118,8],[3116,19,2118,15,"error"],[3116,24,2118,20],[3116,26,2118,22],[3117,12,2119,12],[3117,16,2119,16],[3117,17,2119,17],[3117,18,2119,18],[3117,20,2119,20,"errors_1"],[3117,28,2119,28],[3117,29,2119,29,"isAuthError"],[3117,40,2119,40],[3117,42,2119,42,"error"],[3117,47,2119,47],[3117,48,2119,48],[3117,50,2119,50],[3118,14,2120,16],[3118,21,2120,23],[3119,16,2120,25,"data"],[3119,20,2120,29],[3119,22,2120,31],[3119,26,2120,35],[3120,16,2120,37,"error"],[3121,14,2120,43],[3121,15,2120,44],[3122,12,2121,12],[3123,12,2122,12],[3123,18,2122,18,"error"],[3123,23,2122,23],[3124,10,2123,8],[3125,8,2124,4],[3125,9,2124,5],[3126,8,2124,5],[3126,17,2095,10,"_enroll"],[3126,24,2095,17,"_enroll"],[3126,25,2095,17,"_x59"],[3126,29,2095,17],[3127,10,2095,17],[3127,17,2095,17,"_enroll2"],[3127,25,2095,17],[3127,26,2095,17,"apply"],[3127,31,2095,17],[3127,38,2095,17,"arguments"],[3127,47,2095,17],[3128,8,2095,17],[3129,8,2095,17],[3129,15,2095,10,"_enroll"],[3129,22,2095,17],[3130,6,2095,17],[3131,6,2125,4],[3132,0,2126,0],[3133,0,2127,0],[3134,4,2125,4],[3135,6,2125,4,"key"],[3135,9,2125,4],[3136,6,2125,4,"value"],[3136,11,2125,4],[3137,8,2125,4],[3137,12,2125,4,"_verify2"],[3137,20,2125,4],[3137,23,2125,4,"_asyncToGenerator"],[3137,40,2125,4],[3137,41,2128,4],[3137,52,2128,18,"params"],[3137,58,2128,24],[3137,60,2128,26],[3138,10,2128,26],[3138,14,2128,26,"_this27"],[3138,21,2128,26],[3139,10,2129,8],[3139,17,2129,15],[3139,21,2129,19],[3139,22,2129,20,"_acquireLock"],[3139,34,2129,32],[3139,35,2129,33],[3139,36,2129,34],[3139,37,2129,35],[3139,52,2129,35,"_asyncToGenerator"],[3139,69,2129,35],[3139,70,2129,37],[3139,83,2129,49],[3140,12,2130,12],[3140,16,2130,16],[3141,14,2131,16],[3141,27,2131,29,"_this27"],[3141,34,2131,33],[3141,35,2131,34,"_useSession"],[3141,46,2131,45],[3142,16,2131,45],[3142,20,2131,45,"_ref38"],[3142,26,2131,45],[3142,29,2131,45,"_asyncToGenerator"],[3142,46,2131,45],[3142,47,2131,46],[3142,58,2131,53,"result"],[3142,64,2131,59],[3142,66,2131,64],[3143,18,2132,20],[3143,22,2132,24,"_a"],[3143,24,2132,26],[3144,18,2133,20],[3144,22,2133,34,"sessionData"],[3144,33,2133,45],[3144,36,2133,71,"result"],[3144,42,2133,77],[3144,43,2133,28,"data"],[3144,47,2133,32],[3145,20,2133,54,"sessionError"],[3145,32,2133,66],[3145,35,2133,71,"result"],[3145,41,2133,77],[3145,42,2133,47,"error"],[3145,47,2133,52],[3146,18,2134,20],[3146,22,2134,24,"sessionError"],[3146,34,2134,36],[3146,36,2134,38],[3147,20,2135,24],[3147,27,2135,31],[3148,22,2135,33,"data"],[3148,26,2135,37],[3148,28,2135,39],[3148,32,2135,43],[3149,22,2135,45,"error"],[3149,27,2135,50],[3149,29,2135,52,"sessionError"],[3150,20,2135,65],[3150,21,2135,66],[3151,18,2136,20],[3152,18,2137,20],[3152,22,2137,20,"_yield21"],[3152,30,2137,20],[3152,39,2137,50],[3152,40,2137,51],[3152,41,2137,52],[3152,43,2137,54,"fetch_1"],[3152,50,2137,61],[3152,51,2137,62,"_request"],[3152,59,2137,70],[3152,61,2137,72,"_this27"],[3152,68,2137,76],[3152,69,2137,77,"fetch"],[3152,74,2137,82],[3152,76,2137,84],[3152,82,2137,90],[3152,84,2137,92],[3152,87,2137,95,"_this27"],[3152,94,2137,99],[3152,95,2137,100,"url"],[3152,98,2137,103],[3152,110,2137,115,"params"],[3152,116,2137,121],[3152,117,2137,122,"factorId"],[3152,125,2137,130],[3152,134,2137,139],[3152,136,2137,141],[3153,22,2138,24,"body"],[3153,26,2138,28],[3153,28,2138,30],[3154,24,2138,32,"code"],[3154,28,2138,36],[3154,30,2138,38,"params"],[3154,36,2138,44],[3154,37,2138,45,"code"],[3154,41,2138,49],[3155,24,2138,51,"challenge_id"],[3155,36,2138,63],[3155,38,2138,65,"params"],[3155,44,2138,71],[3155,45,2138,72,"challengeId"],[3156,22,2138,84],[3156,23,2138,85],[3157,22,2139,24,"headers"],[3157,29,2139,31],[3157,31,2139,33,"_this27"],[3157,38,2139,37],[3157,39,2139,38,"headers"],[3157,46,2139,45],[3158,22,2140,24,"jwt"],[3158,25,2140,27],[3158,27,2140,29],[3158,28,2140,30,"_a"],[3158,30,2140,32],[3158,33,2140,35,"sessionData"],[3158,44,2140,46],[3158,49,2140,51],[3158,53,2140,55],[3158,57,2140,59,"sessionData"],[3158,68,2140,70],[3158,73,2140,75],[3158,78,2140,80],[3158,79,2140,81],[3158,82,2140,84],[3158,87,2140,89],[3158,88,2140,90],[3158,91,2140,93,"sessionData"],[3158,102,2140,104],[3158,103,2140,105,"session"],[3158,110,2140,112],[3158,116,2140,118],[3158,120,2140,122],[3158,124,2140,126,"_a"],[3158,126,2140,128],[3158,131,2140,133],[3158,136,2140,138],[3158,137,2140,139],[3158,140,2140,142],[3158,145,2140,147],[3158,146,2140,148],[3158,149,2140,151,"_a"],[3158,151,2140,153],[3158,152,2140,154,"access_token"],[3159,20,2141,20],[3159,21,2141,21],[3159,22,2141,22],[3160,20,2137,28,"data"],[3160,24,2137,32],[3160,27,2137,32,"_yield21"],[3160,35,2137,32],[3160,36,2137,28,"data"],[3160,40,2137,32],[3161,20,2137,34,"error"],[3161,25,2137,39],[3161,28,2137,39,"_yield21"],[3161,36,2137,39],[3161,37,2137,34,"error"],[3161,42,2137,39],[3162,18,2142,20],[3162,22,2142,24,"error"],[3162,27,2142,29],[3162,29,2142,31],[3163,20,2143,24],[3163,27,2143,31],[3164,22,2143,33,"data"],[3164,26,2143,37],[3164,28,2143,39],[3164,32,2143,43],[3165,22,2143,45,"error"],[3166,20,2143,51],[3166,21,2143,52],[3167,18,2144,20],[3168,18,2145,20],[3168,24,2145,26,"_this27"],[3168,31,2145,30],[3168,32,2145,31,"_saveSession"],[3168,44,2145,43],[3168,45,2145,44,"Object"],[3168,51,2145,50],[3168,52,2145,51,"assign"],[3168,58,2145,57],[3168,59,2145,58],[3169,20,2145,60,"expires_at"],[3169,30,2145,70],[3169,32,2145,72,"Math"],[3169,36,2145,76],[3169,37,2145,77,"round"],[3169,42,2145,82],[3169,43,2145,83,"Date"],[3169,47,2145,87],[3169,48,2145,88,"now"],[3169,51,2145,91],[3169,52,2145,92],[3169,53,2145,93],[3169,56,2145,96],[3169,60,2145,100],[3169,61,2145,101],[3169,64,2145,104,"data"],[3169,68,2145,108],[3169,69,2145,109,"expires_in"],[3170,18,2145,120],[3170,19,2145,121],[3170,21,2145,123,"data"],[3170,25,2145,127],[3170,26,2145,128],[3170,27,2145,129],[3171,18,2146,20],[3171,24,2146,26,"_this27"],[3171,31,2146,30],[3171,32,2146,31,"_notifyAllSubscribers"],[3171,53,2146,52],[3171,54,2146,53],[3171,78,2146,77],[3171,80,2146,79,"data"],[3171,84,2146,83],[3171,85,2146,84],[3172,18,2147,20],[3172,25,2147,27],[3173,20,2147,29,"data"],[3173,24,2147,33],[3174,20,2147,35,"error"],[3175,18,2147,41],[3175,19,2147,42],[3176,16,2148,16],[3176,17,2148,17],[3177,16,2148,17],[3177,33,2148,17,"_x62"],[3177,37,2148,17],[3178,18,2148,17],[3178,25,2148,17,"_ref38"],[3178,31,2148,17],[3178,32,2148,17,"apply"],[3178,37,2148,17],[3178,44,2148,17,"arguments"],[3178,53,2148,17],[3179,16,2148,17],[3180,14,2148,17],[3180,18,2148,18],[3181,12,2149,12],[3181,13,2149,13],[3181,14,2150,12],[3181,21,2150,19,"error"],[3181,26,2150,24],[3181,28,2150,26],[3182,14,2151,16],[3182,18,2151,20],[3182,19,2151,21],[3182,20,2151,22],[3182,22,2151,24,"errors_1"],[3182,30,2151,32],[3182,31,2151,33,"isAuthError"],[3182,42,2151,44],[3182,44,2151,46,"error"],[3182,49,2151,51],[3182,50,2151,52],[3182,52,2151,54],[3183,16,2152,20],[3183,23,2152,27],[3184,18,2152,29,"data"],[3184,22,2152,33],[3184,24,2152,35],[3184,28,2152,39],[3185,18,2152,41,"error"],[3186,16,2152,47],[3186,17,2152,48],[3187,14,2153,16],[3188,14,2154,16],[3188,20,2154,22,"error"],[3188,25,2154,27],[3189,12,2155,12],[3190,10,2156,8],[3190,11,2156,9],[3190,13,2156,10],[3191,8,2157,4],[3191,9,2157,5],[3192,8,2157,5],[3192,17,2128,10,"_verify"],[3192,24,2128,17,"_verify"],[3192,25,2128,17,"_x61"],[3192,29,2128,17],[3193,10,2128,17],[3193,17,2128,17,"_verify2"],[3193,25,2128,17],[3193,26,2128,17,"apply"],[3193,31,2128,17],[3193,38,2128,17,"arguments"],[3193,47,2128,17],[3194,8,2128,17],[3195,8,2128,17],[3195,15,2128,10,"_verify"],[3195,22,2128,17],[3196,6,2128,17],[3197,6,2158,4],[3198,0,2159,0],[3199,0,2160,0],[3200,6,2158,4],[3201,4,2158,4],[3202,6,2158,4,"key"],[3202,9,2158,4],[3203,6,2158,4,"value"],[3203,11,2158,4],[3204,8,2158,4],[3204,12,2158,4,"_challenge2"],[3204,23,2158,4],[3204,26,2158,4,"_asyncToGenerator"],[3204,43,2158,4],[3204,44,2161,4],[3204,55,2161,21,"params"],[3204,61,2161,27],[3204,63,2161,29],[3205,10,2161,29],[3205,14,2161,29,"_this28"],[3205,21,2161,29],[3206,10,2162,8],[3206,17,2162,15],[3206,21,2162,19],[3206,22,2162,20,"_acquireLock"],[3206,34,2162,32],[3206,35,2162,33],[3206,36,2162,34],[3206,37,2162,35],[3206,52,2162,35,"_asyncToGenerator"],[3206,69,2162,35],[3206,70,2162,37],[3206,83,2162,49],[3207,12,2163,12],[3207,16,2163,16],[3208,14,2164,16],[3208,27,2164,29,"_this28"],[3208,34,2164,33],[3208,35,2164,34,"_useSession"],[3208,46,2164,45],[3209,16,2164,45],[3209,20,2164,45,"_ref40"],[3209,26,2164,45],[3209,29,2164,45,"_asyncToGenerator"],[3209,46,2164,45],[3209,47,2164,46],[3209,58,2164,53,"result"],[3209,64,2164,59],[3209,66,2164,64],[3210,18,2165,20],[3210,22,2165,24,"_a"],[3210,24,2165,26],[3211,18,2166,20],[3211,22,2166,34,"sessionData"],[3211,33,2166,45],[3211,36,2166,71,"result"],[3211,42,2166,77],[3211,43,2166,28,"data"],[3211,47,2166,32],[3212,20,2166,54,"sessionError"],[3212,32,2166,66],[3212,35,2166,71,"result"],[3212,41,2166,77],[3212,42,2166,47,"error"],[3212,47,2166,52],[3213,18,2167,20],[3213,22,2167,24,"sessionError"],[3213,34,2167,36],[3213,36,2167,38],[3214,20,2168,24],[3214,27,2168,31],[3215,22,2168,33,"data"],[3215,26,2168,37],[3215,28,2168,39],[3215,32,2168,43],[3216,22,2168,45,"error"],[3216,27,2168,50],[3216,29,2168,52,"sessionError"],[3217,20,2168,65],[3217,21,2168,66],[3218,18,2169,20],[3219,18,2170,20],[3219,31,2170,33],[3219,32,2170,34],[3219,33,2170,35],[3219,35,2170,37,"fetch_1"],[3219,42,2170,44],[3219,43,2170,45,"_request"],[3219,51,2170,53],[3219,53,2170,55,"_this28"],[3219,60,2170,59],[3219,61,2170,60,"fetch"],[3219,66,2170,65],[3219,68,2170,67],[3219,74,2170,73],[3219,76,2170,75],[3219,79,2170,78,"_this28"],[3219,86,2170,82],[3219,87,2170,83,"url"],[3219,90,2170,86],[3219,102,2170,98,"params"],[3219,108,2170,104],[3219,109,2170,105,"factorId"],[3219,117,2170,113],[3219,129,2170,125],[3219,131,2170,127],[3220,20,2171,24,"body"],[3220,24,2171,28],[3220,26,2171,30],[3221,22,2171,32,"channel"],[3221,29,2171,39],[3221,31,2171,41,"params"],[3221,37,2171,47],[3221,38,2171,48,"channel"],[3222,20,2171,56],[3222,21,2171,57],[3223,20,2172,24,"headers"],[3223,27,2172,31],[3223,29,2172,33,"_this28"],[3223,36,2172,37],[3223,37,2172,38,"headers"],[3223,44,2172,45],[3224,20,2173,24,"jwt"],[3224,23,2173,27],[3224,25,2173,29],[3224,26,2173,30,"_a"],[3224,28,2173,32],[3224,31,2173,35,"sessionData"],[3224,42,2173,46],[3224,47,2173,51],[3224,51,2173,55],[3224,55,2173,59,"sessionData"],[3224,66,2173,70],[3224,71,2173,75],[3224,76,2173,80],[3224,77,2173,81],[3224,80,2173,84],[3224,85,2173,89],[3224,86,2173,90],[3224,89,2173,93,"sessionData"],[3224,100,2173,104],[3224,101,2173,105,"session"],[3224,108,2173,112],[3224,114,2173,118],[3224,118,2173,122],[3224,122,2173,126,"_a"],[3224,124,2173,128],[3224,129,2173,133],[3224,134,2173,138],[3224,135,2173,139],[3224,138,2173,142],[3224,143,2173,147],[3224,144,2173,148],[3224,147,2173,151,"_a"],[3224,149,2173,153],[3224,150,2173,154,"access_token"],[3225,18,2174,20],[3225,19,2174,21],[3225,20,2174,22],[3226,16,2175,16],[3226,17,2175,17],[3227,16,2175,17],[3227,33,2175,17,"_x64"],[3227,37,2175,17],[3228,18,2175,17],[3228,25,2175,17,"_ref40"],[3228,31,2175,17],[3228,32,2175,17,"apply"],[3228,37,2175,17],[3228,44,2175,17,"arguments"],[3228,53,2175,17],[3229,16,2175,17],[3230,14,2175,17],[3230,18,2175,18],[3231,12,2176,12],[3231,13,2176,13],[3231,14,2177,12],[3231,21,2177,19,"error"],[3231,26,2177,24],[3231,28,2177,26],[3232,14,2178,16],[3232,18,2178,20],[3232,19,2178,21],[3232,20,2178,22],[3232,22,2178,24,"errors_1"],[3232,30,2178,32],[3232,31,2178,33,"isAuthError"],[3232,42,2178,44],[3232,44,2178,46,"error"],[3232,49,2178,51],[3232,50,2178,52],[3232,52,2178,54],[3233,16,2179,20],[3233,23,2179,27],[3234,18,2179,29,"data"],[3234,22,2179,33],[3234,24,2179,35],[3234,28,2179,39],[3235,18,2179,41,"error"],[3236,16,2179,47],[3236,17,2179,48],[3237,14,2180,16],[3238,14,2181,16],[3238,20,2181,22,"error"],[3238,25,2181,27],[3239,12,2182,12],[3240,10,2183,8],[3240,11,2183,9],[3240,13,2183,10],[3241,8,2184,4],[3241,9,2184,5],[3242,8,2184,5],[3242,17,2161,10,"_challenge"],[3242,27,2161,20,"_challenge"],[3242,28,2161,20,"_x63"],[3242,32,2161,20],[3243,10,2161,20],[3243,17,2161,20,"_challenge2"],[3243,28,2161,20],[3243,29,2161,20,"apply"],[3243,34,2161,20],[3243,41,2161,20,"arguments"],[3243,50,2161,20],[3244,8,2161,20],[3245,8,2161,20],[3245,15,2161,10,"_challenge"],[3245,25,2161,20],[3246,6,2161,20],[3247,6,2185,4],[3248,0,2186,0],[3249,0,2187,0],[3250,6,2185,4],[3251,4,2185,4],[3252,6,2185,4,"key"],[3252,9,2185,4],[3253,6,2185,4,"value"],[3253,11,2185,4],[3254,8,2185,4],[3254,12,2185,4,"_challengeAndVerify2"],[3254,32,2185,4],[3254,35,2185,4,"_asyncToGenerator"],[3254,52,2185,4],[3254,53,2188,4],[3254,64,2188,30,"params"],[3254,70,2188,36],[3254,72,2188,38],[3255,10,2189,8],[3256,10,2190,8],[3257,10,2191,8],[3257,14,2191,8,"_yield$this$_challeng"],[3257,35,2191,8],[3257,44,2191,69],[3257,48,2191,73],[3257,49,2191,74,"_challenge"],[3257,59,2191,84],[3257,60,2191,85],[3258,14,2192,12,"factorId"],[3258,22,2192,20],[3258,24,2192,22,"params"],[3258,30,2192,28],[3258,31,2192,29,"factorId"],[3259,12,2193,8],[3259,13,2193,9],[3259,14,2193,10],[3260,12,2191,22,"challengeData"],[3260,25,2191,35],[3260,28,2191,35,"_yield$this$_challeng"],[3260,49,2191,35],[3260,50,2191,16,"data"],[3260,54,2191,20],[3261,12,2191,44,"challengeError"],[3261,26,2191,58],[3261,29,2191,58,"_yield$this$_challeng"],[3261,50,2191,58],[3261,51,2191,37,"error"],[3261,56,2191,42],[3262,10,2194,8],[3262,14,2194,12,"challengeError"],[3262,28,2194,26],[3262,30,2194,28],[3263,12,2195,12],[3263,19,2195,19],[3264,14,2195,21,"data"],[3264,18,2195,25],[3264,20,2195,27],[3264,24,2195,31],[3265,14,2195,33,"error"],[3265,19,2195,38],[3265,21,2195,40,"challengeError"],[3266,12,2195,55],[3266,13,2195,56],[3267,10,2196,8],[3268,10,2197,8],[3268,23,2197,21],[3268,27,2197,25],[3268,28,2197,26,"_verify"],[3268,35,2197,33],[3268,36,2197,34],[3269,12,2198,12,"factorId"],[3269,20,2198,20],[3269,22,2198,22,"params"],[3269,28,2198,28],[3269,29,2198,29,"factorId"],[3269,37,2198,37],[3270,12,2199,12,"challengeId"],[3270,23,2199,23],[3270,25,2199,25,"challengeData"],[3270,38,2199,38],[3270,39,2199,39,"id"],[3270,41,2199,41],[3271,12,2200,12,"code"],[3271,16,2200,16],[3271,18,2200,18,"params"],[3271,24,2200,24],[3271,25,2200,25,"code"],[3272,10,2201,8],[3272,11,2201,9],[3272,12,2201,10],[3273,8,2202,4],[3273,9,2202,5],[3274,8,2202,5],[3274,17,2188,10,"_challengeAndVerify"],[3274,36,2188,29,"_challengeAndVerify"],[3274,37,2188,29,"_x65"],[3274,41,2188,29],[3275,10,2188,29],[3275,17,2188,29,"_challengeAndVerify2"],[3275,37,2188,29],[3275,38,2188,29,"apply"],[3275,43,2188,29],[3275,50,2188,29,"arguments"],[3275,59,2188,29],[3276,8,2188,29],[3277,8,2188,29],[3277,15,2188,10,"_challengeAndVerify"],[3277,34,2188,29],[3278,6,2188,29],[3279,6,2203,4],[3280,0,2204,0],[3281,0,2205,0],[3282,6,2203,4],[3283,4,2203,4],[3284,6,2203,4,"key"],[3284,9,2203,4],[3285,6,2203,4,"value"],[3285,11,2203,4],[3286,8,2203,4],[3286,12,2203,4,"_listFactors2"],[3286,25,2203,4],[3286,28,2203,4,"_asyncToGenerator"],[3286,45,2203,4],[3286,46,2206,4],[3286,59,2206,25],[3287,10,2207,8],[3288,10,2208,8],[3288,14,2208,8,"_yield$this$getUser2"],[3288,34,2208,8],[3288,43,2208,60],[3288,47,2208,64],[3288,48,2208,65,"getUser"],[3288,55,2208,72],[3288,56,2208,73],[3288,57,2208,74],[3289,12,2208,24,"user"],[3289,16,2208,28],[3289,19,2208,28,"_yield$this$getUser2"],[3289,39,2208,28],[3289,40,2208,16,"data"],[3289,44,2208,20],[3289,45,2208,24,"user"],[3289,49,2208,28],[3290,12,2208,39,"userError"],[3290,21,2208,48],[3290,24,2208,48,"_yield$this$getUser2"],[3290,44,2208,48],[3290,45,2208,32,"error"],[3290,50,2208,37],[3291,10,2209,8],[3291,14,2209,12,"userError"],[3291,23,2209,21],[3291,25,2209,23],[3292,12,2210,12],[3292,19,2210,19],[3293,14,2210,21,"data"],[3293,18,2210,25],[3293,20,2210,27],[3293,24,2210,31],[3294,14,2210,33,"error"],[3294,19,2210,38],[3294,21,2210,40,"userError"],[3295,12,2210,50],[3295,13,2210,51],[3296,10,2211,8],[3297,10,2212,8],[3297,14,2212,14,"factors"],[3297,21,2212,21],[3297,24,2212,24],[3297,25,2212,25,"user"],[3297,29,2212,29],[3297,34,2212,34],[3297,38,2212,38],[3297,42,2212,42,"user"],[3297,46,2212,46],[3297,51,2212,51],[3297,56,2212,56],[3297,57,2212,57],[3297,60,2212,60],[3297,65,2212,65],[3297,66,2212,66],[3297,69,2212,69,"user"],[3297,73,2212,73],[3297,74,2212,74,"factors"],[3297,81,2212,81],[3297,86,2212,86],[3297,88,2212,88],[3298,10,2213,8],[3298,14,2213,14,"totp"],[3298,18,2213,18],[3298,21,2213,21,"factors"],[3298,28,2213,28],[3298,29,2213,29,"filter"],[3298,35,2213,35],[3298,36,2213,37,"factor"],[3298,42,2213,43],[3298,46,2213,48,"factor"],[3298,52,2213,54],[3298,53,2213,55,"factor_type"],[3298,64,2213,66],[3298,69,2213,71],[3298,75,2213,77],[3298,79,2213,81,"factor"],[3298,85,2213,87],[3298,86,2213,88,"status"],[3298,92,2213,94],[3298,97,2213,99],[3298,107,2213,109],[3298,108,2213,110],[3299,10,2214,8],[3299,14,2214,14,"phone"],[3299,19,2214,19],[3299,22,2214,22,"factors"],[3299,29,2214,29],[3299,30,2214,30,"filter"],[3299,36,2214,36],[3299,37,2214,38,"factor"],[3299,43,2214,44],[3299,47,2214,49,"factor"],[3299,53,2214,55],[3299,54,2214,56,"factor_type"],[3299,65,2214,67],[3299,70,2214,72],[3299,77,2214,79],[3299,81,2214,83,"factor"],[3299,87,2214,89],[3299,88,2214,90,"status"],[3299,94,2214,96],[3299,99,2214,101],[3299,109,2214,111],[3299,110,2214,112],[3300,10,2215,8],[3300,17,2215,15],[3301,12,2216,12,"data"],[3301,16,2216,16],[3301,18,2216,18],[3302,14,2217,16,"all"],[3302,17,2217,19],[3302,19,2217,21,"factors"],[3302,26,2217,28],[3303,14,2218,16,"totp"],[3303,18,2218,20],[3304,14,2219,16,"phone"],[3305,12,2220,12],[3305,13,2220,13],[3306,12,2221,12,"error"],[3306,17,2221,17],[3306,19,2221,19],[3307,10,2222,8],[3307,11,2222,9],[3308,8,2223,4],[3308,9,2223,5],[3309,8,2223,5],[3309,17,2206,10,"_listFactors"],[3309,29,2206,22,"_listFactors"],[3309,30,2206,22],[3310,10,2206,22],[3310,17,2206,22,"_listFactors2"],[3310,30,2206,22],[3310,31,2206,22,"apply"],[3310,36,2206,22],[3310,43,2206,22,"arguments"],[3310,52,2206,22],[3311,8,2206,22],[3312,8,2206,22],[3312,15,2206,10,"_listFactors"],[3312,27,2206,22],[3313,6,2206,22],[3314,6,2224,4],[3315,0,2225,0],[3316,0,2226,0],[3317,6,2224,4],[3318,4,2224,4],[3319,6,2224,4,"key"],[3319,9,2224,4],[3320,6,2224,4,"value"],[3320,11,2224,4],[3321,8,2224,4],[3321,12,2224,4,"_getAuthenticatorAssuranceLevel2"],[3321,44,2224,4],[3321,47,2224,4,"_asyncToGenerator"],[3321,64,2224,4],[3321,65,2227,4],[3321,78,2227,44],[3322,10,2227,44],[3322,14,2227,44,"_this29"],[3322,21,2227,44],[3323,10,2228,8],[3323,17,2228,15],[3323,21,2228,19],[3323,22,2228,20,"_acquireLock"],[3323,34,2228,32],[3323,35,2228,33],[3323,36,2228,34],[3323,37,2228,35],[3323,52,2228,35,"_asyncToGenerator"],[3323,69,2228,35],[3323,70,2228,37],[3323,83,2228,49],[3324,12,2229,12],[3324,25,2229,25,"_this29"],[3324,32,2229,29],[3324,33,2229,30,"_useSession"],[3324,44,2229,41],[3325,14,2229,41],[3325,18,2229,41,"_ref42"],[3325,24,2229,41],[3325,27,2229,41,"_asyncToGenerator"],[3325,44,2229,41],[3325,45,2229,42],[3325,56,2229,49,"result"],[3325,62,2229,55],[3325,64,2229,60],[3326,16,2230,16],[3326,20,2230,20,"_a"],[3326,22,2230,22],[3326,24,2230,24,"_b"],[3326,26,2230,26],[3327,16,2231,16],[3327,20,2231,32,"session"],[3327,27,2231,39],[3327,30,2231,68,"result"],[3327,36,2231,74],[3327,37,2231,24,"data"],[3327,41,2231,28],[3327,42,2231,32,"session"],[3327,49,2231,39],[3328,18,2231,50,"sessionError"],[3328,30,2231,62],[3328,33,2231,68,"result"],[3328,39,2231,74],[3328,40,2231,43,"error"],[3328,45,2231,48],[3329,16,2232,16],[3329,20,2232,20,"sessionError"],[3329,32,2232,32],[3329,34,2232,34],[3330,18,2233,20],[3330,25,2233,27],[3331,20,2233,29,"data"],[3331,24,2233,33],[3331,26,2233,35],[3331,30,2233,39],[3332,20,2233,41,"error"],[3332,25,2233,46],[3332,27,2233,48,"sessionError"],[3333,18,2233,61],[3333,19,2233,62],[3334,16,2234,16],[3335,16,2235,16],[3335,20,2235,20],[3335,21,2235,21,"session"],[3335,28,2235,28],[3335,30,2235,30],[3336,18,2236,20],[3336,25,2236,27],[3337,20,2237,24,"data"],[3337,24,2237,28],[3337,26,2237,30],[3338,22,2237,32,"currentLevel"],[3338,34,2237,44],[3338,36,2237,46],[3338,40,2237,50],[3339,22,2237,52,"nextLevel"],[3339,31,2237,61],[3339,33,2237,63],[3339,37,2237,67],[3340,22,2237,69,"currentAuthenticationMethods"],[3340,50,2237,97],[3340,52,2237,99],[3341,20,2237,102],[3341,21,2237,103],[3342,20,2238,24,"error"],[3342,25,2238,29],[3342,27,2238,31],[3343,18,2239,20],[3343,19,2239,21],[3344,16,2240,16],[3345,16,2241,16],[3345,20,2241,16,"_ref43"],[3345,26,2241,16],[3345,29,2241,36],[3345,30,2241,37],[3345,31,2241,38],[3345,33,2241,40,"helpers_1"],[3345,42,2241,49],[3345,43,2241,50,"decodeJWT"],[3345,52,2241,59],[3345,54,2241,61,"session"],[3345,61,2241,68],[3345,62,2241,69,"access_token"],[3345,74,2241,81],[3345,75,2241,82],[3346,18,2241,24,"payload"],[3346,25,2241,31],[3346,28,2241,31,"_ref43"],[3346,34,2241,31],[3346,35,2241,24,"payload"],[3346,42,2241,31],[3347,16,2242,16],[3347,20,2242,20,"currentLevel"],[3347,32,2242,32],[3347,35,2242,35],[3347,39,2242,39],[3348,16,2243,16],[3348,20,2243,20,"payload"],[3348,27,2243,27],[3348,28,2243,28,"aal"],[3348,31,2243,31],[3348,33,2243,33],[3349,18,2244,20,"currentLevel"],[3349,30,2244,32],[3349,33,2244,35,"payload"],[3349,40,2244,42],[3349,41,2244,43,"aal"],[3349,44,2244,46],[3350,16,2245,16],[3351,16,2246,16],[3351,20,2246,20,"nextLevel"],[3351,29,2246,29],[3351,32,2246,32,"currentLevel"],[3351,44,2246,44],[3352,16,2247,16],[3352,20,2247,22,"verifiedFactors"],[3352,35,2247,37],[3352,38,2247,40],[3352,39,2247,41,"_b"],[3352,41,2247,43],[3352,44,2247,46],[3352,45,2247,47,"_a"],[3352,47,2247,49],[3352,50,2247,52,"session"],[3352,57,2247,59],[3352,58,2247,60,"user"],[3352,62,2247,64],[3352,63,2247,65,"factors"],[3352,70,2247,72],[3352,76,2247,78],[3352,80,2247,82],[3352,84,2247,86,"_a"],[3352,86,2247,88],[3352,91,2247,93],[3352,96,2247,98],[3352,97,2247,99],[3352,100,2247,102],[3352,105,2247,107],[3352,106,2247,108],[3352,109,2247,111,"_a"],[3352,111,2247,113],[3352,112,2247,114,"filter"],[3352,118,2247,120],[3352,119,2247,122,"factor"],[3352,125,2247,128],[3352,129,2247,133,"factor"],[3352,135,2247,139],[3352,136,2247,140,"status"],[3352,142,2247,146],[3352,147,2247,151],[3352,157,2247,161],[3352,158,2247,162],[3352,164,2247,168],[3352,168,2247,172],[3352,172,2247,176,"_b"],[3352,174,2247,178],[3352,179,2247,183],[3352,184,2247,188],[3352,185,2247,189],[3352,188,2247,192,"_b"],[3352,190,2247,194],[3352,193,2247,197],[3352,195,2247,199],[3353,16,2248,16],[3353,20,2248,20,"verifiedFactors"],[3353,35,2248,35],[3353,36,2248,36,"length"],[3353,42,2248,42],[3353,45,2248,45],[3353,46,2248,46],[3353,48,2248,48],[3354,18,2249,20,"nextLevel"],[3354,27,2249,29],[3354,30,2249,32],[3354,36,2249,38],[3355,16,2250,16],[3356,16,2251,16],[3356,20,2251,22,"currentAuthenticationMethods"],[3356,48,2251,50],[3356,51,2251,53,"payload"],[3356,58,2251,60],[3356,59,2251,61,"amr"],[3356,62,2251,64],[3356,66,2251,68],[3356,68,2251,70],[3357,16,2252,16],[3357,23,2252,23],[3358,18,2252,25,"data"],[3358,22,2252,29],[3358,24,2252,31],[3359,20,2252,33,"currentLevel"],[3359,32,2252,45],[3360,20,2252,47,"nextLevel"],[3360,29,2252,56],[3361,20,2252,58,"currentAuthenticationMethods"],[3362,18,2252,87],[3362,19,2252,88],[3363,18,2252,90,"error"],[3363,23,2252,95],[3363,25,2252,97],[3364,16,2252,102],[3364,17,2252,103],[3365,14,2253,12],[3365,15,2253,13],[3366,14,2253,13],[3366,31,2253,13,"_x66"],[3366,35,2253,13],[3367,16,2253,13],[3367,23,2253,13,"_ref42"],[3367,29,2253,13],[3367,30,2253,13,"apply"],[3367,35,2253,13],[3367,42,2253,13,"arguments"],[3367,51,2253,13],[3368,14,2253,13],[3369,12,2253,13],[3369,16,2253,14],[3370,10,2254,8],[3370,11,2254,9],[3370,13,2254,10],[3371,8,2255,4],[3371,9,2255,5],[3372,8,2255,5],[3372,17,2227,10,"_getAuthenticatorAssuranceLevel"],[3372,48,2227,41,"_getAuthenticatorAssuranceLevel"],[3372,49,2227,41],[3373,10,2227,41],[3373,17,2227,41,"_getAuthenticatorAssuranceLevel2"],[3373,49,2227,41],[3373,50,2227,41,"apply"],[3373,55,2227,41],[3373,62,2227,41,"arguments"],[3373,71,2227,41],[3374,8,2227,41],[3375,8,2227,41],[3375,15,2227,10,"_getAuthenticatorAssuranceLevel"],[3375,46,2227,41],[3376,6,2227,41],[3377,4,2227,41],[3378,6,2227,41,"key"],[3378,9,2227,41],[3379,6,2227,41,"value"],[3379,11,2227,41],[3380,8,2227,41],[3380,12,2227,41,"_fetchJwk"],[3380,21,2227,41],[3380,24,2227,41,"_asyncToGenerator"],[3380,41,2227,41],[3380,42,2256,4],[3380,53,2256,19,"kid"],[3380,56,2256,22],[3380,58,2256,45],[3381,10,2256,45],[3381,14,2256,24,"jwks"],[3381,18,2256,28],[3381,21,2256,28,"arguments"],[3381,30,2256,28],[3381,31,2256,28,"length"],[3381,37,2256,28],[3381,45,2256,28,"arguments"],[3381,54,2256,28],[3381,62,2256,28,"undefined"],[3381,71,2256,28],[3381,74,2256,28,"arguments"],[3381,83,2256,28],[3381,89,2256,31],[3382,12,2256,33,"keys"],[3382,16,2256,37],[3382,18,2256,39],[3383,10,2256,42],[3383,11,2256,43],[3384,10,2257,8],[3385,10,2258,8],[3385,14,2258,12,"jwk"],[3385,17,2258,15],[3385,20,2258,18,"jwks"],[3385,24,2258,22],[3385,25,2258,23,"keys"],[3385,29,2258,27],[3385,30,2258,28,"find"],[3385,34,2258,32],[3385,35,2258,34,"key"],[3385,38,2258,37],[3385,42,2258,42,"key"],[3385,45,2258,45],[3385,46,2258,46,"kid"],[3385,49,2258,49],[3385,54,2258,54,"kid"],[3385,57,2258,57],[3385,58,2258,58],[3386,10,2259,8],[3386,14,2259,12,"jwk"],[3386,17,2259,15],[3386,19,2259,17],[3387,12,2260,12],[3387,19,2260,19,"jwk"],[3387,22,2260,22],[3388,10,2261,8],[3389,10,2262,8],[3389,14,2262,14,"now"],[3389,17,2262,17],[3389,20,2262,20,"Date"],[3389,24,2262,24],[3389,25,2262,25,"now"],[3389,28,2262,28],[3389,29,2262,29],[3389,30,2262,30],[3390,10,2263,8],[3391,10,2264,8,"jwk"],[3391,13,2264,11],[3391,16,2264,14],[3391,20,2264,18],[3391,21,2264,19,"jwks"],[3391,25,2264,23],[3391,26,2264,24,"keys"],[3391,30,2264,28],[3391,31,2264,29,"find"],[3391,35,2264,33],[3391,36,2264,35,"key"],[3391,39,2264,38],[3391,43,2264,43,"key"],[3391,46,2264,46],[3391,47,2264,47,"kid"],[3391,50,2264,50],[3391,55,2264,55,"kid"],[3391,58,2264,58],[3391,59,2264,59],[3392,10,2265,8],[3393,10,2266,8],[3393,14,2266,12,"jwk"],[3393,17,2266,15],[3393,21,2266,19],[3393,25,2266,23],[3393,26,2266,24,"jwks_cached_at"],[3393,40,2266,38],[3393,43,2266,41,"constants_1"],[3393,54,2266,52],[3393,55,2266,53,"JWKS_TTL"],[3393,63,2266,61],[3393,66,2266,64,"now"],[3393,69,2266,67],[3393,71,2266,69],[3394,12,2267,12],[3394,19,2267,19,"jwk"],[3394,22,2267,22],[3395,10,2268,8],[3396,10,2269,8],[3397,10,2270,8],[3397,14,2270,8,"_yield22"],[3397,22,2270,8],[3397,31,2270,38],[3397,32,2270,39],[3397,33,2270,40],[3397,35,2270,42,"fetch_1"],[3397,42,2270,49],[3397,43,2270,50,"_request"],[3397,51,2270,58],[3397,53,2270,60],[3397,57,2270,64],[3397,58,2270,65,"fetch"],[3397,63,2270,70],[3397,65,2270,72],[3397,70,2270,77],[3397,72,2270,79],[3397,75,2270,82],[3397,79,2270,86],[3397,80,2270,87,"url"],[3397,83,2270,90],[3397,107,2270,114],[3397,109,2270,116],[3398,14,2271,12,"headers"],[3398,21,2271,19],[3398,23,2271,21],[3398,27,2271,25],[3398,28,2271,26,"headers"],[3399,12,2272,8],[3399,13,2272,9],[3399,14,2272,10],[3400,12,2270,16,"data"],[3400,16,2270,20],[3400,19,2270,20,"_yield22"],[3400,27,2270,20],[3400,28,2270,16,"data"],[3400,32,2270,20],[3401,12,2270,22,"error"],[3401,17,2270,27],[3401,20,2270,27,"_yield22"],[3401,28,2270,27],[3401,29,2270,22,"error"],[3401,34,2270,27],[3402,10,2273,8],[3402,14,2273,12,"error"],[3402,19,2273,17],[3402,21,2273,19],[3403,12,2274,12],[3403,18,2274,18,"error"],[3403,23,2274,23],[3404,10,2275,8],[3405,10,2276,8],[3405,14,2276,12],[3405,15,2276,13,"data"],[3405,19,2276,17],[3405,20,2276,18,"keys"],[3405,24,2276,22],[3405,28,2276,26,"data"],[3405,32,2276,30],[3405,33,2276,31,"keys"],[3405,37,2276,35],[3405,38,2276,36,"length"],[3405,44,2276,42],[3405,49,2276,47],[3405,50,2276,48],[3405,52,2276,50],[3406,12,2277,12],[3406,19,2277,19],[3406,23,2277,23],[3407,10,2278,8],[3408,10,2279,8],[3408,14,2279,12],[3408,15,2279,13,"jwks"],[3408,19,2279,17],[3408,22,2279,20,"data"],[3408,26,2279,24],[3409,10,2280,8],[3409,14,2280,12],[3409,15,2280,13,"jwks_cached_at"],[3409,29,2280,27],[3409,32,2280,30,"now"],[3409,35,2280,33],[3410,10,2281,8],[3411,10,2282,8,"jwk"],[3411,13,2282,11],[3411,16,2282,14,"data"],[3411,20,2282,18],[3411,21,2282,19,"keys"],[3411,25,2282,23],[3411,26,2282,24,"find"],[3411,30,2282,28],[3411,31,2282,30,"key"],[3411,34,2282,33],[3411,38,2282,38,"key"],[3411,41,2282,41],[3411,42,2282,42,"kid"],[3411,45,2282,45],[3411,50,2282,50,"kid"],[3411,53,2282,53],[3411,54,2282,54],[3412,10,2283,8],[3412,14,2283,12],[3412,15,2283,13,"jwk"],[3412,18,2283,16],[3412,20,2283,18],[3413,12,2284,12],[3413,19,2284,19],[3413,23,2284,23],[3414,10,2285,8],[3415,10,2286,8],[3415,17,2286,15,"jwk"],[3415,20,2286,18],[3416,8,2287,4],[3416,9,2287,5],[3417,8,2287,5],[3417,17,2256,10,"fetchJwk"],[3417,25,2256,18,"fetchJwk"],[3417,26,2256,18,"_x67"],[3417,30,2256,18],[3418,10,2256,18],[3418,17,2256,18,"_fetchJwk"],[3418,26,2256,18],[3418,27,2256,18,"apply"],[3418,32,2256,18],[3418,39,2256,18,"arguments"],[3418,48,2256,18],[3419,8,2256,18],[3420,8,2256,18],[3420,15,2256,10,"fetchJwk"],[3420,23,2256,18],[3421,6,2256,18],[3422,6,2288,4],[3423,0,2289,0],[3424,0,2290,0],[3425,0,2291,0],[3426,0,2292,0],[3427,0,2293,0],[3428,0,2294,0],[3429,0,2295,0],[3430,0,2296,0],[3431,0,2297,0],[3432,0,2298,0],[3433,0,2299,0],[3434,0,2300,0],[3435,0,2301,0],[3436,0,2302,0],[3437,0,2303,0],[3438,4,2288,4],[3439,6,2288,4,"key"],[3439,9,2288,4],[3440,6,2288,4,"value"],[3440,11,2288,4],[3441,8,2288,4],[3441,12,2288,4,"_getClaims"],[3441,22,2288,4],[3441,25,2288,4,"_asyncToGenerator"],[3441,42,2288,4],[3441,43,2304,4],[3441,54,2304,20,"jwt"],[3441,57,2304,23],[3441,59,2304,39],[3442,10,2304,39],[3442,14,2304,25,"options"],[3442,21,2304,32],[3442,24,2304,32,"arguments"],[3442,33,2304,32],[3442,34,2304,32,"length"],[3442,40,2304,32],[3442,48,2304,32,"arguments"],[3442,57,2304,32],[3442,65,2304,32,"undefined"],[3442,74,2304,32],[3442,77,2304,32,"arguments"],[3442,86,2304,32],[3442,92,2304,35],[3442,93,2304,36],[3442,94,2304,37],[3443,10,2305,8],[3443,14,2305,12],[3444,12,2306,12],[3444,16,2306,16,"token"],[3444,21,2306,21],[3444,24,2306,24,"jwt"],[3444,27,2306,27],[3445,12,2307,12],[3445,16,2307,16],[3445,17,2307,17,"token"],[3445,22,2307,22],[3445,24,2307,24],[3446,14,2308,16],[3446,18,2308,16,"_yield$this$getSessio"],[3446,39,2308,16],[3446,48,2308,46],[3446,52,2308,50],[3446,53,2308,51,"getSession"],[3446,63,2308,61],[3446,64,2308,62],[3446,65,2308,63],[3447,16,2308,24,"data"],[3447,20,2308,28],[3447,23,2308,28,"_yield$this$getSessio"],[3447,44,2308,28],[3447,45,2308,24,"data"],[3447,49,2308,28],[3448,16,2308,30,"error"],[3448,21,2308,35],[3448,24,2308,35,"_yield$this$getSessio"],[3448,45,2308,35],[3448,46,2308,30,"error"],[3448,51,2308,35],[3449,14,2309,16],[3449,18,2309,20,"error"],[3449,23,2309,25],[3449,27,2309,29],[3449,28,2309,30,"data"],[3449,32,2309,34],[3449,33,2309,35,"session"],[3449,40,2309,42],[3449,42,2309,44],[3450,16,2310,20],[3450,23,2310,27],[3451,18,2310,29,"data"],[3451,22,2310,33],[3451,24,2310,35],[3451,28,2310,39],[3452,18,2310,41,"error"],[3453,16,2310,47],[3453,17,2310,48],[3454,14,2311,16],[3455,14,2312,16,"token"],[3455,19,2312,21],[3455,22,2312,24,"data"],[3455,26,2312,28],[3455,27,2312,29,"session"],[3455,34,2312,36],[3455,35,2312,37,"access_token"],[3455,47,2312,49],[3456,12,2313,12],[3457,12,2314,12],[3457,16,2314,12,"_ref44"],[3457,22,2314,12],[3457,25,2314,101],[3457,26,2314,102],[3457,27,2314,103],[3457,29,2314,105,"helpers_1"],[3457,38,2314,114],[3457,39,2314,115,"decodeJWT"],[3457,48,2314,124],[3457,50,2314,126,"token"],[3457,55,2314,131],[3457,56,2314,132],[3458,14,2314,20,"header"],[3458,20,2314,26],[3458,23,2314,26,"_ref44"],[3458,29,2314,26],[3458,30,2314,20,"header"],[3458,36,2314,26],[3459,14,2314,28,"payload"],[3459,21,2314,35],[3459,24,2314,35,"_ref44"],[3459,30,2314,35],[3459,31,2314,28,"payload"],[3459,38,2314,35],[3460,14,2314,37,"signature"],[3460,23,2314,46],[3460,26,2314,46,"_ref44"],[3460,32,2314,46],[3460,33,2314,37,"signature"],[3460,42,2314,46],[3461,14,2314,46,"_ref44$raw"],[3461,24,2314,46],[3461,27,2314,46,"_ref44"],[3461,33,2314,46],[3461,34,2314,48,"raw"],[3461,37,2314,51],[3462,14,2314,63,"rawHeader"],[3462,23,2314,72],[3462,26,2314,72,"_ref44$raw"],[3462,36,2314,72],[3462,37,2314,55,"header"],[3462,43,2314,61],[3463,14,2314,83,"rawPayload"],[3463,24,2314,93],[3463,27,2314,93,"_ref44$raw"],[3463,37,2314,93],[3463,38,2314,74,"payload"],[3463,45,2314,81],[3464,12,2315,12],[3464,16,2315,16],[3464,18,2315,18,"options"],[3464,25,2315,25],[3464,30,2315,30],[3464,34,2315,34],[3464,38,2315,38,"options"],[3464,45,2315,45],[3464,50,2315,50],[3464,55,2315,55],[3464,56,2315,56],[3464,59,2315,59],[3464,64,2315,64],[3464,65,2315,65],[3464,68,2315,68,"options"],[3464,75,2315,75],[3464,76,2315,76,"allowExpired"],[3464,88,2315,88],[3464,89,2315,89],[3464,91,2315,91],[3465,14,2316,16],[3466,14,2317,16],[3466,15,2317,17],[3466,16,2317,18],[3466,18,2317,20,"helpers_1"],[3466,27,2317,29],[3466,28,2317,30,"validateExp"],[3466,39,2317,41],[3466,41,2317,43,"payload"],[3466,48,2317,50],[3466,49,2317,51,"exp"],[3466,52,2317,54],[3466,53,2317,55],[3467,12,2318,12],[3468,12,2319,12],[3468,16,2319,18,"signingKey"],[3468,26,2319,28],[3468,29,2319,31],[3468,30,2319,32,"header"],[3468,36,2319,38],[3468,37,2319,39,"alg"],[3468,40,2319,42],[3468,44,2320,16,"header"],[3468,50,2320,22],[3468,51,2320,23,"alg"],[3468,54,2320,26],[3468,55,2320,27,"startsWith"],[3468,65,2320,37],[3468,66,2320,38],[3468,70,2320,42],[3468,71,2320,43],[3468,75,2321,16],[3468,76,2321,17,"header"],[3468,82,2321,23],[3468,83,2321,24,"kid"],[3468,86,2321,27],[3468,90,2322,16],[3468,92,2322,18],[3468,100,2322,26],[3468,104,2322,30,"globalThis"],[3468,114,2322,40],[3468,118,2322,44],[3468,126,2322,52],[3468,130,2322,56,"globalThis"],[3468,140,2322,66],[3468,141,2322,67,"crypto"],[3468,147,2322,73],[3468,148,2322,74],[3468,151,2323,18],[3468,155,2323,22],[3468,164,2324,24],[3468,168,2324,28],[3468,169,2324,29,"fetchJwk"],[3468,177,2324,37],[3468,178,2324,38,"header"],[3468,184,2324,44],[3468,185,2324,45,"kid"],[3468,188,2324,48],[3468,190,2324,50],[3468,191,2324,51,"options"],[3468,198,2324,58],[3468,203,2324,63],[3468,207,2324,67],[3468,211,2324,71,"options"],[3468,218,2324,78],[3468,223,2324,83],[3468,228,2324,88],[3468,229,2324,89],[3468,232,2324,92],[3468,237,2324,97],[3468,238,2324,98],[3468,241,2324,101,"options"],[3468,248,2324,108],[3468,249,2324,109,"keys"],[3468,253,2324,113],[3468,257,2324,117],[3469,14,2324,119,"keys"],[3469,18,2324,123],[3469,20,2324,125,"options"],[3469,27,2324,132],[3469,28,2324,133,"keys"],[3470,12,2324,138],[3470,13,2324,139],[3470,16,2324,142,"options"],[3470,23,2324,149],[3470,28,2324,154],[3470,32,2324,158],[3470,36,2324,162,"options"],[3470,43,2324,169],[3470,48,2324,174],[3470,53,2324,179],[3470,54,2324,180],[3470,57,2324,183],[3470,62,2324,188],[3470,63,2324,189],[3470,66,2324,192,"options"],[3470,73,2324,199],[3470,74,2324,200,"jwks"],[3470,78,2324,204],[3470,79,2324,205],[3471,12,2325,12],[3472,12,2326,12],[3472,16,2326,16],[3472,17,2326,17,"signingKey"],[3472,27,2326,27],[3472,29,2326,29],[3473,14,2327,16],[3473,18,2327,16,"_yield$this$getUser3"],[3473,38,2327,16],[3473,47,2327,40],[3473,51,2327,44],[3473,52,2327,45,"getUser"],[3473,59,2327,52],[3473,60,2327,53,"token"],[3473,65,2327,58],[3473,66,2327,59],[3474,16,2327,24,"error"],[3474,23,2327,29],[3474,26,2327,29,"_yield$this$getUser3"],[3474,46,2327,29],[3474,47,2327,24,"error"],[3474,52,2327,29],[3475,14,2328,16],[3475,18,2328,20,"error"],[3475,25,2328,25],[3475,27,2328,27],[3476,16,2329,20],[3476,22,2329,26,"error"],[3476,29,2329,31],[3477,14,2330,16],[3478,14,2331,16],[3479,14,2332,16],[3479,21,2332,23],[3480,16,2333,20,"data"],[3480,20,2333,24],[3480,22,2333,26],[3481,18,2334,24,"claims"],[3481,24,2334,30],[3481,26,2334,32,"payload"],[3481,33,2334,39],[3482,18,2335,24,"header"],[3482,24,2335,30],[3483,18,2336,24,"signature"],[3484,16,2337,20],[3484,17,2337,21],[3485,16,2338,20,"error"],[3485,21,2338,25],[3485,23,2338,27],[3486,14,2339,16],[3486,15,2339,17],[3487,12,2340,12],[3488,12,2341,12],[3488,16,2341,18,"algorithm"],[3488,25,2341,27],[3488,28,2341,30],[3488,29,2341,31],[3488,30,2341,32],[3488,32,2341,34,"helpers_1"],[3488,41,2341,43],[3488,42,2341,44,"getAlgorithm"],[3488,54,2341,56],[3488,56,2341,58,"header"],[3488,62,2341,64],[3488,63,2341,65,"alg"],[3488,66,2341,68],[3488,67,2341,69],[3489,12,2342,12],[3490,12,2343,12],[3490,16,2343,18,"publicKey"],[3490,25,2343,27],[3490,34,2343,36,"crypto"],[3490,40,2343,42],[3490,41,2343,43,"subtle"],[3490,47,2343,49],[3490,48,2343,50,"importKey"],[3490,57,2343,59],[3490,58,2343,60],[3490,63,2343,65],[3490,65,2343,67,"signingKey"],[3490,75,2343,77],[3490,77,2343,79,"algorithm"],[3490,86,2343,88],[3490,88,2343,90],[3490,92,2343,94],[3490,94,2343,96],[3490,95,2344,16],[3490,103,2344,24],[3490,104,2345,13],[3490,105,2345,14],[3491,12,2346,12],[3492,12,2347,12],[3492,16,2347,18,"isValid"],[3492,23,2347,25],[3492,32,2347,34,"crypto"],[3492,38,2347,40],[3492,39,2347,41,"subtle"],[3492,45,2347,47],[3492,46,2347,48,"verify"],[3492,52,2347,54],[3492,53,2347,55,"algorithm"],[3492,62,2347,64],[3492,64,2347,66,"publicKey"],[3492,73,2347,75],[3492,75,2347,77,"signature"],[3492,84,2347,86],[3492,86,2347,88],[3492,87,2347,89],[3492,88,2347,90],[3492,90,2347,92,"base64url_1"],[3492,101,2347,103],[3492,102,2347,104,"stringToUint8Array"],[3492,120,2347,122],[3492,122,2347,124],[3492,125,2347,127,"rawHeader"],[3492,134,2347,136],[3492,138,2347,140,"rawPayload"],[3492,148,2347,150],[3492,150,2347,152],[3492,151,2347,153],[3492,152,2347,154],[3493,12,2348,12],[3493,16,2348,16],[3493,17,2348,17,"isValid"],[3493,24,2348,24],[3493,26,2348,26],[3494,14,2349,16],[3494,20,2349,22],[3494,24,2349,26,"errors_1"],[3494,32,2349,34],[3494,33,2349,35,"AuthInvalidJwtError"],[3494,52,2349,54],[3494,53,2349,55],[3494,76,2349,78],[3494,77,2349,79],[3495,12,2350,12],[3496,12,2351,12],[3497,12,2352,12],[3497,19,2352,19],[3498,14,2353,16,"data"],[3498,18,2353,20],[3498,20,2353,22],[3499,16,2354,20,"claims"],[3499,22,2354,26],[3499,24,2354,28,"payload"],[3499,31,2354,35],[3500,16,2355,20,"header"],[3500,22,2355,26],[3501,16,2356,20,"signature"],[3502,14,2357,16],[3502,15,2357,17],[3503,14,2358,16,"error"],[3503,19,2358,21],[3503,21,2358,23],[3504,12,2359,12],[3504,13,2359,13],[3505,10,2360,8],[3505,11,2360,9],[3505,12,2361,8],[3505,19,2361,15,"error"],[3505,24,2361,20],[3505,26,2361,22],[3506,12,2362,12],[3506,16,2362,16],[3506,17,2362,17],[3506,18,2362,18],[3506,20,2362,20,"errors_1"],[3506,28,2362,28],[3506,29,2362,29,"isAuthError"],[3506,40,2362,40],[3506,42,2362,42,"error"],[3506,47,2362,47],[3506,48,2362,48],[3506,50,2362,50],[3507,14,2363,16],[3507,21,2363,23],[3508,16,2363,25,"data"],[3508,20,2363,29],[3508,22,2363,31],[3508,26,2363,35],[3509,16,2363,37,"error"],[3510,14,2363,43],[3510,15,2363,44],[3511,12,2364,12],[3512,12,2365,12],[3512,18,2365,18,"error"],[3512,23,2365,23],[3513,10,2366,8],[3514,8,2367,4],[3514,9,2367,5],[3515,8,2367,5],[3515,17,2304,10,"getClaims"],[3515,26,2304,19,"getClaims"],[3515,27,2304,19,"_x68"],[3515,31,2304,19],[3516,10,2304,19],[3516,17,2304,19,"_getClaims"],[3516,27,2304,19],[3516,28,2304,19,"apply"],[3516,33,2304,19],[3516,40,2304,19,"arguments"],[3516,49,2304,19],[3517,8,2304,19],[3518,8,2304,19],[3518,15,2304,10,"getClaims"],[3518,24,2304,19],[3519,6,2304,19],[3520,4,2304,19],[3521,2,2304,19],[3522,2,2369,0,"exports"],[3522,9,2369,7],[3522,10,2369,8,"default"],[3522,17,2369,15],[3522,20,2369,18,"GoTrueClient"],[3522,32,2369,30],[3523,2,2370,0,"GoTrueClient"],[3523,14,2370,12],[3523,15,2370,13,"nextInstanceID"],[3523,29,2370,27],[3523,32,2370,30],[3523,33,2370,31],[3524,0,2370,32],[3524,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","constructor","_b.addEventListener$argument_1","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","factors.filter$argument_0","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AEyB;CFE;AGU;ICI;6GCuG;aDG;KDG;IGI;KHG;IIC;KJE;IKC;KLG;IMC;KNE;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBK;KjBM;IkBC;sECmG,6BD;KlBwC;IoBC;KpBkC;IqBK;KrBoC;IsBkB;KtB+C;IuBI;KvBmC;IwBe;KxBuB;IyBK;2ChBE;SgBE;KzBC;I0BC;0CCE;aDW;K1BQ;I4BI;K5BoC;I6BY;mDpBE;oCkBC;alBE;SoBC;K7BE;I8BI;gChCO;iBgCG;yChCC;iBgCO;8ECG;6CjCK;qBiCO;aDc;K9BK;IgCO;KhCU;IiCM;6BC2C;yBDQ;KjCe;ImCQ;mD1BK;S0BE;KnCE;IoCC;0CTS;aSe;KpCc;IqCI;2C5BE;S4BE;KrCC;IsCC;0CXE;aW4B;KtCQ;IuCM;2C9BE;S8BE;KvCC;IwCC;KxCgD;IyCO;2ChCE;SgCE;KzCC;I0CC;0CfE;aeoB;K1CQ;I2CI;K3CsF;I4CI;K5CE;I6CI;K7CG;I8CS;2CrCE;SqCE;K9CC;I+CC;sCpBC;SoBuB;K/CC;IgDK;yBCK;aDG;SlDI;wCWE;aXE;SkDC;KhDE;IkDC;sCvBC;SuBc;KlDC;ImDQ;KnD0B;IoDI;KpDc;IqDK;2D1BG;a0Be;KrDc;IsDI;0C3BE;a2BU;KtDQ;IuDK;kDzDM;ayDU,EzD;ayDM;KvDY;IwDC;KxDO;IyDC;KzDY;I0DK;K1D0F;I2DC;K3DyC;I4DC;+ECQ;aDO;K5DY;I8DK;K9DmC;I+DC;K/DS;IgEO;KhEY;IiEK;mCCG,kCD;mBtDqB;SsDG;KjEC;ImEK;KnEO;IoEuB;KpEG;IqES;KrEG;IsEI;uC7DG;sDkBI;yBlBY;a6DS;KtEU;IuEM;6CCU,kDD;KvES;IyEI;4ChEe;iBgEQ;KzEQ;I0EO;K1EwB;I2EC;0ChDE;agDU;K3EQ;I4EC;0CjDE;aiDmB;K5EQ;I6EI;qCpEC;8CkBE;iBlBiB;SoEQ;K7EC;I8EI;qCrEC;8CkBE;iBlBW;SqEQ;K9EC;I+EI;K/Ec;IgFI;oCCO,yED;qCCC,0ED;KhFS;IkFI;qCzEC;0CkBC;yHwDkB,wCxD;alBM;SyEC;KlFC;IoFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KpFK;IuFiB;KvF+D;CHC"},"hasCjsExports":true},"type":"js/module"}]}