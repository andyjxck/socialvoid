{"dependencies":[{"name":"./listofwords","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"CVLdwVPxiDNgYM5WH+OuzmVULSs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"WORD_DICTIONARY\", {\n    enumerable: true,\n    get: function () {\n      return WORD_DICTIONARY;\n    }\n  });\n  var _listofwords = require(_dependencyMap[0], \"./listofwords\");\n  var rawWords = _interopDefault(_listofwords);\n  var WORD_DICTIONARY = new Set(rawWords.default.split(\"\\n\").map(w => w.trim().toLowerCase()).filter(Boolean));\n});","lineCount":21,"map":[[12,2,3,0,"Object"],[12,8,3,0],[12,9,3,0,"defineProperty"],[12,23,3,0],[12,24,3,0,"exports"],[12,31,3,0],[13,4,3,0,"enumerable"],[13,14,3,0],[14,4,3,0,"get"],[14,7,3,0],[14,18,3,0,"get"],[14,19,3,0],[15,6,3,0],[15,13,3,0,"WORD_DICTIONARY"],[15,28,3,0],[16,4,3,0],[17,2,3,0],[18,2,1,0],[18,6,1,0,"_listofwords"],[18,18,1,0],[18,21,1,0,"require"],[18,28,1,0],[18,29,1,0,"_dependencyMap"],[18,43,1,0],[19,2,1,0],[19,6,1,0,"rawWords"],[19,14,1,0],[19,17,1,0,"_interopDefault"],[19,32,1,0],[19,33,1,0,"_listofwords"],[19,45,1,0],[20,2,3,7],[20,6,3,13,"WORD_DICTIONARY"],[20,21,3,28],[20,24,3,31],[20,28,3,35,"Set"],[20,31,3,38],[20,32,4,2,"rawWords"],[20,40,4,10],[20,41,4,10,"default"],[20,48,4,10],[20,49,5,5,"split"],[20,54,5,10],[20,55,5,11],[20,59,5,15],[20,60,5,16],[20,61,6,5,"map"],[20,64,6,8],[20,65,6,10,"w"],[20,66,6,11],[20,70,6,16,"w"],[20,71,6,17],[20,72,6,18,"trim"],[20,76,6,22],[20,77,6,23],[20,78,6,24],[20,79,6,25,"toLowerCase"],[20,90,6,36],[20,91,6,37],[20,92,6,38],[20,93,6,39],[20,94,7,5,"filter"],[20,100,7,11],[20,101,7,12,"Boolean"],[20,108,7,19],[20,109,8,0],[20,110,8,1],[21,0,8,2],[21,3]],"functionMap":{"names":["<global>","rawWords.split.map$argument_0"],"mappings":"AAA;SCK,6BD"},"hasCjsExports":false},"type":"js/module"}]}