{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-haptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":66},"end":{"line":2,"column":40,"index":106}}],"key":"XxdHVlyuI491+26LeQ/AtfIvhac=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":107},"end":{"line":3,"column":69,"index":176}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"../utils/gameTracking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":177},"end":{"line":4,"column":48,"index":225}}],"key":"WS7Y1HUgoUUSBprnoF3UB5gxii0=","exportNames":["*"],"imports":1}},{"name":"../utils/gameUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":226},"end":{"line":5,"column":59,"index":285}}],"key":"EmmEIp3E0QskRpBkiKAj/gDhP14=","exportNames":["*"],"imports":1}},{"name":"../utils/tetris/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":286},"end":{"line":6,"column":78,"index":364}}],"key":"ibe/RKf5XXPeMuXmGpplVQ1PFKc=","exportNames":["*"],"imports":1}},{"name":"../utils/tetris/logic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":365},"end":{"line":15,"column":31,"index":526}}],"key":"Gmjkj49k+XIvKHNSxVLWTtnGEQo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useTetrisGame\", {\n    enumerable: true,\n    get: function () {\n      return useTetrisGame;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[2], \"react\");\n  var _expoHaptics = require(_dependencyMap[3], \"expo-haptics\");\n  var Haptics = _interopNamespace(_expoHaptics);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[4], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _utilsGameTracking = require(_dependencyMap[5], \"../utils/gameTracking\");\n  var gameTracker = _interopDefault(_utilsGameTracking);\n  var _utilsGameUtils = require(_dependencyMap[6], \"../utils/gameUtils\");\n  var _utilsTetrisConstants = require(_dependencyMap[7], \"../utils/tetris/constants\");\n  var _utilsTetrisLogic = require(_dependencyMap[8], \"../utils/tetris/logic\");\n  var useTetrisGame = () => {\n    _s();\n    var _useState = (0, _react.useState)((0, _utilsTetrisLogic.createEmptyBoard)()),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      board = _useState2[0],\n      setBoard = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentPiece = _useState4[0],\n      setCurrentPiece = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      currentPosition = _useState6[0],\n      setCurrentPosition = _useState6[1];\n    var _useState7 = (0, _react.useState)(0),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentRotation = _useState8[0],\n      setCurrentRotation = _useState8[1];\n    var _useState9 = (0, _react.useState)(0),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      score = _useState0[0],\n      setScore = _useState0[1];\n    var _useState1 = (0, _react.useState)(0),\n      _useState10 = (0, _slicedToArray.default)(_useState1, 2),\n      lines = _useState10[0],\n      setLines = _useState10[1];\n    var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray.default)(_useState11, 2),\n      gameOver = _useState12[0],\n      setGameOver = _useState12[1];\n    var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray.default)(_useState13, 2),\n      paused = _useState14[0],\n      setPaused = _useState14[1];\n    var _useState15 = (0, _react.useState)(null),\n      _useState16 = (0, _slicedToArray.default)(_useState15, 2),\n      nextPiece = _useState16[0],\n      setNextPiece = _useState16[1];\n    var _useState17 = (0, _react.useState)(null),\n      _useState18 = (0, _slicedToArray.default)(_useState17, 2),\n      currentPlayerId = _useState18[0],\n      setCurrentPlayerId = _useState18[1];\n    var _useState19 = (0, _react.useState)(null),\n      _useState20 = (0, _slicedToArray.default)(_useState19, 2),\n      gameId = _useState20[0],\n      setGameId = _useState20[1];\n    var gameLoopRef = (0, _react.useRef)();\n    var dropTimeRef = (0, _react.useRef)(300);\n    (0, _react.useEffect)(() => {\n      var loadPlayerId = /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          var savedPlayerId = yield AsyncStorage.default.getItem(\"puzzle_hub_player_id\");\n          setCurrentPlayerId(savedPlayerId ? parseInt(savedPlayerId) : 1);\n        });\n        return function loadPlayerId() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      loadPlayerId();\n    }, []);\n    (0, _react.useEffect)(() => {\n      var mounted = true;\n      var setupGameTracking = /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!currentPlayerId) return;\n          var id = yield (0, _utilsGameUtils.getGameId)(_utilsGameUtils.GAME_TYPES.TETRIS);\n          if (id && mounted) {\n            setGameId(id);\n            yield gameTracker.default.startGame(id, currentPlayerId);\n          }\n        });\n        return function setupGameTracking() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      setupGameTracking();\n      return () => {\n        mounted = false;\n      };\n    }, [currentPlayerId]);\n    var initializeGame = (0, _react.useCallback)(() => {\n      var emptyBoard = (0, _utilsTetrisLogic.createEmptyBoard)();\n      var firstPieceType = (0, _utilsTetrisLogic.getRandomPieceType)();\n      var firstPiece = (0, _utilsTetrisLogic.createPiece)(firstPieceType);\n      var firstNextPiece = (0, _utilsTetrisLogic.getRandomPieceType)();\n      setBoard(emptyBoard);\n      setCurrentPiece(firstPiece);\n      setCurrentPosition({\n        x: Math.floor(_utilsTetrisConstants.BOARD_WIDTH / 2) - 2,\n        y: 0\n      });\n      setCurrentRotation(0);\n      setNextPiece(firstNextPiece);\n      setScore(0);\n      setLines(0);\n      setGameOver(false);\n      setPaused(false);\n    }, []);\n    var movePiece = (0, _react.useCallback)(direction => {\n      if (gameOver || paused || !currentPiece) return;\n      var newPosition = {\n        ...currentPosition\n      };\n      if (direction === \"left\") newPosition.x -= 1;\n      if (direction === \"right\") newPosition.x += 1;\n      if (direction === \"down\") newPosition.y += 1;\n      if ((0, _utilsTetrisLogic.isValidPosition)(board, currentPiece, newPosition, currentRotation)) {\n        setCurrentPosition(newPosition);\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n      }\n    }, [board, currentPiece, currentPosition, currentRotation, gameOver, paused]);\n    var rotatePiece = (0, _react.useCallback)(() => {\n      if (gameOver || paused || !currentPiece) return;\n      var newRotation = (currentRotation + 1) % 4;\n      if ((0, _utilsTetrisLogic.isValidPosition)(board, currentPiece, currentPosition, newRotation)) {\n        setCurrentRotation(newRotation);\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n      }\n    }, [board, currentPiece, currentPosition, currentRotation, gameOver, paused]);\n    var dropPiece = (0, _react.useCallback)(() => {\n      if (gameOver || paused || !currentPiece) return;\n      var newPosition = {\n        ...currentPosition,\n        y: currentPosition.y + 1\n      };\n      if ((0, _utilsTetrisLogic.isValidPosition)(board, currentPiece, newPosition, currentRotation)) {\n        setCurrentPosition(newPosition);\n      } else {\n        var newBoard = (0, _utilsTetrisLogic.lockPiece)(board, currentPiece, currentPosition, currentRotation);\n        var _clearLines = (0, _utilsTetrisLogic.clearLines)(newBoard),\n          clearedBoard = _clearLines.board,\n          linesCleared = _clearLines.linesCleared;\n        setBoard(clearedBoard);\n        if (linesCleared > 0) {\n          var points = (0, _utilsTetrisLogic.calculateScore)(linesCleared, Math.floor(lines / 10) + 1);\n          setScore(prev => prev + points);\n          setLines(prev => prev + linesCleared);\n          Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n        }\n        var newPieceType = nextPiece;\n        var newPiece = (0, _utilsTetrisLogic.createPiece)(newPieceType);\n        var spawnPosition = {\n          x: Math.floor(_utilsTetrisConstants.BOARD_WIDTH / 2) - 2,\n          y: 0\n        };\n        if ((0, _utilsTetrisLogic.isValidPosition)(clearedBoard, newPiece, spawnPosition, 0)) {\n          setCurrentPiece(newPiece);\n          setCurrentPosition(spawnPosition);\n          setCurrentRotation(0);\n          setNextPiece((0, _utilsTetrisLogic.getRandomPieceType)());\n        } else {\n          setGameOver(true);\n          var finalScore = score + (linesCleared > 0 ? (0, _utilsTetrisLogic.calculateScore)(linesCleared, Math.floor(lines / 10) + 1) : 0);\n          if (gameId) {\n            gameTracker.default.endGame(gameId, finalScore);\n          }\n        }\n      }\n    }, [board, currentPiece, currentPosition, currentRotation, gameOver, paused, score, lines, nextPiece, gameId]);\n    (0, _react.useEffect)(() => {\n      if (!gameOver && !paused && currentPiece) {\n        dropTimeRef.current = Math.max(50, 300 - Math.floor(lines / 5) * 20);\n        gameLoopRef.current = setInterval(() => {\n          dropPiece();\n        }, dropTimeRef.current);\n        return () => clearInterval(gameLoopRef.current);\n      }\n    }, [dropPiece, gameOver, paused, lines, currentPiece]);\n    (0, _react.useEffect)(() => {\n      initializeGame();\n    }, [initializeGame]);\n    var togglePause = () => {\n      if (!gameOver) {\n        setPaused(!paused);\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n      }\n    };\n    var getDisplayBoard = () => {\n      var displayBoard = board.map(row => row.map(cell => ({\n        ...cell\n      })));\n      if (currentPiece && !gameOver) {\n        var shape = _utilsTetrisConstants.PIECES[currentPiece.type].shape[currentRotation];\n        for (var row = 0; row < 4; row++) {\n          for (var col = 0; col < 4; col++) {\n            if (shape[row][col]) {\n              var boardRow = currentPosition.y + row;\n              var boardCol = currentPosition.x + col;\n              if (boardRow >= 0 && boardRow < _utilsTetrisConstants.BOARD_HEIGHT && boardCol >= 0 && boardCol < _utilsTetrisConstants.BOARD_WIDTH) {\n                displayBoard[boardRow][boardCol] = {\n                  filled: true,\n                  color: currentPiece.color\n                };\n              }\n            }\n          }\n        }\n      }\n      return displayBoard;\n    };\n    return {\n      board: getDisplayBoard(),\n      score,\n      lines,\n      gameOver,\n      paused,\n      initializeGame,\n      movePiece,\n      rotatePiece,\n      togglePause\n    };\n  };\n  _s(useTetrisGame, \"iRgEQb1priaqeZeQGTBh7LdeMiE=\");\n});","lineCount":264,"map":[[28,2,17,0,"Object"],[28,8,17,0],[28,9,17,0,"defineProperty"],[28,23,17,0],[28,24,17,0,"exports"],[28,31,17,0],[29,4,17,0,"enumerable"],[29,14,17,0],[30,4,17,0,"get"],[30,7,17,0],[30,18,17,0,"get"],[30,19,17,0],[31,6,17,0],[31,13,17,0,"useTetrisGame"],[31,26,17,0],[32,4,17,0],[33,2,17,0],[34,2,217,2],[34,6,217,2,"_babelRuntimeHelpersAsyncToGenerator"],[34,42,217,2],[34,45,217,2,"require"],[34,52,217,2],[34,53,217,2,"_dependencyMap"],[34,67,217,2],[35,2,217,2],[35,6,217,2,"_asyncToGenerator"],[35,23,217,2],[35,26,217,2,"_interopDefault"],[35,41,217,2],[35,42,217,2,"_babelRuntimeHelpersAsyncToGenerator"],[35,78,217,2],[36,2,217,2],[36,6,217,2,"_babelRuntimeHelpersSlicedToArray"],[36,39,217,2],[36,42,217,2,"require"],[36,49,217,2],[36,50,217,2,"_dependencyMap"],[36,64,217,2],[37,2,217,2],[37,6,217,2,"_slicedToArray"],[37,20,217,2],[37,23,217,2,"_interopDefault"],[37,38,217,2],[37,39,217,2,"_babelRuntimeHelpersSlicedToArray"],[37,72,217,2],[38,2,1,0],[38,6,1,0,"_react"],[38,12,1,0],[38,15,1,0,"require"],[38,22,1,0],[38,23,1,0,"_dependencyMap"],[38,37,1,0],[39,2,2,0],[39,6,2,0,"_expoHaptics"],[39,18,2,0],[39,21,2,0,"require"],[39,28,2,0],[39,29,2,0,"_dependencyMap"],[39,43,2,0],[40,2,2,0],[40,6,2,0,"Haptics"],[40,13,2,0],[40,16,2,0,"_interopNamespace"],[40,33,2,0],[40,34,2,0,"_expoHaptics"],[40,46,2,0],[41,2,3,0],[41,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[41,42,3,0],[41,45,3,0,"require"],[41,52,3,0],[41,53,3,0,"_dependencyMap"],[41,67,3,0],[42,2,3,0],[42,6,3,0,"AsyncStorage"],[42,18,3,0],[42,21,3,0,"_interopDefault"],[42,36,3,0],[42,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[42,73,3,0],[43,2,4,0],[43,6,4,0,"_utilsGameTracking"],[43,24,4,0],[43,27,4,0,"require"],[43,34,4,0],[43,35,4,0,"_dependencyMap"],[43,49,4,0],[44,2,4,0],[44,6,4,0,"gameTracker"],[44,17,4,0],[44,20,4,0,"_interopDefault"],[44,35,4,0],[44,36,4,0,"_utilsGameTracking"],[44,54,4,0],[45,2,5,0],[45,6,5,0,"_utilsGameUtils"],[45,21,5,0],[45,24,5,0,"require"],[45,31,5,0],[45,32,5,0,"_dependencyMap"],[45,46,5,0],[46,2,6,0],[46,6,6,0,"_utilsTetrisConstants"],[46,27,6,0],[46,30,6,0,"require"],[46,37,6,0],[46,38,6,0,"_dependencyMap"],[46,52,6,0],[47,2,7,0],[47,6,7,0,"_utilsTetrisLogic"],[47,23,7,0],[47,26,7,0,"require"],[47,33,7,0],[47,34,7,0,"_dependencyMap"],[47,48,7,0],[48,2,17,7],[48,6,17,13,"useTetrisGame"],[48,19,17,26],[48,22,17,29,"useTetrisGame"],[48,23,17,29],[48,28,17,35],[49,4,17,35,"_s"],[49,6,17,35],[50,4,18,2],[50,8,18,2,"_useState"],[50,17,18,2],[50,20,18,28],[50,24,18,28,"useState"],[50,30,18,36],[50,31,18,36,"useState"],[50,39,18,36],[50,41,18,37],[50,45,18,37,"createEmptyBoard"],[50,62,18,53],[50,63,18,53,"createEmptyBoard"],[50,79,18,53],[50,81,18,54],[50,82,18,55],[50,83,18,56],[51,6,18,56,"_useState2"],[51,16,18,56],[51,23,18,56,"_slicedToArray"],[51,37,18,56],[51,38,18,56,"default"],[51,45,18,56],[51,47,18,56,"_useState"],[51,56,18,56],[52,6,18,9,"board"],[52,11,18,14],[52,14,18,14,"_useState2"],[52,24,18,14],[53,6,18,16,"setBoard"],[53,14,18,24],[53,17,18,24,"_useState2"],[53,27,18,24],[54,4,19,2],[54,8,19,2,"_useState3"],[54,18,19,2],[54,21,19,42],[54,25,19,42,"useState"],[54,31,19,50],[54,32,19,50,"useState"],[54,40,19,50],[54,42,19,51],[54,46,19,55],[54,47,19,56],[55,6,19,56,"_useState4"],[55,16,19,56],[55,23,19,56,"_slicedToArray"],[55,37,19,56],[55,38,19,56,"default"],[55,45,19,56],[55,47,19,56,"_useState3"],[55,57,19,56],[56,6,19,9,"currentPiece"],[56,18,19,21],[56,21,19,21,"_useState4"],[56,31,19,21],[57,6,19,23,"setCurrentPiece"],[57,21,19,38],[57,24,19,38,"_useState4"],[57,34,19,38],[58,4,20,2],[58,8,20,2,"_useState5"],[58,18,20,2],[58,21,20,48],[58,25,20,48,"useState"],[58,31,20,56],[58,32,20,56,"useState"],[58,40,20,56],[58,42,20,57],[59,8,20,59,"x"],[59,9,20,60],[59,11,20,62],[59,12,20,63],[60,8,20,65,"y"],[60,9,20,66],[60,11,20,68],[61,6,20,70],[61,7,20,71],[61,8,20,72],[62,6,20,72,"_useState6"],[62,16,20,72],[62,23,20,72,"_slicedToArray"],[62,37,20,72],[62,38,20,72,"default"],[62,45,20,72],[62,47,20,72,"_useState5"],[62,57,20,72],[63,6,20,9,"currentPosition"],[63,21,20,24],[63,24,20,24,"_useState6"],[63,34,20,24],[64,6,20,26,"setCurrentPosition"],[64,24,20,44],[64,27,20,44,"_useState6"],[64,37,20,44],[65,4,21,2],[65,8,21,2,"_useState7"],[65,18,21,2],[65,21,21,48],[65,25,21,48,"useState"],[65,31,21,56],[65,32,21,56,"useState"],[65,40,21,56],[65,42,21,57],[65,43,21,58],[65,44,21,59],[66,6,21,59,"_useState8"],[66,16,21,59],[66,23,21,59,"_slicedToArray"],[66,37,21,59],[66,38,21,59,"default"],[66,45,21,59],[66,47,21,59,"_useState7"],[66,57,21,59],[67,6,21,9,"currentRotation"],[67,21,21,24],[67,24,21,24,"_useState8"],[67,34,21,24],[68,6,21,26,"setCurrentRotation"],[68,24,21,44],[68,27,21,44,"_useState8"],[68,37,21,44],[69,4,22,2],[69,8,22,2,"_useState9"],[69,18,22,2],[69,21,22,28],[69,25,22,28,"useState"],[69,31,22,36],[69,32,22,36,"useState"],[69,40,22,36],[69,42,22,37],[69,43,22,38],[69,44,22,39],[70,6,22,39,"_useState0"],[70,16,22,39],[70,23,22,39,"_slicedToArray"],[70,37,22,39],[70,38,22,39,"default"],[70,45,22,39],[70,47,22,39,"_useState9"],[70,57,22,39],[71,6,22,9,"score"],[71,11,22,14],[71,14,22,14,"_useState0"],[71,24,22,14],[72,6,22,16,"setScore"],[72,14,22,24],[72,17,22,24,"_useState0"],[72,27,22,24],[73,4,23,2],[73,8,23,2,"_useState1"],[73,18,23,2],[73,21,23,28],[73,25,23,28,"useState"],[73,31,23,36],[73,32,23,36,"useState"],[73,40,23,36],[73,42,23,37],[73,43,23,38],[73,44,23,39],[74,6,23,39,"_useState10"],[74,17,23,39],[74,24,23,39,"_slicedToArray"],[74,38,23,39],[74,39,23,39,"default"],[74,46,23,39],[74,48,23,39,"_useState1"],[74,58,23,39],[75,6,23,9,"lines"],[75,11,23,14],[75,14,23,14,"_useState10"],[75,25,23,14],[76,6,23,16,"setLines"],[76,14,23,24],[76,17,23,24,"_useState10"],[76,28,23,24],[77,4,24,2],[77,8,24,2,"_useState11"],[77,19,24,2],[77,22,24,34],[77,26,24,34,"useState"],[77,32,24,42],[77,33,24,42,"useState"],[77,41,24,42],[77,43,24,43],[77,48,24,48],[77,49,24,49],[78,6,24,49,"_useState12"],[78,17,24,49],[78,24,24,49,"_slicedToArray"],[78,38,24,49],[78,39,24,49,"default"],[78,46,24,49],[78,48,24,49,"_useState11"],[78,59,24,49],[79,6,24,9,"gameOver"],[79,14,24,17],[79,17,24,17,"_useState12"],[79,28,24,17],[80,6,24,19,"setGameOver"],[80,17,24,30],[80,20,24,30,"_useState12"],[80,31,24,30],[81,4,25,2],[81,8,25,2,"_useState13"],[81,19,25,2],[81,22,25,30],[81,26,25,30,"useState"],[81,32,25,38],[81,33,25,38,"useState"],[81,41,25,38],[81,43,25,39],[81,48,25,44],[81,49,25,45],[82,6,25,45,"_useState14"],[82,17,25,45],[82,24,25,45,"_slicedToArray"],[82,38,25,45],[82,39,25,45,"default"],[82,46,25,45],[82,48,25,45,"_useState13"],[82,59,25,45],[83,6,25,9,"paused"],[83,12,25,15],[83,15,25,15,"_useState14"],[83,26,25,15],[84,6,25,17,"setPaused"],[84,15,25,26],[84,18,25,26,"_useState14"],[84,29,25,26],[85,4,26,2],[85,8,26,2,"_useState15"],[85,19,26,2],[85,22,26,36],[85,26,26,36,"useState"],[85,32,26,44],[85,33,26,44,"useState"],[85,41,26,44],[85,43,26,45],[85,47,26,49],[85,48,26,50],[86,6,26,50,"_useState16"],[86,17,26,50],[86,24,26,50,"_slicedToArray"],[86,38,26,50],[86,39,26,50,"default"],[86,46,26,50],[86,48,26,50,"_useState15"],[86,59,26,50],[87,6,26,9,"nextPiece"],[87,15,26,18],[87,18,26,18,"_useState16"],[87,29,26,18],[88,6,26,20,"setNextPiece"],[88,18,26,32],[88,21,26,32,"_useState16"],[88,32,26,32],[89,4,28,2],[89,8,28,2,"_useState17"],[89,19,28,2],[89,22,28,48],[89,26,28,48,"useState"],[89,32,28,56],[89,33,28,56,"useState"],[89,41,28,56],[89,43,28,57],[89,47,28,61],[89,48,28,62],[90,6,28,62,"_useState18"],[90,17,28,62],[90,24,28,62,"_slicedToArray"],[90,38,28,62],[90,39,28,62,"default"],[90,46,28,62],[90,48,28,62,"_useState17"],[90,59,28,62],[91,6,28,9,"currentPlayerId"],[91,21,28,24],[91,24,28,24,"_useState18"],[91,35,28,24],[92,6,28,26,"setCurrentPlayerId"],[92,24,28,44],[92,27,28,44,"_useState18"],[92,38,28,44],[93,4,29,2],[93,8,29,2,"_useState19"],[93,19,29,2],[93,22,29,30],[93,26,29,30,"useState"],[93,32,29,38],[93,33,29,38,"useState"],[93,41,29,38],[93,43,29,39],[93,47,29,43],[93,48,29,44],[94,6,29,44,"_useState20"],[94,17,29,44],[94,24,29,44,"_slicedToArray"],[94,38,29,44],[94,39,29,44,"default"],[94,46,29,44],[94,48,29,44,"_useState19"],[94,59,29,44],[95,6,29,9,"gameId"],[95,12,29,15],[95,15,29,15,"_useState20"],[95,26,29,15],[96,6,29,17,"setGameId"],[96,15,29,26],[96,18,29,26,"_useState20"],[96,29,29,26],[97,4,30,2],[97,8,30,8,"gameLoopRef"],[97,19,30,19],[97,22,30,22],[97,26,30,22,"useRef"],[97,32,30,28],[97,33,30,28,"useRef"],[97,39,30,28],[97,41,30,29],[97,42,30,30],[98,4,31,2],[98,8,31,8,"dropTimeRef"],[98,19,31,19],[98,22,31,22],[98,26,31,22,"useRef"],[98,32,31,28],[98,33,31,28,"useRef"],[98,39,31,28],[98,41,31,29],[98,44,31,32],[98,45,31,33],[99,4,33,2],[99,8,33,2,"useEffect"],[99,14,33,11],[99,15,33,11,"useEffect"],[99,24,33,11],[99,26,33,12],[99,32,33,18],[100,6,34,4],[100,10,34,10,"loadPlayerId"],[100,22,34,22],[101,8,34,22],[101,12,34,22,"_ref"],[101,16,34,22],[101,23,34,22,"_asyncToGenerator"],[101,40,34,22],[101,41,34,22,"default"],[101,48,34,22],[101,50,34,25],[101,63,34,37],[102,10,35,6],[102,14,35,12,"savedPlayerId"],[102,27,35,25],[102,36,35,34,"AsyncStorage"],[102,48,35,46],[102,49,35,46,"default"],[102,56,35,46],[102,57,35,47,"getItem"],[102,64,35,54],[102,65,35,55],[102,87,35,77],[102,88,35,78],[103,10,36,6,"setCurrentPlayerId"],[103,28,36,24],[103,29,36,25,"savedPlayerId"],[103,42,36,38],[103,45,36,41,"parseInt"],[103,53,36,49],[103,54,36,50,"savedPlayerId"],[103,67,36,63],[103,68,36,64],[103,71,36,67],[103,72,36,68],[103,73,36,69],[104,8,37,4],[104,9,37,5],[105,8,37,5],[105,24,34,10,"loadPlayerId"],[105,36,34,22,"loadPlayerId"],[105,37,34,22],[106,10,34,22],[106,17,34,22,"_ref"],[106,21,34,22],[106,22,34,22,"apply"],[106,27,34,22],[106,34,34,22,"arguments"],[106,43,34,22],[107,8,34,22],[108,6,34,22],[108,9,37,5],[109,6,38,4,"loadPlayerId"],[109,18,38,16],[109,19,38,17],[109,20,38,18],[110,4,39,2],[110,5,39,3],[110,7,39,5],[110,9,39,7],[110,10,39,8],[111,4,41,2],[111,8,41,2,"useEffect"],[111,14,41,11],[111,15,41,11,"useEffect"],[111,24,41,11],[111,26,41,12],[111,32,41,18],[112,6,42,4],[112,10,42,8,"mounted"],[112,17,42,15],[112,20,42,18],[112,24,42,22],[113,6,43,4],[113,10,43,10,"setupGameTracking"],[113,27,43,27],[114,8,43,27],[114,12,43,27,"_ref2"],[114,17,43,27],[114,24,43,27,"_asyncToGenerator"],[114,41,43,27],[114,42,43,27,"default"],[114,49,43,27],[114,51,43,30],[114,64,43,42],[115,10,44,6],[115,14,44,10],[115,15,44,11,"currentPlayerId"],[115,30,44,26],[115,32,44,28],[116,10,45,6],[116,14,45,12,"id"],[116,16,45,14],[116,25,45,23],[116,29,45,23,"getGameId"],[116,44,45,32],[116,45,45,32,"getGameId"],[116,54,45,32],[116,56,45,33,"GAME_TYPES"],[116,71,45,43],[116,72,45,43,"GAME_TYPES"],[116,82,45,43],[116,83,45,44,"TETRIS"],[116,89,45,50],[116,90,45,51],[117,10,46,6],[117,14,46,10,"id"],[117,16,46,12],[117,20,46,16,"mounted"],[117,27,46,23],[117,29,46,25],[118,12,47,8,"setGameId"],[118,21,47,17],[118,22,47,18,"id"],[118,24,47,20],[118,25,47,21],[119,12,48,8],[119,18,48,14,"gameTracker"],[119,29,48,25],[119,30,48,25,"default"],[119,37,48,25],[119,38,48,26,"startGame"],[119,47,48,35],[119,48,48,36,"id"],[119,50,48,38],[119,52,48,40,"currentPlayerId"],[119,67,48,55],[119,68,48,56],[120,10,49,6],[121,8,50,4],[121,9,50,5],[122,8,50,5],[122,24,43,10,"setupGameTracking"],[122,41,43,27,"setupGameTracking"],[122,42,43,27],[123,10,43,27],[123,17,43,27,"_ref2"],[123,22,43,27],[123,23,43,27,"apply"],[123,28,43,27],[123,35,43,27,"arguments"],[123,44,43,27],[124,8,43,27],[125,6,43,27],[125,9,50,5],[126,6,51,4,"setupGameTracking"],[126,23,51,21],[126,24,51,22],[126,25,51,23],[127,6,52,4],[127,13,52,11],[127,19,52,17],[128,8,53,6,"mounted"],[128,15,53,13],[128,18,53,16],[128,23,53,21],[129,6,54,4],[129,7,54,5],[130,4,55,2],[130,5,55,3],[130,7,55,5],[130,8,55,6,"currentPlayerId"],[130,23,55,21],[130,24,55,22],[130,25,55,23],[131,4,57,2],[131,8,57,8,"initializeGame"],[131,22,57,22],[131,25,57,25],[131,29,57,25,"useCallback"],[131,35,57,36],[131,36,57,36,"useCallback"],[131,47,57,36],[131,49,57,37],[131,55,57,43],[132,6,58,4],[132,10,58,10,"emptyBoard"],[132,20,58,20],[132,23,58,23],[132,27,58,23,"createEmptyBoard"],[132,44,58,39],[132,45,58,39,"createEmptyBoard"],[132,61,58,39],[132,63,58,40],[132,64,58,41],[133,6,59,4],[133,10,59,10,"firstPieceType"],[133,24,59,24],[133,27,59,27],[133,31,59,27,"getRandomPieceType"],[133,48,59,45],[133,49,59,45,"getRandomPieceType"],[133,67,59,45],[133,69,59,46],[133,70,59,47],[134,6,60,4],[134,10,60,10,"firstPiece"],[134,20,60,20],[134,23,60,23],[134,27,60,23,"createPiece"],[134,44,60,34],[134,45,60,34,"createPiece"],[134,56,60,34],[134,58,60,35,"firstPieceType"],[134,72,60,49],[134,73,60,50],[135,6,61,4],[135,10,61,10,"firstNextPiece"],[135,24,61,24],[135,27,61,27],[135,31,61,27,"getRandomPieceType"],[135,48,61,45],[135,49,61,45,"getRandomPieceType"],[135,67,61,45],[135,69,61,46],[135,70,61,47],[136,6,63,4,"setBoard"],[136,14,63,12],[136,15,63,13,"emptyBoard"],[136,25,63,23],[136,26,63,24],[137,6,64,4,"setCurrentPiece"],[137,21,64,19],[137,22,64,20,"firstPiece"],[137,32,64,30],[137,33,64,31],[138,6,65,4,"setCurrentPosition"],[138,24,65,22],[138,25,65,23],[139,8,65,25,"x"],[139,9,65,26],[139,11,65,28,"Math"],[139,15,65,32],[139,16,65,33,"floor"],[139,21,65,38],[139,22,65,39,"BOARD_WIDTH"],[139,43,65,50],[139,44,65,50,"BOARD_WIDTH"],[139,55,65,50],[139,58,65,53],[139,59,65,54],[139,60,65,55],[139,63,65,58],[139,64,65,59],[140,8,65,61,"y"],[140,9,65,62],[140,11,65,64],[141,6,65,66],[141,7,65,67],[141,8,65,68],[142,6,66,4,"setCurrentRotation"],[142,24,66,22],[142,25,66,23],[142,26,66,24],[142,27,66,25],[143,6,67,4,"setNextPiece"],[143,18,67,16],[143,19,67,17,"firstNextPiece"],[143,33,67,31],[143,34,67,32],[144,6,68,4,"setScore"],[144,14,68,12],[144,15,68,13],[144,16,68,14],[144,17,68,15],[145,6,69,4,"setLines"],[145,14,69,12],[145,15,69,13],[145,16,69,14],[145,17,69,15],[146,6,70,4,"setGameOver"],[146,17,70,15],[146,18,70,16],[146,23,70,21],[146,24,70,22],[147,6,71,4,"setPaused"],[147,15,71,13],[147,16,71,14],[147,21,71,19],[147,22,71,20],[148,4,72,2],[148,5,72,3],[148,7,72,5],[148,9,72,7],[148,10,72,8],[149,4,74,2],[149,8,74,8,"movePiece"],[149,17,74,17],[149,20,74,20],[149,24,74,20,"useCallback"],[149,30,74,31],[149,31,74,31,"useCallback"],[149,42,74,31],[149,44,75,5,"direction"],[149,53,75,14],[149,57,75,19],[150,6,76,6],[150,10,76,10,"gameOver"],[150,18,76,18],[150,22,76,22,"paused"],[150,28,76,28],[150,32,76,32],[150,33,76,33,"currentPiece"],[150,45,76,45],[150,47,76,47],[151,6,78,6],[151,10,78,10,"newPosition"],[151,21,78,21],[151,24,78,24],[152,8,78,26],[152,11,78,29,"currentPosition"],[153,6,78,45],[153,7,78,46],[154,6,79,6],[154,10,79,10,"direction"],[154,19,79,19],[154,24,79,24],[154,30,79,30],[154,32,79,32,"newPosition"],[154,43,79,43],[154,44,79,44,"x"],[154,45,79,45],[154,49,79,49],[154,50,79,50],[155,6,80,6],[155,10,80,10,"direction"],[155,19,80,19],[155,24,80,24],[155,31,80,31],[155,33,80,33,"newPosition"],[155,44,80,44],[155,45,80,45,"x"],[155,46,80,46],[155,50,80,50],[155,51,80,51],[156,6,81,6],[156,10,81,10,"direction"],[156,19,81,19],[156,24,81,24],[156,30,81,30],[156,32,81,32,"newPosition"],[156,43,81,43],[156,44,81,44,"y"],[156,45,81,45],[156,49,81,49],[156,50,81,50],[157,6,83,6],[157,10,83,10],[157,14,83,10,"isValidPosition"],[157,31,83,25],[157,32,83,25,"isValidPosition"],[157,47,83,25],[157,49,83,26,"board"],[157,54,83,31],[157,56,83,33,"currentPiece"],[157,68,83,45],[157,70,83,47,"newPosition"],[157,81,83,58],[157,83,83,60,"currentRotation"],[157,98,83,75],[157,99,83,76],[157,101,83,78],[158,8,84,8,"setCurrentPosition"],[158,26,84,26],[158,27,84,27,"newPosition"],[158,38,84,38],[158,39,84,39],[159,8,85,8,"Haptics"],[159,15,85,15],[159,16,85,16,"impactAsync"],[159,27,85,27],[159,28,85,28,"Haptics"],[159,35,85,35],[159,36,85,36,"ImpactFeedbackStyle"],[159,55,85,55],[159,56,85,56,"Light"],[159,61,85,61],[159,62,85,62],[160,6,86,6],[161,4,87,4],[161,5,87,5],[161,7,88,4],[161,8,88,5,"board"],[161,13,88,10],[161,15,88,12,"currentPiece"],[161,27,88,24],[161,29,88,26,"currentPosition"],[161,44,88,41],[161,46,88,43,"currentRotation"],[161,61,88,58],[161,63,88,60,"gameOver"],[161,71,88,68],[161,73,88,70,"paused"],[161,79,88,76],[161,80,89,2],[161,81,89,3],[162,4,91,2],[162,8,91,8,"rotatePiece"],[162,19,91,19],[162,22,91,22],[162,26,91,22,"useCallback"],[162,32,91,33],[162,33,91,33,"useCallback"],[162,44,91,33],[162,46,91,34],[162,52,91,40],[163,6,92,4],[163,10,92,8,"gameOver"],[163,18,92,16],[163,22,92,20,"paused"],[163,28,92,26],[163,32,92,30],[163,33,92,31,"currentPiece"],[163,45,92,43],[163,47,92,45],[164,6,93,4],[164,10,93,10,"newRotation"],[164,21,93,21],[164,24,93,24],[164,25,93,25,"currentRotation"],[164,40,93,40],[164,43,93,43],[164,44,93,44],[164,48,93,48],[164,49,93,49],[165,6,94,4],[165,10,94,8],[165,14,94,8,"isValidPosition"],[165,31,94,23],[165,32,94,23,"isValidPosition"],[165,47,94,23],[165,49,94,24,"board"],[165,54,94,29],[165,56,94,31,"currentPiece"],[165,68,94,43],[165,70,94,45,"currentPosition"],[165,85,94,60],[165,87,94,62,"newRotation"],[165,98,94,73],[165,99,94,74],[165,101,94,76],[166,8,95,6,"setCurrentRotation"],[166,26,95,24],[166,27,95,25,"newRotation"],[166,38,95,36],[166,39,95,37],[167,8,96,6,"Haptics"],[167,15,96,13],[167,16,96,14,"impactAsync"],[167,27,96,25],[167,28,96,26,"Haptics"],[167,35,96,33],[167,36,96,34,"ImpactFeedbackStyle"],[167,55,96,53],[167,56,96,54,"Medium"],[167,62,96,60],[167,63,96,61],[168,6,97,4],[169,4,98,2],[169,5,98,3],[169,7,98,5],[169,8,98,6,"board"],[169,13,98,11],[169,15,98,13,"currentPiece"],[169,27,98,25],[169,29,98,27,"currentPosition"],[169,44,98,42],[169,46,98,44,"currentRotation"],[169,61,98,59],[169,63,98,61,"gameOver"],[169,71,98,69],[169,73,98,71,"paused"],[169,79,98,77],[169,80,98,78],[169,81,98,79],[170,4,100,2],[170,8,100,8,"dropPiece"],[170,17,100,17],[170,20,100,20],[170,24,100,20,"useCallback"],[170,30,100,31],[170,31,100,31,"useCallback"],[170,42,100,31],[170,44,100,32],[170,50,100,38],[171,6,101,4],[171,10,101,8,"gameOver"],[171,18,101,16],[171,22,101,20,"paused"],[171,28,101,26],[171,32,101,30],[171,33,101,31,"currentPiece"],[171,45,101,43],[171,47,101,45],[172,6,103,4],[172,10,103,10,"newPosition"],[172,21,103,21],[172,24,103,24],[173,8,103,26],[173,11,103,29,"currentPosition"],[173,26,103,44],[174,8,103,46,"y"],[174,9,103,47],[174,11,103,49,"currentPosition"],[174,26,103,64],[174,27,103,65,"y"],[174,28,103,66],[174,31,103,69],[175,6,103,71],[175,7,103,72],[176,6,105,4],[176,10,105,8],[176,14,105,8,"isValidPosition"],[176,31,105,23],[176,32,105,23,"isValidPosition"],[176,47,105,23],[176,49,105,24,"board"],[176,54,105,29],[176,56,105,31,"currentPiece"],[176,68,105,43],[176,70,105,45,"newPosition"],[176,81,105,56],[176,83,105,58,"currentRotation"],[176,98,105,73],[176,99,105,74],[176,101,105,76],[177,8,106,6,"setCurrentPosition"],[177,26,106,24],[177,27,106,25,"newPosition"],[177,38,106,36],[177,39,106,37],[178,6,107,4],[178,7,107,5],[178,13,107,11],[179,8,108,6],[179,12,108,12,"newBoard"],[179,20,108,20],[179,23,108,23],[179,27,108,23,"lockPiece"],[179,44,108,32],[179,45,108,32,"lockPiece"],[179,54,108,32],[179,56,109,8,"board"],[179,61,109,13],[179,63,110,8,"currentPiece"],[179,75,110,20],[179,77,111,8,"currentPosition"],[179,92,111,23],[179,94,112,8,"currentRotation"],[179,109,113,6],[179,110,113,7],[180,8,114,6],[180,12,114,6,"_clearLines"],[180,23,114,6],[180,26,114,52],[180,30,114,52,"clearLines"],[180,47,114,62],[180,48,114,62,"clearLines"],[180,58,114,62],[180,60,114,63,"newBoard"],[180,68,114,71],[180,69,114,72],[181,10,114,21,"clearedBoard"],[181,22,114,33],[181,25,114,33,"_clearLines"],[181,36,114,33],[181,37,114,14,"board"],[181,42,114,19],[182,10,114,35,"linesCleared"],[182,22,114,47],[182,25,114,47,"_clearLines"],[182,36,114,47],[182,37,114,35,"linesCleared"],[182,49,114,47],[183,8,115,6,"setBoard"],[183,16,115,14],[183,17,115,15,"clearedBoard"],[183,29,115,27],[183,30,115,28],[184,8,117,6],[184,12,117,10,"linesCleared"],[184,24,117,22],[184,27,117,25],[184,28,117,26],[184,30,117,28],[185,10,118,8],[185,14,118,14,"points"],[185,20,118,20],[185,23,118,23],[185,27,118,23,"calculateScore"],[185,44,118,37],[185,45,118,37,"calculateScore"],[185,59,118,37],[185,61,118,38,"linesCleared"],[185,73,118,50],[185,75,118,52,"Math"],[185,79,118,56],[185,80,118,57,"floor"],[185,85,118,62],[185,86,118,63,"lines"],[185,91,118,68],[185,94,118,71],[185,96,118,73],[185,97,118,74],[185,100,118,77],[185,101,118,78],[185,102,118,79],[186,10,119,8,"setScore"],[186,18,119,16],[186,19,119,18,"prev"],[186,23,119,22],[186,27,119,27,"prev"],[186,31,119,31],[186,34,119,34,"points"],[186,40,119,40],[186,41,119,41],[187,10,120,8,"setLines"],[187,18,120,16],[187,19,120,18,"prev"],[187,23,120,22],[187,27,120,27,"prev"],[187,31,120,31],[187,34,120,34,"linesCleared"],[187,46,120,46],[187,47,120,47],[188,10,121,8,"Haptics"],[188,17,121,15],[188,18,121,16,"notificationAsync"],[188,35,121,33],[188,36,121,34,"Haptics"],[188,43,121,41],[188,44,121,42,"NotificationFeedbackType"],[188,68,121,66],[188,69,121,67,"Success"],[188,76,121,74],[188,77,121,75],[189,8,122,6],[190,8,124,6],[190,12,124,12,"newPieceType"],[190,24,124,24],[190,27,124,27,"nextPiece"],[190,36,124,36],[191,8,125,6],[191,12,125,12,"newPiece"],[191,20,125,20],[191,23,125,23],[191,27,125,23,"createPiece"],[191,44,125,34],[191,45,125,34,"createPiece"],[191,56,125,34],[191,58,125,35,"newPieceType"],[191,70,125,47],[191,71,125,48],[192,8,126,6],[192,12,126,12,"spawnPosition"],[192,25,126,25],[192,28,126,28],[193,10,126,30,"x"],[193,11,126,31],[193,13,126,33,"Math"],[193,17,126,37],[193,18,126,38,"floor"],[193,23,126,43],[193,24,126,44,"BOARD_WIDTH"],[193,45,126,55],[193,46,126,55,"BOARD_WIDTH"],[193,57,126,55],[193,60,126,58],[193,61,126,59],[193,62,126,60],[193,65,126,63],[193,66,126,64],[194,10,126,66,"y"],[194,11,126,67],[194,13,126,69],[195,8,126,71],[195,9,126,72],[196,8,128,6],[196,12,128,10],[196,16,128,10,"isValidPosition"],[196,33,128,25],[196,34,128,25,"isValidPosition"],[196,49,128,25],[196,51,128,26,"clearedBoard"],[196,63,128,38],[196,65,128,40,"newPiece"],[196,73,128,48],[196,75,128,50,"spawnPosition"],[196,88,128,63],[196,90,128,65],[196,91,128,66],[196,92,128,67],[196,94,128,69],[197,10,129,8,"setCurrentPiece"],[197,25,129,23],[197,26,129,24,"newPiece"],[197,34,129,32],[197,35,129,33],[198,10,130,8,"setCurrentPosition"],[198,28,130,26],[198,29,130,27,"spawnPosition"],[198,42,130,40],[198,43,130,41],[199,10,131,8,"setCurrentRotation"],[199,28,131,26],[199,29,131,27],[199,30,131,28],[199,31,131,29],[200,10,132,8,"setNextPiece"],[200,22,132,20],[200,23,132,21],[200,27,132,21,"getRandomPieceType"],[200,44,132,39],[200,45,132,39,"getRandomPieceType"],[200,63,132,39],[200,65,132,40],[200,66,132,41],[200,67,132,42],[201,8,133,6],[201,9,133,7],[201,15,133,13],[202,10,134,8,"setGameOver"],[202,21,134,19],[202,22,134,20],[202,26,134,24],[202,27,134,25],[203,10,135,8],[203,14,135,14,"finalScore"],[203,24,135,24],[203,27,136,10,"score"],[203,32,136,15],[203,36,137,11,"linesCleared"],[203,48,137,23],[203,51,137,26],[203,52,137,27],[203,55,138,14],[203,59,138,14,"calculateScore"],[203,76,138,28],[203,77,138,28,"calculateScore"],[203,91,138,28],[203,93,138,29,"linesCleared"],[203,105,138,41],[203,107,138,43,"Math"],[203,111,138,47],[203,112,138,48,"floor"],[203,117,138,53],[203,118,138,54,"lines"],[203,123,138,59],[203,126,138,62],[203,128,138,64],[203,129,138,65],[203,132,138,68],[203,133,138,69],[203,134,138,70],[203,137,139,14],[203,138,139,15],[203,139,139,16],[204,10,140,8],[204,14,140,12,"gameId"],[204,20,140,18],[204,22,140,20],[205,12,141,10,"gameTracker"],[205,23,141,21],[205,24,141,21,"default"],[205,31,141,21],[205,32,141,22,"endGame"],[205,39,141,29],[205,40,141,30,"gameId"],[205,46,141,36],[205,48,141,38,"finalScore"],[205,58,141,48],[205,59,141,49],[206,10,142,8],[207,8,143,6],[208,6,144,4],[209,4,145,2],[209,5,145,3],[209,7,145,5],[209,8,146,4,"board"],[209,13,146,9],[209,15,147,4,"currentPiece"],[209,27,147,16],[209,29,148,4,"currentPosition"],[209,44,148,19],[209,46,149,4,"currentRotation"],[209,61,149,19],[209,63,150,4,"gameOver"],[209,71,150,12],[209,73,151,4,"paused"],[209,79,151,10],[209,81,152,4,"score"],[209,86,152,9],[209,88,153,4,"lines"],[209,93,153,9],[209,95,154,4,"nextPiece"],[209,104,154,13],[209,106,155,4,"gameId"],[209,112,155,10],[209,113,156,3],[209,114,156,4],[210,4,158,2],[210,8,158,2,"useEffect"],[210,14,158,11],[210,15,158,11,"useEffect"],[210,24,158,11],[210,26,158,12],[210,32,158,18],[211,6,159,4],[211,10,159,8],[211,11,159,9,"gameOver"],[211,19,159,17],[211,23,159,21],[211,24,159,22,"paused"],[211,30,159,28],[211,34,159,32,"currentPiece"],[211,46,159,44],[211,48,159,46],[212,8,160,6,"dropTimeRef"],[212,19,160,17],[212,20,160,18,"current"],[212,27,160,25],[212,30,160,28,"Math"],[212,34,160,32],[212,35,160,33,"max"],[212,38,160,36],[212,39,160,37],[212,41,160,39],[212,43,160,41],[212,46,160,44],[212,49,160,47,"Math"],[212,53,160,51],[212,54,160,52,"floor"],[212,59,160,57],[212,60,160,58,"lines"],[212,65,160,63],[212,68,160,66],[212,69,160,67],[212,70,160,68],[212,73,160,71],[212,75,160,73],[212,76,160,74],[213,8,161,6,"gameLoopRef"],[213,19,161,17],[213,20,161,18,"current"],[213,27,161,25],[213,30,161,28,"setInterval"],[213,41,161,39],[213,42,161,40],[213,48,161,46],[214,10,162,8,"dropPiece"],[214,19,162,17],[214,20,162,18],[214,21,162,19],[215,8,163,6],[215,9,163,7],[215,11,163,9,"dropTimeRef"],[215,22,163,20],[215,23,163,21,"current"],[215,30,163,28],[215,31,163,29],[216,8,164,6],[216,15,164,13],[216,21,164,19,"clearInterval"],[216,34,164,32],[216,35,164,33,"gameLoopRef"],[216,46,164,44],[216,47,164,45,"current"],[216,54,164,52],[216,55,164,53],[217,6,165,4],[218,4,166,2],[218,5,166,3],[218,7,166,5],[218,8,166,6,"dropPiece"],[218,17,166,15],[218,19,166,17,"gameOver"],[218,27,166,25],[218,29,166,27,"paused"],[218,35,166,33],[218,37,166,35,"lines"],[218,42,166,40],[218,44,166,42,"currentPiece"],[218,56,166,54],[218,57,166,55],[218,58,166,56],[219,4,168,2],[219,8,168,2,"useEffect"],[219,14,168,11],[219,15,168,11,"useEffect"],[219,24,168,11],[219,26,168,12],[219,32,168,18],[220,6,169,4,"initializeGame"],[220,20,169,18],[220,21,169,19],[220,22,169,20],[221,4,170,2],[221,5,170,3],[221,7,170,5],[221,8,170,6,"initializeGame"],[221,22,170,20],[221,23,170,21],[221,24,170,22],[222,4,172,2],[222,8,172,8,"togglePause"],[222,19,172,19],[222,22,172,22,"togglePause"],[222,23,172,22],[222,28,172,28],[223,6,173,4],[223,10,173,8],[223,11,173,9,"gameOver"],[223,19,173,17],[223,21,173,19],[224,8,174,6,"setPaused"],[224,17,174,15],[224,18,174,16],[224,19,174,17,"paused"],[224,25,174,23],[224,26,174,24],[225,8,175,6,"Haptics"],[225,15,175,13],[225,16,175,14,"impactAsync"],[225,27,175,25],[225,28,175,26,"Haptics"],[225,35,175,33],[225,36,175,34,"ImpactFeedbackStyle"],[225,55,175,53],[225,56,175,54,"Medium"],[225,62,175,60],[225,63,175,61],[226,6,176,4],[227,4,177,2],[227,5,177,3],[228,4,179,2],[228,8,179,8,"getDisplayBoard"],[228,23,179,23],[228,26,179,26,"getDisplayBoard"],[228,27,179,26],[228,32,179,32],[229,6,180,4],[229,10,180,10,"displayBoard"],[229,22,180,22],[229,25,180,25,"board"],[229,30,180,30],[229,31,180,31,"map"],[229,34,180,34],[229,35,180,36,"row"],[229,38,180,39],[229,42,180,44,"row"],[229,45,180,47],[229,46,180,48,"map"],[229,49,180,51],[229,50,180,53,"cell"],[229,54,180,57],[229,59,180,63],[230,8,180,65],[230,11,180,68,"cell"],[231,6,180,73],[231,7,180,74],[231,8,180,75],[231,9,180,76],[231,10,180,77],[232,6,181,4],[232,10,181,8,"currentPiece"],[232,22,181,20],[232,26,181,24],[232,27,181,25,"gameOver"],[232,35,181,33],[232,37,181,35],[233,8,182,6],[233,12,182,12,"shape"],[233,17,182,17],[233,20,182,20,"PIECES"],[233,41,182,26],[233,42,182,26,"PIECES"],[233,48,182,26],[233,49,182,27,"currentPiece"],[233,61,182,39],[233,62,182,40,"type"],[233,66,182,44],[233,67,182,45],[233,68,182,46,"shape"],[233,73,182,51],[233,74,182,52,"currentRotation"],[233,89,182,67],[233,90,182,68],[234,8,183,6],[234,13,183,11],[234,17,183,15,"row"],[234,20,183,18],[234,23,183,21],[234,24,183,22],[234,26,183,24,"row"],[234,29,183,27],[234,32,183,30],[234,33,183,31],[234,35,183,33,"row"],[234,38,183,36],[234,40,183,38],[234,42,183,40],[235,10,184,8],[235,15,184,13],[235,19,184,17,"col"],[235,22,184,20],[235,25,184,23],[235,26,184,24],[235,28,184,26,"col"],[235,31,184,29],[235,34,184,32],[235,35,184,33],[235,37,184,35,"col"],[235,40,184,38],[235,42,184,40],[235,44,184,42],[236,12,185,10],[236,16,185,14,"shape"],[236,21,185,19],[236,22,185,20,"row"],[236,25,185,23],[236,26,185,24],[236,27,185,25,"col"],[236,30,185,28],[236,31,185,29],[236,33,185,31],[237,14,186,12],[237,18,186,18,"boardRow"],[237,26,186,26],[237,29,186,29,"currentPosition"],[237,44,186,44],[237,45,186,45,"y"],[237,46,186,46],[237,49,186,49,"row"],[237,52,186,52],[238,14,187,12],[238,18,187,18,"boardCol"],[238,26,187,26],[238,29,187,29,"currentPosition"],[238,44,187,44],[238,45,187,45,"x"],[238,46,187,46],[238,49,187,49,"col"],[238,52,187,52],[239,14,188,12],[239,18,189,14,"boardRow"],[239,26,189,22],[239,30,189,26],[239,31,189,27],[239,35,190,14,"boardRow"],[239,43,190,22],[239,46,190,25,"BOARD_HEIGHT"],[239,67,190,37],[239,68,190,37,"BOARD_HEIGHT"],[239,80,190,37],[239,84,191,14,"boardCol"],[239,92,191,22],[239,96,191,26],[239,97,191,27],[239,101,192,14,"boardCol"],[239,109,192,22],[239,112,192,25,"BOARD_WIDTH"],[239,133,192,36],[239,134,192,36,"BOARD_WIDTH"],[239,145,192,36],[239,147,193,14],[240,16,194,14,"displayBoard"],[240,28,194,26],[240,29,194,27,"boardRow"],[240,37,194,35],[240,38,194,36],[240,39,194,37,"boardCol"],[240,47,194,45],[240,48,194,46],[240,51,194,49],[241,18,195,16,"filled"],[241,24,195,22],[241,26,195,24],[241,30,195,28],[242,18,196,16,"color"],[242,23,196,21],[242,25,196,23,"currentPiece"],[242,37,196,35],[242,38,196,36,"color"],[243,16,197,14],[243,17,197,15],[244,14,198,12],[245,12,199,10],[246,10,200,8],[247,8,201,6],[248,6,202,4],[249,6,203,4],[249,13,203,11,"displayBoard"],[249,25,203,23],[250,4,204,2],[250,5,204,3],[251,4,206,2],[251,11,206,9],[252,6,207,4,"board"],[252,11,207,9],[252,13,207,11,"getDisplayBoard"],[252,28,207,26],[252,29,207,27],[252,30,207,28],[253,6,208,4,"score"],[253,11,208,9],[254,6,209,4,"lines"],[254,11,209,9],[255,6,210,4,"gameOver"],[255,14,210,12],[256,6,211,4,"paused"],[256,12,211,10],[257,6,212,4,"initializeGame"],[257,20,212,18],[258,6,213,4,"movePiece"],[258,15,213,13],[259,6,214,4,"rotatePiece"],[259,17,214,15],[260,6,215,4,"togglePause"],[261,4,216,2],[261,5,216,3],[262,2,217,0],[262,3,217,1],[263,2,217,2,"_s"],[263,4,217,2],[263,5,17,13,"useTetrisGame"],[263,18,17,26],[264,0,17,26],[264,3]],"functionMap":{"names":["<global>","useTetrisGame","useEffect$argument_0","loadPlayerId","setupGameTracking","<anonymous>","initializeGame","movePiece","rotatePiece","dropPiece","setScore$argument_0","setLines$argument_0","setInterval$argument_0","togglePause","getDisplayBoard","board.map$argument_0","row.map$argument_0"],"mappings":"AAA;6BCgB;YCgB;yBCC;KDG;GDE;YCE;8BEE;KFO;WGE;KHE;GDC;qCKE;GLe;IMG;KNY;kCOI;GPO;gCQE;iBCmB,uBD;iBEC,6BF;GRyB;YCa;wCUG;OVE;aGC,wCH;GDE;YCE;GDE;sBYE;GZK;0BaE;mCCC,iBC,uBD,CD;GbwB;CDa"},"hasCjsExports":false},"type":"js/module"}]}