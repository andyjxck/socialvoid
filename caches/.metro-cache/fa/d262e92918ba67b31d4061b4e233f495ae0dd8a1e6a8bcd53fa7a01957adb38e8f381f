{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":55,"index":87}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":88},"end":{"line":3,"column":40,"index":128}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../utils/supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":129},"end":{"line":4,"column":45,"index":174}}],"key":"KgrKTv0Nj7G4AeAd80Y1cXS5SgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(); // hooks/usePlaytimeTracking.js\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.usePlaytimeTracking = usePlaytimeTracking;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _utilsSupabase = require(_dependencyMap[3], \"../utils/supabase\");\n  /**\n   * Tracks \"online\" time (app in foreground/active) and updates\n   * players.total_playtime_seconds in Supabase.\n   *\n   * Behavior:\n   * - +1 second counted for every real second the app is ACTIVE\n   * - Flushes to Supabase once per minute with the accumulated seconds\n   * - Also flushes on background/inactive and on unmount with any leftover seconds\n   *\n   * Requirements:\n   * - `players` table with `id` PK and `total_playtime_seconds` int\n   */\n  function usePlaytimeTracking(playerId) {\n    _s();\n    var appStateRef = (0, _react.useRef)(_reactNative.AppState.currentState);\n    var isActiveRef = (0, _react.useRef)(appStateRef.current === \"active\");\n    var secondsSinceFlushRef = (0, _react.useRef)(0);\n    var secondTickerRef = (0, _react.useRef)(null);\n\n    // ---- Supabase: add seconds to players.total_playtime_seconds ----\n    var flushToSupabase = (0, _react.useCallback)(/*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator.default)(function* (deltaSeconds) {\n        var delta = Math.max(0, Math.floor(Number(deltaSeconds) || 0));\n        if (!playerId || delta <= 0) return;\n        try {\n          // Read current total (simple & safe for single-client updates)\n          var _yield$supabase$from$ = yield _utilsSupabase.supabase.from(\"players\").select(\"total_playtime_seconds\").eq(\"id\", playerId).maybeSingle(),\n            row = _yield$supabase$from$.data,\n            selErr = _yield$supabase$from$.error;\n          if (selErr) {\n            console.warn(\"[usePlaytimeTracking] SELECT failed:\", selErr);\n            return;\n          }\n          var current = Number(row?.total_playtime_seconds) || 0;\n          var next = current + delta;\n          var _yield$supabase$from$2 = yield _utilsSupabase.supabase.from(\"players\").update({\n              total_playtime_seconds: next,\n              updated_at: new Date().toISOString()\n            }).eq(\"id\", playerId),\n            updErr = _yield$supabase$from$2.error;\n          if (updErr) {\n            console.warn(\"[usePlaytimeTracking] UPDATE failed:\", updErr);\n            return;\n          }\n\n          // Reset local counter after successful flush\n          secondsSinceFlushRef.current = 0;\n          // Optional: console.log for visibility\n          console.log(`⏱️ Flushed +${delta}s -> total_playtime_seconds=${next}`);\n        } catch (e) {\n          console.warn(\"[usePlaytimeTracking] Flush error:\", e);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), [playerId]);\n\n    // Start ticking 1s when active; stop when not\n    var startSecondTicker = (0, _react.useCallback)(() => {\n      if (secondTickerRef.current) return;\n      secondTickerRef.current = setInterval(() => {\n        if (!playerId) return;\n        if (isActiveRef.current) {\n          secondsSinceFlushRef.current += 1;\n\n          // Flush every full minute\n          if (secondsSinceFlushRef.current >= 60) {\n            var delta = secondsSinceFlushRef.current;\n            // fire & forget; no await inside interval\n            flushToSupabase(delta);\n          }\n        }\n      }, 1000);\n    }, [playerId, flushToSupabase]);\n    var stopSecondTicker = (0, _react.useCallback)(() => {\n      if (secondTickerRef.current) {\n        clearInterval(secondTickerRef.current);\n        secondTickerRef.current = null;\n      }\n    }, []);\n\n    // Manually start/stop (exposed API – optional)\n    var startTracking = (0, _react.useCallback)(() => {\n      isActiveRef.current = true;\n      startSecondTicker();\n    }, [startSecondTicker]);\n    var stopTracking = (0, _react.useCallback)(/*#__PURE__*/(0, _asyncToGenerator.default)(function* () {\n      isActiveRef.current = false;\n      // Flush any remaining seconds immediately\n      var leftover = secondsSinceFlushRef.current;\n      if (leftover > 0) {\n        yield flushToSupabase(leftover);\n      }\n      stopSecondTicker();\n    }), [flushToSupabase, stopSecondTicker]);\n\n    // Effect: wire AppState + lifecycle\n    (0, _react.useEffect)(() => {\n      if (!playerId) return;\n\n      // Initialize based on current state\n      isActiveRef.current = _reactNative.AppState.currentState === \"active\";\n      if (isActiveRef.current) {\n        startSecondTicker();\n      }\n      var handleAppStateChange = /*#__PURE__*/function () {\n        var _ref3 = (0, _asyncToGenerator.default)(function* (next) {\n          var wasActive = isActiveRef.current;\n          var nowActive = next === \"active\";\n          isActiveRef.current = nowActive;\n\n          // If moving to background/inactive – flush any partial seconds\n          if (wasActive && !nowActive) {\n            var leftover = secondsSinceFlushRef.current;\n            if (leftover > 0) {\n              yield flushToSupabase(leftover);\n            }\n          }\n\n          // Manage the second ticker\n          if (nowActive) {\n            startSecondTicker();\n          } else {\n            // we keep ticker running to keep 1s cadence consistent,\n            // but you can stop it if you prefer to be extra conservative:\n            // stopSecondTicker();\n          }\n        });\n        return function handleAppStateChange(_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n      var subscription = _reactNative.AppState.addEventListener(\"change\", handleAppStateChange);\n      return () => {\n        subscription?.remove();\n        // Flush any remaining seconds on unmount\n        (0, _asyncToGenerator.default)(function* () {\n          var leftover = secondsSinceFlushRef.current;\n          if (leftover > 0) {\n            yield flushToSupabase(leftover);\n          }\n          stopSecondTicker();\n        })();\n      };\n    }, [playerId, flushToSupabase, startSecondTicker, stopSecondTicker]);\n    return {\n      startTracking,\n      stopTracking\n    };\n  }\n  _s(usePlaytimeTracking, \"MT7v6HS4vQ1yawesJ16ydTCTnEM=\");\n});","lineCount":171,"map":[[4,27,1,0],[5,2,1,0,"Object"],[5,8,1,0],[5,9,1,0,"defineProperty"],[5,23,1,0],[5,24,1,0,"exports"],[5,31,1,0],[6,4,1,0,"value"],[6,9,1,0],[7,2,1,0],[8,2,1,0],[8,11,1,0,"_interopDefault"],[8,27,1,0,"e"],[8,28,1,0],[9,4,1,0],[9,11,1,0,"e"],[9,12,1,0],[9,16,1,0,"e"],[9,17,1,0],[9,18,1,0,"__esModule"],[9,28,1,0],[9,31,1,0,"e"],[9,32,1,0],[10,6,1,0,"default"],[10,13,1,0],[10,15,1,0,"e"],[11,4,1,0],[12,2,1,0],[13,2,18,0,"exports"],[13,9,18,0],[13,10,18,0,"usePlaytimeTracking"],[13,29,18,0],[13,32,18,0,"usePlaytimeTracking"],[13,51,18,0],[14,2,162,1],[14,6,162,1,"_babelRuntimeHelpersAsyncToGenerator"],[14,42,162,1],[14,45,162,1,"require"],[14,52,162,1],[14,53,162,1,"_dependencyMap"],[14,67,162,1],[15,2,162,1],[15,6,162,1,"_asyncToGenerator"],[15,23,162,1],[15,26,162,1,"_interopDefault"],[15,41,162,1],[15,42,162,1,"_babelRuntimeHelpersAsyncToGenerator"],[15,78,162,1],[16,2,2,0],[16,6,2,0,"_react"],[16,12,2,0],[16,15,2,0,"require"],[16,22,2,0],[16,23,2,0,"_dependencyMap"],[16,37,2,0],[17,2,3,0],[17,6,3,0,"_reactNative"],[17,18,3,0],[17,21,3,0,"require"],[17,28,3,0],[17,29,3,0,"_dependencyMap"],[17,43,3,0],[18,2,4,0],[18,6,4,0,"_utilsSupabase"],[18,20,4,0],[18,23,4,0,"require"],[18,30,4,0],[18,31,4,0,"_dependencyMap"],[18,45,4,0],[19,2,6,0],[20,0,7,0],[21,0,8,0],[22,0,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,0,13,0],[27,0,14,0],[28,0,15,0],[29,0,16,0],[30,0,17,0],[31,2,18,7],[31,11,18,16,"usePlaytimeTracking"],[31,30,18,35,"usePlaytimeTracking"],[31,31,18,36,"playerId"],[31,39,18,44],[31,41,18,46],[32,4,18,46,"_s"],[32,6,18,46],[33,4,19,2],[33,8,19,8,"appStateRef"],[33,19,19,19],[33,22,19,22],[33,26,19,22,"useRef"],[33,32,19,28],[33,33,19,28,"useRef"],[33,39,19,28],[33,41,19,29,"AppState"],[33,53,19,37],[33,54,19,37,"AppState"],[33,62,19,37],[33,63,19,38,"currentState"],[33,75,19,50],[33,76,19,51],[34,4,20,2],[34,8,20,8,"isActiveRef"],[34,19,20,19],[34,22,20,22],[34,26,20,22,"useRef"],[34,32,20,28],[34,33,20,28,"useRef"],[34,39,20,28],[34,41,20,29,"appStateRef"],[34,52,20,40],[34,53,20,41,"current"],[34,60,20,48],[34,65,20,53],[34,73,20,61],[34,74,20,62],[35,4,21,2],[35,8,21,8,"secondsSinceFlushRef"],[35,28,21,28],[35,31,21,31],[35,35,21,31,"useRef"],[35,41,21,37],[35,42,21,37,"useRef"],[35,48,21,37],[35,50,21,38],[35,51,21,39],[35,52,21,40],[36,4,22,2],[36,8,22,8,"secondTickerRef"],[36,23,22,23],[36,26,22,26],[36,30,22,26,"useRef"],[36,36,22,32],[36,37,22,32,"useRef"],[36,43,22,32],[36,45,22,33],[36,49,22,37],[36,50,22,38],[38,4,24,2],[39,4,25,2],[39,8,25,8,"flushToSupabase"],[39,23,25,23],[39,26,25,26],[39,30,25,26,"useCallback"],[39,36,25,37],[39,37,25,37,"useCallback"],[39,48,25,37],[40,6,25,37],[40,10,25,37,"_ref"],[40,14,25,37],[40,21,25,37,"_asyncToGenerator"],[40,38,25,37],[40,39,25,37,"default"],[40,46,25,37],[40,48,26,4],[40,59,26,11,"deltaSeconds"],[40,71,26,23],[40,73,26,28],[41,8,27,6],[41,12,27,12,"delta"],[41,17,27,17],[41,20,27,20,"Math"],[41,24,27,24],[41,25,27,25,"max"],[41,28,27,28],[41,29,27,29],[41,30,27,30],[41,32,27,32,"Math"],[41,36,27,36],[41,37,27,37,"floor"],[41,42,27,42],[41,43,27,43,"Number"],[41,49,27,49],[41,50,27,50,"deltaSeconds"],[41,62,27,62],[41,63,27,63],[41,67,27,67],[41,68,27,68],[41,69,27,69],[41,70,27,70],[42,8,28,6],[42,12,28,10],[42,13,28,11,"playerId"],[42,21,28,19],[42,25,28,23,"delta"],[42,30,28,28],[42,34,28,32],[42,35,28,33],[42,37,28,35],[43,8,30,6],[43,12,30,10],[44,10,31,8],[45,10,32,8],[45,14,32,8,"_yield$supabase$from$"],[45,35,32,8],[45,44,32,51,"supabase"],[45,58,32,59],[45,59,32,59,"supabase"],[45,67,32,59],[45,68,33,11,"from"],[45,72,33,15],[45,73,33,16],[45,82,33,25],[45,83,33,26],[45,84,34,11,"select"],[45,90,34,17],[45,91,34,18],[45,115,34,42],[45,116,34,43],[45,117,35,11,"eq"],[45,119,35,13],[45,120,35,14],[45,124,35,18],[45,126,35,20,"playerId"],[45,134,35,28],[45,135,35,29],[45,136,36,11,"maybeSingle"],[45,147,36,22],[45,148,36,23],[45,149,36,24],[46,12,32,22,"row"],[46,15,32,25],[46,18,32,25,"_yield$supabase$from$"],[46,39,32,25],[46,40,32,16,"data"],[46,44,32,20],[47,12,32,34,"selErr"],[47,18,32,40],[47,21,32,40,"_yield$supabase$from$"],[47,42,32,40],[47,43,32,27,"error"],[47,48,32,32],[48,10,38,8],[48,14,38,12,"selErr"],[48,20,38,18],[48,22,38,20],[49,12,39,10,"console"],[49,19,39,17],[49,20,39,18,"warn"],[49,24,39,22],[49,25,39,23],[49,63,39,61],[49,65,39,63,"selErr"],[49,71,39,69],[49,72,39,70],[50,12,40,10],[51,10,41,8],[52,10,43,8],[52,14,43,14,"current"],[52,21,43,21],[52,24,43,24,"Number"],[52,30,43,30],[52,31,43,31,"row"],[52,34,43,34],[52,36,43,36,"total_playtime_seconds"],[52,58,43,58],[52,59,43,59],[52,63,43,63],[52,64,43,64],[53,10,44,8],[53,14,44,14,"next"],[53,18,44,18],[53,21,44,21,"current"],[53,28,44,28],[53,31,44,31,"delta"],[53,36,44,36],[54,10,46,8],[54,14,46,8,"_yield$supabase$from$2"],[54,36,46,8],[54,45,46,40,"supabase"],[54,59,46,48],[54,60,46,48,"supabase"],[54,68,46,48],[54,69,47,11,"from"],[54,73,47,15],[54,74,47,16],[54,83,47,25],[54,84,47,26],[54,85,48,11,"update"],[54,91,48,17],[54,92,48,18],[55,14,49,12,"total_playtime_seconds"],[55,36,49,34],[55,38,49,36,"next"],[55,42,49,40],[56,14,50,12,"updated_at"],[56,24,50,22],[56,26,50,24],[56,30,50,28,"Date"],[56,34,50,32],[56,35,50,33],[56,36,50,34],[56,37,50,35,"toISOString"],[56,48,50,46],[56,49,50,47],[57,12,51,10],[57,13,51,11],[57,14,51,12],[57,15,52,11,"eq"],[57,17,52,13],[57,18,52,14],[57,22,52,18],[57,24,52,20,"playerId"],[57,32,52,28],[57,33,52,29],[58,12,46,23,"updErr"],[58,18,46,29],[58,21,46,29,"_yield$supabase$from$2"],[58,43,46,29],[58,44,46,16,"error"],[58,49,46,21],[59,10,54,8],[59,14,54,12,"updErr"],[59,20,54,18],[59,22,54,20],[60,12,55,10,"console"],[60,19,55,17],[60,20,55,18,"warn"],[60,24,55,22],[60,25,55,23],[60,63,55,61],[60,65,55,63,"updErr"],[60,71,55,69],[60,72,55,70],[61,12,56,10],[62,10,57,8],[64,10,59,8],[65,10,60,8,"secondsSinceFlushRef"],[65,30,60,28],[65,31,60,29,"current"],[65,38,60,36],[65,41,60,39],[65,42,60,40],[66,10,61,8],[67,10,62,8,"console"],[67,17,62,15],[67,18,62,16,"log"],[67,21,62,19],[67,22,62,20],[67,37,62,35,"delta"],[67,42,62,40],[67,73,62,71,"next"],[67,77,62,75],[67,79,62,77],[67,80,62,78],[68,8,63,6],[68,9,63,7],[68,10,63,8],[68,17,63,15,"e"],[68,18,63,16],[68,20,63,18],[69,10,64,8,"console"],[69,17,64,15],[69,18,64,16,"warn"],[69,22,64,20],[69,23,64,21],[69,59,64,57],[69,61,64,59,"e"],[69,62,64,60],[69,63,64,61],[70,8,65,6],[71,6,66,4],[71,7,66,5],[72,6,66,5],[72,23,66,5,"_x"],[72,25,66,5],[73,8,66,5],[73,15,66,5,"_ref"],[73,19,66,5],[73,20,66,5,"apply"],[73,25,66,5],[73,32,66,5,"arguments"],[73,41,66,5],[74,6,66,5],[75,4,66,5],[75,9,67,4],[75,10,67,5,"playerId"],[75,18,67,13],[75,19,68,2],[75,20,68,3],[77,4,70,2],[78,4,71,2],[78,8,71,8,"startSecondTicker"],[78,25,71,25],[78,28,71,28],[78,32,71,28,"useCallback"],[78,38,71,39],[78,39,71,39,"useCallback"],[78,50,71,39],[78,52,71,40],[78,58,71,46],[79,6,72,4],[79,10,72,8,"secondTickerRef"],[79,25,72,23],[79,26,72,24,"current"],[79,33,72,31],[79,35,72,33],[80,6,73,4,"secondTickerRef"],[80,21,73,19],[80,22,73,20,"current"],[80,29,73,27],[80,32,73,30,"setInterval"],[80,43,73,41],[80,44,73,42],[80,50,73,48],[81,8,74,6],[81,12,74,10],[81,13,74,11,"playerId"],[81,21,74,19],[81,23,74,21],[82,8,76,6],[82,12,76,10,"isActiveRef"],[82,23,76,21],[82,24,76,22,"current"],[82,31,76,29],[82,33,76,31],[83,10,77,8,"secondsSinceFlushRef"],[83,30,77,28],[83,31,77,29,"current"],[83,38,77,36],[83,42,77,40],[83,43,77,41],[85,10,79,8],[86,10,80,8],[86,14,80,12,"secondsSinceFlushRef"],[86,34,80,32],[86,35,80,33,"current"],[86,42,80,40],[86,46,80,44],[86,48,80,46],[86,50,80,48],[87,12,81,10],[87,16,81,16,"delta"],[87,21,81,21],[87,24,81,24,"secondsSinceFlushRef"],[87,44,81,44],[87,45,81,45,"current"],[87,52,81,52],[88,12,82,10],[89,12,83,10,"flushToSupabase"],[89,27,83,25],[89,28,83,26,"delta"],[89,33,83,31],[89,34,83,32],[90,10,84,8],[91,8,85,6],[92,6,86,4],[92,7,86,5],[92,9,86,7],[92,13,86,11],[92,14,86,12],[93,4,87,2],[93,5,87,3],[93,7,87,5],[93,8,87,6,"playerId"],[93,16,87,14],[93,18,87,16,"flushToSupabase"],[93,33,87,31],[93,34,87,32],[93,35,87,33],[94,4,89,2],[94,8,89,8,"stopSecondTicker"],[94,24,89,24],[94,27,89,27],[94,31,89,27,"useCallback"],[94,37,89,38],[94,38,89,38,"useCallback"],[94,49,89,38],[94,51,89,39],[94,57,89,45],[95,6,90,4],[95,10,90,8,"secondTickerRef"],[95,25,90,23],[95,26,90,24,"current"],[95,33,90,31],[95,35,90,33],[96,8,91,6,"clearInterval"],[96,21,91,19],[96,22,91,20,"secondTickerRef"],[96,37,91,35],[96,38,91,36,"current"],[96,45,91,43],[96,46,91,44],[97,8,92,6,"secondTickerRef"],[97,23,92,21],[97,24,92,22,"current"],[97,31,92,29],[97,34,92,32],[97,38,92,36],[98,6,93,4],[99,4,94,2],[99,5,94,3],[99,7,94,5],[99,9,94,7],[99,10,94,8],[101,4,96,2],[102,4,97,2],[102,8,97,8,"startTracking"],[102,21,97,21],[102,24,97,24],[102,28,97,24,"useCallback"],[102,34,97,35],[102,35,97,35,"useCallback"],[102,46,97,35],[102,48,97,36],[102,54,97,42],[103,6,98,4,"isActiveRef"],[103,17,98,15],[103,18,98,16,"current"],[103,25,98,23],[103,28,98,26],[103,32,98,30],[104,6,99,4,"startSecondTicker"],[104,23,99,21],[104,24,99,22],[104,25,99,23],[105,4,100,2],[105,5,100,3],[105,7,100,5],[105,8,100,6,"startSecondTicker"],[105,25,100,23],[105,26,100,24],[105,27,100,25],[106,4,102,2],[106,8,102,8,"stopTracking"],[106,20,102,20],[106,23,102,23],[106,27,102,23,"useCallback"],[106,33,102,34],[106,34,102,34,"useCallback"],[106,45,102,34],[106,64,102,34,"_asyncToGenerator"],[106,81,102,34],[106,82,102,34,"default"],[106,89,102,34],[106,91,102,35],[106,104,102,47],[107,6,103,4,"isActiveRef"],[107,17,103,15],[107,18,103,16,"current"],[107,25,103,23],[107,28,103,26],[107,33,103,31],[108,6,104,4],[109,6,105,4],[109,10,105,10,"leftover"],[109,18,105,18],[109,21,105,21,"secondsSinceFlushRef"],[109,41,105,41],[109,42,105,42,"current"],[109,49,105,49],[110,6,106,4],[110,10,106,8,"leftover"],[110,18,106,16],[110,21,106,19],[110,22,106,20],[110,24,106,22],[111,8,107,6],[111,14,107,12,"flushToSupabase"],[111,29,107,27],[111,30,107,28,"leftover"],[111,38,107,36],[111,39,107,37],[112,6,108,4],[113,6,109,4,"stopSecondTicker"],[113,22,109,20],[113,23,109,21],[113,24,109,22],[114,4,110,2],[114,5,110,3],[114,8,110,5],[114,9,110,6,"flushToSupabase"],[114,24,110,21],[114,26,110,23,"stopSecondTicker"],[114,42,110,39],[114,43,110,40],[114,44,110,41],[116,4,112,2],[117,4,113,2],[117,8,113,2,"useEffect"],[117,14,113,11],[117,15,113,11,"useEffect"],[117,24,113,11],[117,26,113,12],[117,32,113,18],[118,6,114,4],[118,10,114,8],[118,11,114,9,"playerId"],[118,19,114,17],[118,21,114,19],[120,6,116,4],[121,6,117,4,"isActiveRef"],[121,17,117,15],[121,18,117,16,"current"],[121,25,117,23],[121,28,117,26,"AppState"],[121,40,117,34],[121,41,117,34,"AppState"],[121,49,117,34],[121,50,117,35,"currentState"],[121,62,117,47],[121,67,117,52],[121,75,117,60],[122,6,118,4],[122,10,118,8,"isActiveRef"],[122,21,118,19],[122,22,118,20,"current"],[122,29,118,27],[122,31,118,29],[123,8,119,6,"startSecondTicker"],[123,25,119,23],[123,26,119,24],[123,27,119,25],[124,6,120,4],[125,6,122,4],[125,10,122,10,"handleAppStateChange"],[125,30,122,30],[126,8,122,30],[126,12,122,30,"_ref3"],[126,17,122,30],[126,24,122,30,"_asyncToGenerator"],[126,41,122,30],[126,42,122,30,"default"],[126,49,122,30],[126,51,122,33],[126,62,122,40,"next"],[126,66,122,44],[126,68,122,49],[127,10,123,6],[127,14,123,12,"wasActive"],[127,23,123,21],[127,26,123,24,"isActiveRef"],[127,37,123,35],[127,38,123,36,"current"],[127,45,123,43],[128,10,124,6],[128,14,124,12,"nowActive"],[128,23,124,21],[128,26,124,24,"next"],[128,30,124,28],[128,35,124,33],[128,43,124,41],[129,10,126,6,"isActiveRef"],[129,21,126,17],[129,22,126,18,"current"],[129,29,126,25],[129,32,126,28,"nowActive"],[129,41,126,37],[131,10,128,6],[132,10,129,6],[132,14,129,10,"wasActive"],[132,23,129,19],[132,27,129,23],[132,28,129,24,"nowActive"],[132,37,129,33],[132,39,129,35],[133,12,130,8],[133,16,130,14,"leftover"],[133,24,130,22],[133,27,130,25,"secondsSinceFlushRef"],[133,47,130,45],[133,48,130,46,"current"],[133,55,130,53],[134,12,131,8],[134,16,131,12,"leftover"],[134,24,131,20],[134,27,131,23],[134,28,131,24],[134,30,131,26],[135,14,132,10],[135,20,132,16,"flushToSupabase"],[135,35,132,31],[135,36,132,32,"leftover"],[135,44,132,40],[135,45,132,41],[136,12,133,8],[137,10,134,6],[139,10,136,6],[140,10,137,6],[140,14,137,10,"nowActive"],[140,23,137,19],[140,25,137,21],[141,12,138,8,"startSecondTicker"],[141,29,138,25],[141,30,138,26],[141,31,138,27],[142,10,139,6],[142,11,139,7],[142,17,139,13],[143,12,140,8],[144,12,141,8],[145,12,142,8],[146,10,142,8],[147,8,144,4],[147,9,144,5],[148,8,144,5],[148,24,122,10,"handleAppStateChange"],[148,44,122,30,"handleAppStateChange"],[148,45,122,30,"_x2"],[148,48,122,30],[149,10,122,30],[149,17,122,30,"_ref3"],[149,22,122,30],[149,23,122,30,"apply"],[149,28,122,30],[149,35,122,30,"arguments"],[149,44,122,30],[150,8,122,30],[151,6,122,30],[151,9,144,5],[152,6,146,4],[152,10,146,10,"subscription"],[152,22,146,22],[152,25,146,25,"AppState"],[152,37,146,33],[152,38,146,33,"AppState"],[152,46,146,33],[152,47,146,34,"addEventListener"],[152,63,146,50],[152,64,146,51],[152,72,146,59],[152,74,146,61,"handleAppStateChange"],[152,94,146,81],[152,95,146,82],[153,6,148,4],[153,13,148,11],[153,19,148,17],[154,8,149,6,"subscription"],[154,20,149,18],[154,22,149,20,"remove"],[154,28,149,26],[154,29,149,27],[154,30,149,28],[155,8,150,6],[156,8,151,6],[156,12,151,6,"_asyncToGenerator"],[156,29,151,6],[156,30,151,6,"default"],[156,37,151,6],[156,39,151,7],[156,52,151,19],[157,10,152,8],[157,14,152,14,"leftover"],[157,22,152,22],[157,25,152,25,"secondsSinceFlushRef"],[157,45,152,45],[157,46,152,46,"current"],[157,53,152,53],[158,10,153,8],[158,14,153,12,"leftover"],[158,22,153,20],[158,25,153,23],[158,26,153,24],[158,28,153,26],[159,12,154,10],[159,18,154,16,"flushToSupabase"],[159,33,154,31],[159,34,154,32,"leftover"],[159,42,154,40],[159,43,154,41],[160,10,155,8],[161,10,156,8,"stopSecondTicker"],[161,26,156,24],[161,27,156,25],[161,28,156,26],[162,8,157,6],[162,9,157,7],[162,11,157,9],[162,12,157,10],[163,6,158,4],[163,7,158,5],[164,4,159,2],[164,5,159,3],[164,7,159,5],[164,8,159,6,"playerId"],[164,16,159,14],[164,18,159,16,"flushToSupabase"],[164,33,159,31],[164,35,159,33,"startSecondTicker"],[164,52,159,50],[164,54,159,52,"stopSecondTicker"],[164,70,159,68],[164,71,159,69],[164,72,159,70],[165,4,161,2],[165,11,161,9],[166,6,161,11,"startTracking"],[166,19,161,24],[167,6,161,26,"stopTracking"],[168,4,161,39],[168,5,161,40],[169,2,162,0],[170,2,162,1,"_s"],[170,4,162,1],[170,5,18,16,"usePlaytimeTracking"],[170,24,18,35],[171,0,18,35],[171,3]],"functionMap":{"names":["<global>","usePlaytimeTracking","flushToSupabase","startSecondTicker","setInterval$argument_0","stopSecondTicker","startTracking","stopTracking","useEffect$argument_0","handleAppStateChange","<anonymous>"],"mappings":"AAA;OCiB;ICQ;KDwC;wCEK;0CCE;KDa;GFC;uCIE;GJK;oCKG;GLG;mCME;GNQ;YOG;iCCS;KDsB;WEI;KFU;GPC;CDG"},"hasCjsExports":false},"type":"js/module"}]}