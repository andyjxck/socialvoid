{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":28},"end":{"line":2,"column":69,"index":97}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":98},"end":{"line":3,"column":38,"index":136}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"],"imports":1}},{"name":"./playtimeTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":137},"end":{"line":4,"column":48,"index":185}}],"key":"7rFJhuIz9Kets2yJ9zan0luljEk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[4], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _supabase = require(_dependencyMap[5], \"./supabase\");\n  var _playtimeTracker = require(_dependencyMap[6], \"./playtimeTracker\");\n  var playtimeTracker = _interopDefault(_playtimeTracker);\n  // src/utils/gameTracker.js\n  var GameTracker = /*#__PURE__*/function () {\n    function GameTracker() {\n      (0, _classCallCheck.default)(this, GameTracker);\n      this.sessions = new Map(); // Map<gameId, session>\n    }\n\n    /*─────────────────────────────\n      Start a new game session\n    ─────────────────────────────*/\n    return (0, _createClass.default)(GameTracker, [{\n      key: \"startGame\",\n      value: (function () {\n        var _startGame = (0, _asyncToGenerator.default)(function* (gameId, playerId) {\n          if (!gameId || !playerId) return;\n          console.log(`🎮 Starting game tracking: ${gameId} for player ${playerId}`);\n\n          // end any leftover sessions first\n          for (var _ref of this.sessions) {\n            var _ref2 = (0, _slicedToArray.default)(_ref, 2);\n            var id = _ref2[0];\n            var s = _ref2[1];\n            if (!s.ended) yield this.endGame(id, s.score || 0, s.gameData || {});\n          }\n          playtimeTracker.default.setPlayerId(playerId);\n          playtimeTracker.default.startGameSession(gameId);\n          var session = {\n            gameId,\n            playerId,\n            startTime: Date.now(),\n            endTime: null,\n            duration: 0,\n            score: 0,\n            gameData: {},\n            ended: false\n          };\n          this.sessions.set(gameId, session);\n          yield AsyncStorage.default.setItem(`game_session_${gameId}`, JSON.stringify(session));\n        });\n        function startGame(_x, _x2) {\n          return _startGame.apply(this, arguments);\n        }\n        return startGame;\n      }()\n      /*─────────────────────────────\n        End a session and submit\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"endGame\",\n      value: (function () {\n        var _endGame = (0, _asyncToGenerator.default)(function* (gameId) {\n          var score = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var gameData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var s = this.sessions.get(gameId);\n          if (!s) {\n            var raw = yield AsyncStorage.default.getItem(`game_session_${gameId}`);\n            if (raw) s = JSON.parse(raw);\n          }\n          if (!s || s.ended) return s || null;\n          var pt = playtimeTracker.default.endGameSession(s.playerId, s.gameId);\n          s.endTime = Date.now();\n          s.duration = pt?.duration ?? Math.floor((s.endTime - s.startTime) / 1000);\n          s.score = Number(score || 0);\n          s.gameData = gameData || {};\n          s.ended = true;\n          console.log(`🎮 Game session: ${s.duration}s`, s.gameData);\n          try {\n            yield this.submitSession(s);\n          } catch (e) {\n            console.error(\"❌ Failed to submit session:\", e);\n            yield this.storeFailed(s);\n          } finally {\n            this.sessions.delete(gameId);\n            yield AsyncStorage.default.removeItem(`game_session_${gameId}`);\n          }\n          return s;\n        });\n        function endGame(_x3) {\n          return _endGame.apply(this, arguments);\n        }\n        return endGame;\n      }()\n      /*─────────────────────────────\n        Persist to Supabase + update stats\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"submitSession\",\n      value: (function () {\n        var _submitSession = (0, _asyncToGenerator.default)(function* (s) {\n          var playerId = s.playerId,\n            gameId = s.gameId,\n            duration = s.duration,\n            score = s.score,\n            endTime = s.endTime,\n            gameData = s.gameData;\n\n          // 1️⃣ always log a raw session\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"game_sessions\").insert({\n              player_id: playerId,\n              game_id: gameId,\n              score,\n              points_earned: 10,\n              duration_seconds: duration,\n              game_data: {\n                duration,\n                ...gameData\n              },\n              created_at: new Date(endTime).toISOString()\n            }),\n            insertErr = _yield$supabase$from$.error;\n          if (insertErr) throw insertErr;\n\n          // 2️⃣ add to players.total_playtime_seconds\n          yield this.addTotalPlaytime(playerId, duration);\n\n          // 3️⃣ bump persistent score tables\n          console.log(\"➡️ Submitting persistent stats\", {\n            playerId,\n            gameId,\n            score\n          });\n          yield this.updatePersistentStats(playerId, gameId, score, gameData);\n\n          // 4️⃣ achievements\n          yield this.checkAchievements(playerId, gameId);\n          console.log(\"✅ Session + persistent stats recorded\");\n        });\n        function submitSession(_x4) {\n          return _submitSession.apply(this, arguments);\n        }\n        return submitSession;\n      }()\n      /*─────────────────────────────\n        Increment global playtime\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"addTotalPlaytime\",\n      value: (function () {\n        var _addTotalPlaytime = (0, _asyncToGenerator.default)(function* (playerId, seconds) {\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"players\").select(\"total_playtime_seconds\").eq(\"id\", playerId).maybeSingle(),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          var current = Number(data?.total_playtime_seconds || 0);\n          var next = current + Number(seconds || 0);\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"players\").update({\n              total_playtime_seconds: next\n            }).eq(\"id\", playerId),\n            upErr = _yield$supabase$from$3.error;\n          if (upErr) throw upErr;\n        });\n        function addTotalPlaytime(_x5, _x6) {\n          return _addTotalPlaytime.apply(this, arguments);\n        }\n        return addTotalPlaytime;\n      }() // src/utils/gameTracker.js (only replace updatePersistentStats)\n      )\n    }, {\n      key: \"updatePersistentStats\",\n      value: function () {\n        var _updatePersistentStats = (0, _asyncToGenerator.default)(function* (playerId, gameId, score, gameData) {\n          // Decide behavior per game using DB fields if available, with a code fallback.\n          // DB (optional): games.game_type, games.track_best_time (bool)\n          // If your 'games' table doesn't have track_best_time, adjust the fallback set below.\n\n          // Fallback sets (edit once here if needed)\n          var AI_GAMES_BY_TYPE = new Set([\"chess\", \"connect_4\", \"dots_and_boxes\", \"mancala\"]);\n          var BEST_TIME_GAMES_BY_TYPE = new Set([\n          // put time-based/high-score games here if you don't have a DB flag\n          \"block_blast\"\n          // \"minesweeper\",\n          // \"snake\",\n          // add more as needed\n          ]);\n\n          // Pull game metadata once\n          var gameType = null;\n          var trackBestTime = null; // prefer DB flag if present\n          try {\n            var _yield$supabase$from$4 = yield _supabase.supabase.from(\"games\").select(\"game_type, track_best_time\") // ok if track_best_time doesn't exist; it will be undefined\n              .eq(\"id\", gameId).maybeSingle(),\n              g = _yield$supabase$from$4.data;\n            gameType = g?.game_type || null;\n            // If DB has a boolean column track_best_time, use it. Otherwise, leave null and fall back.\n            trackBestTime = typeof g?.track_best_time === \"boolean\" ? g.track_best_time : null;\n          } catch {\n            // ignore; we'll fall back to code sets\n          }\n          var isAIGame = gameType ? AI_GAMES_BY_TYPE.has(gameType) : false;\n          // If DB column missing, fall back to code set\n          var shouldTrackBestTime = trackBestTime !== null ? trackBestTime : gameType ? BEST_TIME_GAMES_BY_TYPE.has(gameType) : false;\n\n          // Always work in player_game_stats keyed by numeric game_id\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"player_game_stats\").select(\"id, high_score, total_plays, best_time\").eq(\"player_id\", playerId).eq(\"game_id\", gameId).maybeSingle(),\n            row = _yield$supabase$from$5.data,\n            selErr = _yield$supabase$from$5.error;\n          if (selErr) throw selErr;\n          if (isAIGame) {\n            // Count Player wins in high_score, total games in total_plays.\n            // AI wins = total_plays - high_score (you can compute on read).\n            var winInc = gameData?.winner === \"Player\" ? 1 : 0;\n            if (!row) {\n              yield _supabase.supabase.from(\"player_game_stats\").insert({\n                player_id: playerId,\n                game_id: gameId,\n                high_score: winInc,\n                total_plays: 1\n              });\n            } else {\n              yield _supabase.supabase.from(\"player_game_stats\").update({\n                high_score: Number(row.high_score || 0) + winInc,\n                total_plays: Number(row.total_plays || 0) + 1\n              }).eq(\"id\", row.id);\n            }\n            return;\n          }\n\n          // High-score style games.\n          // We’ll also track best_time (lowest duration) if the game is marked as time-tracked.\n          var newHigh = Math.max(Number(row?.high_score || 0), Number(score || 0));\n\n          // duration is already computed by gameTracker.endGame() and set on the session\n          // Submit path passes it in as `s.duration`, which we already wrote to game_sessions.\n          // We can recompute here from gameData if you sent it, but simpler: read from gameData.duration if present,\n          // else don't change best_time (it’s optional).\n          var durationSec = Number(gameData?.duration ?? 0) || null;\n          if (!row) {\n            yield _supabase.supabase.from(\"player_game_stats\").insert({\n              player_id: playerId,\n              game_id: gameId,\n              high_score: Number(score || 0),\n              total_plays: 1,\n              ...(shouldTrackBestTime && durationSec != null ? {\n                best_time: durationSec\n              } : {})\n            });\n          } else {\n            var next = {\n              high_score: newHigh,\n              total_plays: Number(row.total_plays || 0) + 1\n            };\n            if (shouldTrackBestTime && durationSec != null) {\n              var currentBest = row.best_time == null ? null : Number(row.best_time);\n              next.best_time = currentBest == null || currentBest === 0 ? durationSec : Math.min(currentBest, durationSec);\n            }\n            yield _supabase.supabase.from(\"player_game_stats\").update(next).eq(\"id\", row.id);\n          }\n        });\n        function updatePersistentStats(_x7, _x8, _x9, _x0) {\n          return _updatePersistentStats.apply(this, arguments);\n        }\n        return updatePersistentStats;\n      }()\n      /*─────────────────────────────\n        Achievements (unchanged)\n      ─────────────────────────────*/\n    }, {\n      key: \"checkAchievements\",\n      value: (function () {\n        var _checkAchievements = (0, _asyncToGenerator.default)(function* (playerId, gameId) {\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"achievements\").select(\"*\").or(`game_id.eq.${gameId},game_id.is.null`),\n            achievements = _yield$supabase$from$6.data,\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n          var _yield$supabase$from$7 = yield _supabase.supabase.from(\"game_sessions\").select(\"duration_seconds\").eq(\"player_id\", playerId).eq(\"game_id\", gameId),\n            sessions = _yield$supabase$from$7.data,\n            sErr = _yield$supabase$from$7.error;\n          if (sErr) throw sErr;\n          var totalGameTime = (sessions || []).reduce((sum, r) => sum + (Number(r.duration_seconds) || 0), 0);\n          var _yield$supabase$from$8 = yield _supabase.supabase.from(\"player_achievements\").select(\"achievement_id\").eq(\"player_id\", playerId),\n            completed = _yield$supabase$from$8.data,\n            cErr = _yield$supabase$from$8.error;\n          if (cErr) throw cErr;\n          var done = new Set((completed || []).map(a => a.achievement_id));\n          for (var ach of achievements || []) {\n            if (done.has(ach.id)) continue;\n            var progress = 0;\n            if (ach.achievement_type === \"total_playtime\") {\n              var _yield$supabase$from$9 = yield _supabase.supabase.from(\"players\").select(\"total_playtime_seconds\").eq(\"id\", playerId).maybeSingle(),\n                p = _yield$supabase$from$9.data;\n              progress = Number(p?.total_playtime_seconds || 0);\n            } else if (ach.achievement_type === \"game_playtime\") {\n              progress = totalGameTime;\n            }\n            if (progress >= Number(ach.target_value || 0)) {\n              yield _supabase.supabase.from(\"player_achievements\").insert({\n                player_id: playerId,\n                achievement_id: ach.id,\n                progress,\n                is_completed: true,\n                completed_at: new Date().toISOString()\n              });\n              console.log(`🏆 Achievement unlocked: ${ach.name}`);\n            }\n          }\n        });\n        function checkAchievements(_x1, _x10) {\n          return _checkAchievements.apply(this, arguments);\n        }\n        return checkAchievements;\n      }()\n      /*─────────────────────────────\n        Offline buffer\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"storeFailed\",\n      value: (function () {\n        var _storeFailed = (0, _asyncToGenerator.default)(function* (session) {\n          var failed = yield AsyncStorage.default.getItem(\"failed_sessions\");\n          var list = failed ? JSON.parse(failed) : [];\n          list.push(session);\n          yield AsyncStorage.default.setItem(\"failed_sessions\", JSON.stringify(list));\n        });\n        function storeFailed(_x11) {\n          return _storeFailed.apply(this, arguments);\n        }\n        return storeFailed;\n      }())\n    }, {\n      key: \"retryFailedSessions\",\n      value: function () {\n        var _retryFailedSessions = (0, _asyncToGenerator.default)(function* () {\n          var failed = yield AsyncStorage.default.getItem(\"failed_sessions\");\n          if (!failed) return;\n          var list = JSON.parse(failed);\n          var still = [];\n          for (var s of list) {\n            try {\n              yield this.submitSession(s);\n            } catch {\n              still.push(s);\n            }\n          }\n          yield AsyncStorage.default.setItem(\"failed_sessions\", JSON.stringify(still));\n        });\n        function retryFailedSessions() {\n          return _retryFailedSessions.apply(this, arguments);\n        }\n        return retryFailedSessions;\n      }()\n      /*─────────────────────────────\n        Helpers\n      ─────────────────────────────*/\n    }, {\n      key: \"getCurrentDuration\",\n      value: function getCurrentDuration(gameId) {\n        var s = this.sessions.get(gameId);\n        return s ? Math.floor((Date.now() - s.startTime) / 1000) : 0;\n      }\n    }, {\n      key: \"updateGameData\",\n      value: function updateGameData(gameId, gameData) {\n        var s = this.sessions.get(gameId);\n        if (s && !s.ended) s.gameData = {\n          ...s.gameData,\n          ...(gameData || {})\n        };\n      }\n    }]);\n  }();\n  var _default = new GameTracker();\n});","lineCount":396,"map":[[12,2,331,0,"Object"],[12,8,331,0],[12,9,331,0,"defineProperty"],[12,23,331,0],[12,24,331,0,"exports"],[12,31,331,0],[13,4,331,0,"enumerable"],[13,14,331,0],[14,4,331,0,"get"],[14,7,331,0],[14,18,331,0,"get"],[14,19,331,0],[15,6,331,0],[15,13,331,0,"_default"],[15,21,331,0],[16,4,331,0],[17,2,331,0],[18,2,331,33],[18,6,331,33,"_babelRuntimeHelpersSlicedToArray"],[18,39,331,33],[18,42,331,33,"require"],[18,49,331,33],[18,50,331,33,"_dependencyMap"],[18,64,331,33],[19,2,331,33],[19,6,331,33,"_slicedToArray"],[19,20,331,33],[19,23,331,33,"_interopDefault"],[19,38,331,33],[19,39,331,33,"_babelRuntimeHelpersSlicedToArray"],[19,72,331,33],[20,2,331,33],[20,6,331,33,"_babelRuntimeHelpersAsyncToGenerator"],[20,42,331,33],[20,45,331,33,"require"],[20,52,331,33],[20,53,331,33,"_dependencyMap"],[20,67,331,33],[21,2,331,33],[21,6,331,33,"_asyncToGenerator"],[21,23,331,33],[21,26,331,33,"_interopDefault"],[21,41,331,33],[21,42,331,33,"_babelRuntimeHelpersAsyncToGenerator"],[21,78,331,33],[22,2,331,33],[22,6,331,33,"_babelRuntimeHelpersClassCallCheck"],[22,40,331,33],[22,43,331,33,"require"],[22,50,331,33],[22,51,331,33,"_dependencyMap"],[22,65,331,33],[23,2,331,33],[23,6,331,33,"_classCallCheck"],[23,21,331,33],[23,24,331,33,"_interopDefault"],[23,39,331,33],[23,40,331,33,"_babelRuntimeHelpersClassCallCheck"],[23,74,331,33],[24,2,331,33],[24,6,331,33,"_babelRuntimeHelpersCreateClass"],[24,37,331,33],[24,40,331,33,"require"],[24,47,331,33],[24,48,331,33,"_dependencyMap"],[24,62,331,33],[25,2,331,33],[25,6,331,33,"_createClass"],[25,18,331,33],[25,21,331,33,"_interopDefault"],[25,36,331,33],[25,37,331,33,"_babelRuntimeHelpersCreateClass"],[25,68,331,33],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_supabase"],[28,15,3,0],[28,18,3,0,"require"],[28,25,3,0],[28,26,3,0,"_dependencyMap"],[28,40,3,0],[29,2,4,0],[29,6,4,0,"_playtimeTracker"],[29,22,4,0],[29,25,4,0,"require"],[29,32,4,0],[29,33,4,0,"_dependencyMap"],[29,47,4,0],[30,2,4,0],[30,6,4,0,"playtimeTracker"],[30,21,4,0],[30,24,4,0,"_interopDefault"],[30,39,4,0],[30,40,4,0,"_playtimeTracker"],[30,56,4,0],[31,2,1,0],[32,2,1,0],[32,6,6,6,"GameTracker"],[32,17,6,17],[33,4,7,2],[33,13,7,2,"GameTracker"],[33,25,7,2],[33,27,7,16],[34,6,7,16],[34,10,7,16,"_classCallCheck"],[34,25,7,16],[34,26,7,16,"default"],[34,33,7,16],[34,41,7,16,"GameTracker"],[34,52,7,16],[35,6,8,4],[35,10,8,8],[35,11,8,9,"sessions"],[35,19,8,17],[35,22,8,20],[35,26,8,24,"Map"],[35,29,8,27],[35,30,8,28],[35,31,8,29],[35,32,8,30],[35,33,8,31],[36,4,9,2],[38,4,11,2],[39,0,12,0],[40,0,13,0],[41,4,11,2],[41,15,11,2,"_createClass"],[41,27,11,2],[41,28,11,2,"default"],[41,35,11,2],[41,37,11,2,"GameTracker"],[41,48,11,2],[42,6,11,2,"key"],[42,9,11,2],[43,6,11,2,"value"],[43,11,11,2],[44,8,11,2],[44,12,11,2,"_startGame"],[44,22,11,2],[44,29,11,2,"_asyncToGenerator"],[44,46,11,2],[44,47,11,2,"default"],[44,54,11,2],[44,56,14,2],[44,67,14,18,"gameId"],[44,73,14,24],[44,75,14,26,"playerId"],[44,83,14,34],[44,85,14,36],[45,10,15,4],[45,14,15,8],[45,15,15,9,"gameId"],[45,21,15,15],[45,25,15,19],[45,26,15,20,"playerId"],[45,34,15,28],[45,36,15,30],[46,10,17,4,"console"],[46,17,17,11],[46,18,17,12,"log"],[46,21,17,15],[46,22,17,16],[46,52,17,46,"gameId"],[46,58,17,52],[46,73,17,67,"playerId"],[46,81,17,75],[46,83,17,77],[46,84,17,78],[48,10,19,4],[49,10,20,4],[49,19,20,4,"_ref"],[49,23,20,4],[49,27,20,26],[49,31,20,30],[49,32,20,31,"sessions"],[49,40,20,39],[49,42,20,41],[50,12,20,41],[50,16,20,41,"_ref2"],[50,21,20,41],[50,28,20,41,"_slicedToArray"],[50,42,20,41],[50,43,20,41,"default"],[50,50,20,41],[50,52,20,41,"_ref"],[50,56,20,41],[51,12,20,41],[51,16,20,16,"id"],[51,18,20,18],[51,21,20,18,"_ref2"],[51,26,20,18],[52,12,20,18],[52,16,20,20,"s"],[52,17,20,21],[52,20,20,21,"_ref2"],[52,25,20,21],[53,12,21,6],[53,16,21,10],[53,17,21,11,"s"],[53,18,21,12],[53,19,21,13,"ended"],[53,24,21,18],[53,26,21,20],[53,32,21,26],[53,36,21,30],[53,37,21,31,"endGame"],[53,44,21,38],[53,45,21,39,"id"],[53,47,21,41],[53,49,21,43,"s"],[53,50,21,44],[53,51,21,45,"score"],[53,56,21,50],[53,60,21,54],[53,61,21,55],[53,63,21,57,"s"],[53,64,21,58],[53,65,21,59,"gameData"],[53,73,21,67],[53,77,21,71],[53,78,21,72],[53,79,21,73],[53,80,21,74],[54,10,22,4],[55,10,24,4,"playtimeTracker"],[55,25,24,19],[55,26,24,19,"default"],[55,33,24,19],[55,34,24,20,"setPlayerId"],[55,45,24,31],[55,46,24,32,"playerId"],[55,54,24,40],[55,55,24,41],[56,10,25,6,"playtimeTracker"],[56,25,25,21],[56,26,25,21,"default"],[56,33,25,21],[56,34,25,22,"startGameSession"],[56,50,25,38],[56,51,25,39,"gameId"],[56,57,25,45],[56,58,25,46],[57,10,26,4],[57,14,26,10,"session"],[57,21,26,17],[57,24,26,20],[58,12,27,6,"gameId"],[58,18,27,12],[59,12,28,6,"playerId"],[59,20,28,14],[60,12,29,6,"startTime"],[60,21,29,15],[60,23,29,17,"Date"],[60,27,29,21],[60,28,29,22,"now"],[60,31,29,25],[60,32,29,26],[60,33,29,27],[61,12,30,6,"endTime"],[61,19,30,13],[61,21,30,15],[61,25,30,19],[62,12,31,6,"duration"],[62,20,31,14],[62,22,31,16],[62,23,31,17],[63,12,32,6,"score"],[63,17,32,11],[63,19,32,13],[63,20,32,14],[64,12,33,6,"gameData"],[64,20,33,14],[64,22,33,16],[64,23,33,17],[64,24,33,18],[65,12,34,6,"ended"],[65,17,34,11],[65,19,34,13],[66,10,35,4],[66,11,35,5],[67,10,37,4],[67,14,37,8],[67,15,37,9,"sessions"],[67,23,37,17],[67,24,37,18,"set"],[67,27,37,21],[67,28,37,22,"gameId"],[67,34,37,28],[67,36,37,30,"session"],[67,43,37,37],[67,44,37,38],[68,10,38,4],[68,16,38,10,"AsyncStorage"],[68,28,38,22],[68,29,38,22,"default"],[68,36,38,22],[68,37,38,23,"setItem"],[68,44,38,30],[68,45,38,31],[68,61,38,47,"gameId"],[68,67,38,53],[68,69,38,55],[68,71,38,57,"JSON"],[68,75,38,61],[68,76,38,62,"stringify"],[68,85,38,71],[68,86,38,72,"session"],[68,93,38,79],[68,94,38,80],[68,95,38,81],[69,8,39,2],[69,9,39,3],[70,8,39,3],[70,17,14,8,"startGame"],[70,26,14,17,"startGame"],[70,27,14,17,"_x"],[70,29,14,17],[70,31,14,17,"_x2"],[70,34,14,17],[71,10,14,17],[71,17,14,17,"_startGame"],[71,27,14,17],[71,28,14,17,"apply"],[71,33,14,17],[71,40,14,17,"arguments"],[71,49,14,17],[72,8,14,17],[73,8,14,17],[73,15,14,8,"startGame"],[73,24,14,17],[74,6,14,17],[75,6,41,2],[76,0,42,0],[77,0,43,0],[78,6,41,2],[79,4,41,2],[80,6,41,2,"key"],[80,9,41,2],[81,6,41,2,"value"],[81,11,41,2],[82,8,41,2],[82,12,41,2,"_endGame"],[82,20,41,2],[82,27,41,2,"_asyncToGenerator"],[82,44,41,2],[82,45,41,2,"default"],[82,52,41,2],[82,54,44,2],[82,65,44,16,"gameId"],[82,71,44,22],[82,73,44,50],[83,10,44,50],[83,14,44,24,"score"],[83,19,44,29],[83,22,44,29,"arguments"],[83,31,44,29],[83,32,44,29,"length"],[83,38,44,29],[83,46,44,29,"arguments"],[83,55,44,29],[83,63,44,29,"undefined"],[83,72,44,29],[83,75,44,29,"arguments"],[83,84,44,29],[83,90,44,32],[83,91,44,33],[84,10,44,33],[84,14,44,35,"gameData"],[84,22,44,43],[84,25,44,43,"arguments"],[84,34,44,43],[84,35,44,43,"length"],[84,41,44,43],[84,49,44,43,"arguments"],[84,58,44,43],[84,66,44,43,"undefined"],[84,75,44,43],[84,78,44,43,"arguments"],[84,87,44,43],[84,93,44,46],[84,94,44,47],[84,95,44,48],[85,10,45,4],[85,14,45,8,"s"],[85,15,45,9],[85,18,45,12],[85,22,45,16],[85,23,45,17,"sessions"],[85,31,45,25],[85,32,45,26,"get"],[85,35,45,29],[85,36,45,30,"gameId"],[85,42,45,36],[85,43,45,37],[86,10,46,4],[86,14,46,8],[86,15,46,9,"s"],[86,16,46,10],[86,18,46,12],[87,12,47,6],[87,16,47,12,"raw"],[87,19,47,15],[87,28,47,24,"AsyncStorage"],[87,40,47,36],[87,41,47,36,"default"],[87,48,47,36],[87,49,47,37,"getItem"],[87,56,47,44],[87,57,47,45],[87,73,47,61,"gameId"],[87,79,47,67],[87,81,47,69],[87,82,47,70],[88,12,48,6],[88,16,48,10,"raw"],[88,19,48,13],[88,21,48,15,"s"],[88,22,48,16],[88,25,48,19,"JSON"],[88,29,48,23],[88,30,48,24,"parse"],[88,35,48,29],[88,36,48,30,"raw"],[88,39,48,33],[88,40,48,34],[89,10,49,4],[90,10,50,4],[90,14,50,8],[90,15,50,9,"s"],[90,16,50,10],[90,20,50,14,"s"],[90,21,50,15],[90,22,50,16,"ended"],[90,27,50,21],[90,29,50,23],[90,36,50,30,"s"],[90,37,50,31],[90,41,50,35],[90,45,50,39],[91,10,52,4],[91,14,52,10,"pt"],[91,16,52,12],[91,19,52,15,"playtimeTracker"],[91,34,52,30],[91,35,52,30,"default"],[91,42,52,30],[91,43,52,31,"endGameSession"],[91,57,52,45],[91,58,52,46,"s"],[91,59,52,47],[91,60,52,48,"playerId"],[91,68,52,56],[91,70,52,58,"s"],[91,71,52,59],[91,72,52,60,"gameId"],[91,78,52,66],[91,79,52,67],[92,10,53,4,"s"],[92,11,53,5],[92,12,53,6,"endTime"],[92,19,53,13],[92,22,53,16,"Date"],[92,26,53,20],[92,27,53,21,"now"],[92,30,53,24],[92,31,53,25],[92,32,53,26],[93,10,54,4,"s"],[93,11,54,5],[93,12,54,6,"duration"],[93,20,54,14],[93,23,54,17,"pt"],[93,25,54,19],[93,27,54,21,"duration"],[93,35,54,29],[93,39,54,33,"Math"],[93,43,54,37],[93,44,54,38,"floor"],[93,49,54,43],[93,50,54,44],[93,51,54,45,"s"],[93,52,54,46],[93,53,54,47,"endTime"],[93,60,54,54],[93,63,54,57,"s"],[93,64,54,58],[93,65,54,59,"startTime"],[93,74,54,68],[93,78,54,72],[93,82,54,76],[93,83,54,77],[94,10,55,4,"s"],[94,11,55,5],[94,12,55,6,"score"],[94,17,55,11],[94,20,55,14,"Number"],[94,26,55,20],[94,27,55,21,"score"],[94,32,55,26],[94,36,55,30],[94,37,55,31],[94,38,55,32],[95,10,56,4,"s"],[95,11,56,5],[95,12,56,6,"gameData"],[95,20,56,14],[95,23,56,17,"gameData"],[95,31,56,25],[95,35,56,29],[95,36,56,30],[95,37,56,31],[96,10,57,4,"s"],[96,11,57,5],[96,12,57,6,"ended"],[96,17,57,11],[96,20,57,14],[96,24,57,18],[97,10,59,4,"console"],[97,17,59,11],[97,18,59,12,"log"],[97,21,59,15],[97,22,59,16],[97,42,59,36,"s"],[97,43,59,37],[97,44,59,38,"duration"],[97,52,59,46],[97,55,59,49],[97,57,59,51,"s"],[97,58,59,52],[97,59,59,53,"gameData"],[97,67,59,61],[97,68,59,62],[98,10,61,4],[98,14,61,8],[99,12,62,6],[99,18,62,12],[99,22,62,16],[99,23,62,17,"submitSession"],[99,36,62,30],[99,37,62,31,"s"],[99,38,62,32],[99,39,62,33],[100,10,63,4],[100,11,63,5],[100,12,63,6],[100,19,63,13,"e"],[100,20,63,14],[100,22,63,16],[101,12,64,6,"console"],[101,19,64,13],[101,20,64,14,"error"],[101,25,64,19],[101,26,64,20],[101,55,64,49],[101,57,64,51,"e"],[101,58,64,52],[101,59,64,53],[102,12,65,6],[102,18,65,12],[102,22,65,16],[102,23,65,17,"storeFailed"],[102,34,65,28],[102,35,65,29,"s"],[102,36,65,30],[102,37,65,31],[103,10,66,4],[103,11,66,5],[103,20,66,14],[104,12,67,6],[104,16,67,10],[104,17,67,11,"sessions"],[104,25,67,19],[104,26,67,20,"delete"],[104,32,67,26],[104,33,67,27,"gameId"],[104,39,67,33],[104,40,67,34],[105,12,68,6],[105,18,68,12,"AsyncStorage"],[105,30,68,24],[105,31,68,24,"default"],[105,38,68,24],[105,39,68,25,"removeItem"],[105,49,68,35],[105,50,68,36],[105,66,68,52,"gameId"],[105,72,68,58],[105,74,68,60],[105,75,68,61],[106,10,69,4],[107,10,70,4],[107,17,70,11,"s"],[107,18,70,12],[108,8,71,2],[108,9,71,3],[109,8,71,3],[109,17,44,8,"endGame"],[109,24,44,15,"endGame"],[109,25,44,15,"_x3"],[109,28,44,15],[110,10,44,15],[110,17,44,15,"_endGame"],[110,25,44,15],[110,26,44,15,"apply"],[110,31,44,15],[110,38,44,15,"arguments"],[110,47,44,15],[111,8,44,15],[112,8,44,15],[112,15,44,8,"endGame"],[112,22,44,15],[113,6,44,15],[114,6,73,2],[115,0,74,0],[116,0,75,0],[117,6,73,2],[118,4,73,2],[119,6,73,2,"key"],[119,9,73,2],[120,6,73,2,"value"],[120,11,73,2],[121,8,73,2],[121,12,73,2,"_submitSession"],[121,26,73,2],[121,33,73,2,"_asyncToGenerator"],[121,50,73,2],[121,51,73,2,"default"],[121,58,73,2],[121,60,76,2],[121,71,76,22,"s"],[121,72,76,23],[121,74,76,25],[122,10,77,4],[122,14,77,12,"playerId"],[122,22,77,20],[122,25,77,69,"s"],[122,26,77,70],[122,27,77,12,"playerId"],[122,35,77,20],[123,12,77,22,"gameId"],[123,18,77,28],[123,21,77,69,"s"],[123,22,77,70],[123,23,77,22,"gameId"],[123,29,77,28],[124,12,77,30,"duration"],[124,20,77,38],[124,23,77,69,"s"],[124,24,77,70],[124,25,77,30,"duration"],[124,33,77,38],[125,12,77,40,"score"],[125,17,77,45],[125,20,77,69,"s"],[125,21,77,70],[125,22,77,40,"score"],[125,27,77,45],[126,12,77,47,"endTime"],[126,19,77,54],[126,22,77,69,"s"],[126,23,77,70],[126,24,77,47,"endTime"],[126,31,77,54],[127,12,77,56,"gameData"],[127,20,77,64],[127,23,77,69,"s"],[127,24,77,70],[127,25,77,56,"gameData"],[127,33,77,64],[129,10,79,4],[130,10,80,4],[130,14,80,4,"_yield$supabase$from$"],[130,35,80,4],[130,44,80,39,"supabase"],[130,53,80,47],[130,54,80,47,"supabase"],[130,62,80,47],[130,63,80,48,"from"],[130,67,80,52],[130,68,80,53],[130,83,80,68],[130,84,80,69],[130,85,80,70,"insert"],[130,91,80,76],[130,92,80,77],[131,14,81,6,"player_id"],[131,23,81,15],[131,25,81,17,"playerId"],[131,33,81,25],[132,14,82,6,"game_id"],[132,21,82,13],[132,23,82,15,"gameId"],[132,29,82,21],[133,14,83,6,"score"],[133,19,83,11],[134,14,84,6,"points_earned"],[134,27,84,19],[134,29,84,21],[134,31,84,23],[135,14,85,6,"duration_seconds"],[135,30,85,22],[135,32,85,24,"duration"],[135,40,85,32],[136,14,86,6,"game_data"],[136,23,86,15],[136,25,86,17],[137,16,86,19,"duration"],[137,24,86,27],[138,16,86,29],[138,19,86,32,"gameData"],[139,14,86,41],[139,15,86,42],[140,14,87,6,"created_at"],[140,24,87,16],[140,26,87,18],[140,30,87,22,"Date"],[140,34,87,26],[140,35,87,27,"endTime"],[140,42,87,34],[140,43,87,35],[140,44,87,36,"toISOString"],[140,55,87,47],[140,56,87,48],[141,12,88,4],[141,13,88,5],[141,14,88,6],[142,12,80,19,"insertErr"],[142,21,80,28],[142,24,80,28,"_yield$supabase$from$"],[142,45,80,28],[142,46,80,12,"error"],[142,51,80,17],[143,10,89,4],[143,14,89,8,"insertErr"],[143,23,89,17],[143,25,89,19],[143,31,89,25,"insertErr"],[143,40,89,34],[145,10,91,4],[146,10,92,4],[146,16,92,10],[146,20,92,14],[146,21,92,15,"addTotalPlaytime"],[146,37,92,31],[146,38,92,32,"playerId"],[146,46,92,40],[146,48,92,42,"duration"],[146,56,92,50],[146,57,92,51],[148,10,94,4],[149,10,95,6,"console"],[149,17,95,13],[149,18,95,14,"log"],[149,21,95,17],[149,22,95,18],[149,54,95,50],[149,56,95,52],[150,12,95,54,"playerId"],[150,20,95,62],[151,12,95,64,"gameId"],[151,18,95,70],[152,12,95,72,"score"],[153,10,95,78],[153,11,95,79],[153,12,95,80],[154,10,96,4],[154,16,96,10],[154,20,96,14],[154,21,96,15,"updatePersistentStats"],[154,42,96,36],[154,43,96,37,"playerId"],[154,51,96,45],[154,53,96,47,"gameId"],[154,59,96,53],[154,61,96,55,"score"],[154,66,96,60],[154,68,96,62,"gameData"],[154,76,96,70],[154,77,96,71],[156,10,98,4],[157,10,99,4],[157,16,99,10],[157,20,99,14],[157,21,99,15,"checkAchievements"],[157,38,99,32],[157,39,99,33,"playerId"],[157,47,99,41],[157,49,99,43,"gameId"],[157,55,99,49],[157,56,99,50],[158,10,101,4,"console"],[158,17,101,11],[158,18,101,12,"log"],[158,21,101,15],[158,22,101,16],[158,61,101,55],[158,62,101,56],[159,8,102,2],[159,9,102,3],[160,8,102,3],[160,17,76,8,"submitSession"],[160,30,76,21,"submitSession"],[160,31,76,21,"_x4"],[160,34,76,21],[161,10,76,21],[161,17,76,21,"_submitSession"],[161,31,76,21],[161,32,76,21,"apply"],[161,37,76,21],[161,44,76,21,"arguments"],[161,53,76,21],[162,8,76,21],[163,8,76,21],[163,15,76,8,"submitSession"],[163,28,76,21],[164,6,76,21],[165,6,104,2],[166,0,105,0],[167,0,106,0],[168,6,104,2],[169,4,104,2],[170,6,104,2,"key"],[170,9,104,2],[171,6,104,2,"value"],[171,11,104,2],[172,8,104,2],[172,12,104,2,"_addTotalPlaytime"],[172,29,104,2],[172,36,104,2,"_asyncToGenerator"],[172,53,104,2],[172,54,104,2,"default"],[172,61,104,2],[172,63,107,2],[172,74,107,25,"playerId"],[172,82,107,33],[172,84,107,35,"seconds"],[172,91,107,42],[172,93,107,44],[173,10,108,4],[173,14,108,4,"_yield$supabase$from$2"],[173,36,108,4],[173,45,108,34,"supabase"],[173,54,108,42],[173,55,108,42,"supabase"],[173,63,108,42],[173,64,109,7,"from"],[173,68,109,11],[173,69,109,12],[173,78,109,21],[173,79,109,22],[173,80,110,7,"select"],[173,86,110,13],[173,87,110,14],[173,111,110,38],[173,112,110,39],[173,113,111,7,"eq"],[173,115,111,9],[173,116,111,10],[173,120,111,14],[173,122,111,16,"playerId"],[173,130,111,24],[173,131,111,25],[173,132,112,7,"maybeSingle"],[173,143,112,18],[173,144,112,19],[173,145,112,20],[174,12,108,12,"data"],[174,16,108,16],[174,19,108,16,"_yield$supabase$from$2"],[174,41,108,16],[174,42,108,12,"data"],[174,46,108,16],[175,12,108,18,"error"],[175,17,108,23],[175,20,108,23,"_yield$supabase$from$2"],[175,42,108,23],[175,43,108,18,"error"],[175,48,108,23],[176,10,113,4],[176,14,113,8,"error"],[176,19,113,13],[176,21,113,15],[176,27,113,21,"error"],[176,32,113,26],[177,10,115,4],[177,14,115,10,"current"],[177,21,115,17],[177,24,115,20,"Number"],[177,30,115,26],[177,31,115,27,"data"],[177,35,115,31],[177,37,115,33,"total_playtime_seconds"],[177,59,115,55],[177,63,115,59],[177,64,115,60],[177,65,115,61],[178,10,116,4],[178,14,116,10,"next"],[178,18,116,14],[178,21,116,17,"current"],[178,28,116,24],[178,31,116,27,"Number"],[178,37,116,33],[178,38,116,34,"seconds"],[178,45,116,41],[178,49,116,45],[178,50,116,46],[178,51,116,47],[179,10,118,4],[179,14,118,4,"_yield$supabase$from$3"],[179,36,118,4],[179,45,118,35,"supabase"],[179,54,118,43],[179,55,118,43,"supabase"],[179,63,118,43],[179,64,119,7,"from"],[179,68,119,11],[179,69,119,12],[179,78,119,21],[179,79,119,22],[179,80,120,7,"update"],[179,86,120,13],[179,87,120,14],[180,14,120,16,"total_playtime_seconds"],[180,36,120,38],[180,38,120,40,"next"],[181,12,120,45],[181,13,120,46],[181,14,120,47],[181,15,121,7,"eq"],[181,17,121,9],[181,18,121,10],[181,22,121,14],[181,24,121,16,"playerId"],[181,32,121,24],[181,33,121,25],[182,12,118,19,"upErr"],[182,17,118,24],[182,20,118,24,"_yield$supabase$from$3"],[182,42,118,24],[182,43,118,12,"error"],[182,48,118,17],[183,10,122,4],[183,14,122,8,"upErr"],[183,19,122,13],[183,21,122,15],[183,27,122,21,"upErr"],[183,32,122,26],[184,8,123,2],[184,9,123,3],[185,8,123,3],[185,17,107,8,"addTotalPlaytime"],[185,33,107,24,"addTotalPlaytime"],[185,34,107,24,"_x5"],[185,37,107,24],[185,39,107,24,"_x6"],[185,42,107,24],[186,10,107,24],[186,17,107,24,"_addTotalPlaytime"],[186,34,107,24],[186,35,107,24,"apply"],[186,40,107,24],[186,47,107,24,"arguments"],[186,56,107,24],[187,8,107,24],[188,8,107,24],[188,15,107,8,"addTotalPlaytime"],[188,31,107,24],[189,6,107,24],[189,10,125,4],[190,6,125,4],[191,4,125,4],[192,6,125,4,"key"],[192,9,125,4],[193,6,125,4,"value"],[193,11,125,4],[194,8,125,4],[194,12,125,4,"_updatePersistentStats"],[194,34,125,4],[194,41,125,4,"_asyncToGenerator"],[194,58,125,4],[194,59,125,4,"default"],[194,66,125,4],[194,68,126,4],[194,79,126,32,"playerId"],[194,87,126,40],[194,89,126,42,"gameId"],[194,95,126,48],[194,97,126,50,"score"],[194,102,126,55],[194,104,126,57,"gameData"],[194,112,126,65],[194,114,126,67],[195,10,127,6],[196,10,128,6],[197,10,129,6],[199,10,131,6],[200,10,132,6],[200,14,132,12,"AI_GAMES_BY_TYPE"],[200,30,132,28],[200,33,132,31],[200,37,132,35,"Set"],[200,40,132,38],[200,41,132,39],[200,42,132,40],[200,49,132,47],[200,51,132,49],[200,62,132,60],[200,64,132,62],[200,80,132,78],[200,82,132,80],[200,91,132,89],[200,92,132,90],[200,93,132,91],[201,10,133,6],[201,14,133,12,"BEST_TIME_GAMES_BY_TYPE"],[201,37,133,35],[201,40,133,38],[201,44,133,42,"Set"],[201,47,133,45],[201,48,133,46],[202,10,134,8],[203,10,135,8],[204,10,136,8],[205,10,137,8],[206,10,138,8],[207,10,138,8],[207,11,139,7],[207,12,139,8],[209,10,141,6],[210,10,142,6],[210,14,142,10,"gameType"],[210,22,142,18],[210,25,142,21],[210,29,142,25],[211,10,143,6],[211,14,143,10,"trackBestTime"],[211,27,143,23],[211,30,143,26],[211,34,143,30],[211,35,143,31],[211,36,143,32],[212,10,144,6],[212,14,144,10],[213,12,145,8],[213,16,145,8,"_yield$supabase$from$4"],[213,38,145,8],[213,47,145,34,"supabase"],[213,56,145,42],[213,57,145,42,"supabase"],[213,65,145,42],[213,66,146,11,"from"],[213,70,146,15],[213,71,146,16],[213,78,146,23],[213,79,146,24],[213,80,147,11,"select"],[213,86,147,17],[213,87,147,18],[213,115,147,46],[213,116,147,47],[213,117,147,48],[214,14,147,48],[214,15,148,11,"eq"],[214,17,148,13],[214,18,148,14],[214,22,148,18],[214,24,148,20,"gameId"],[214,30,148,26],[214,31,148,27],[214,32,149,11,"maybeSingle"],[214,43,149,22],[214,44,149,23],[214,45,149,24],[215,14,145,22,"g"],[215,15,145,23],[215,18,145,23,"_yield$supabase$from$4"],[215,40,145,23],[215,41,145,16,"data"],[215,45,145,20],[216,12,151,8,"gameType"],[216,20,151,16],[216,23,151,19,"g"],[216,24,151,20],[216,26,151,22,"game_type"],[216,35,151,31],[216,39,151,35],[216,43,151,39],[217,12,152,8],[218,12,153,8,"trackBestTime"],[218,25,153,21],[218,28,153,24],[218,35,153,31,"g"],[218,36,153,32],[218,38,153,34,"track_best_time"],[218,53,153,49],[218,58,153,54],[218,67,153,63],[218,70,153,66,"g"],[218,71,153,67],[218,72,153,68,"track_best_time"],[218,87,153,83],[218,90,153,86],[218,94,153,90],[219,10,154,6],[219,11,154,7],[219,12,154,8],[219,18,154,14],[220,12,155,8],[221,10,155,8],[222,10,158,6],[222,14,158,12,"isAIGame"],[222,22,158,20],[222,25,158,23,"gameType"],[222,33,158,31],[222,36,158,34,"AI_GAMES_BY_TYPE"],[222,52,158,50],[222,53,158,51,"has"],[222,56,158,54],[222,57,158,55,"gameType"],[222,65,158,63],[222,66,158,64],[222,69,158,67],[222,74,158,72],[223,10,159,6],[224,10,160,6],[224,14,160,12,"shouldTrackBestTime"],[224,33,160,31],[224,36,161,8,"trackBestTime"],[224,49,161,21],[224,54,161,26],[224,58,161,30],[224,61,161,33,"trackBestTime"],[224,74,161,46],[224,77,161,50,"gameType"],[224,85,161,58],[224,88,161,61,"BEST_TIME_GAMES_BY_TYPE"],[224,111,161,84],[224,112,161,85,"has"],[224,115,161,88],[224,116,161,89,"gameType"],[224,124,161,97],[224,125,161,98],[224,128,161,101],[224,133,161,107],[226,10,163,6],[227,10,164,6],[227,14,164,6,"_yield$supabase$from$5"],[227,36,164,6],[227,45,164,49,"supabase"],[227,54,164,57],[227,55,164,57,"supabase"],[227,63,164,57],[227,64,165,9,"from"],[227,68,165,13],[227,69,165,14],[227,88,165,33],[227,89,165,34],[227,90,166,9,"select"],[227,96,166,15],[227,97,166,16],[227,137,166,56],[227,138,166,57],[227,139,167,9,"eq"],[227,141,167,11],[227,142,167,12],[227,153,167,23],[227,155,167,25,"playerId"],[227,163,167,33],[227,164,167,34],[227,165,168,9,"eq"],[227,167,168,11],[227,168,168,12],[227,177,168,21],[227,179,168,23,"gameId"],[227,185,168,29],[227,186,168,30],[227,187,169,9,"maybeSingle"],[227,198,169,20],[227,199,169,21],[227,200,169,22],[228,12,164,20,"row"],[228,15,164,23],[228,18,164,23,"_yield$supabase$from$5"],[228,40,164,23],[228,41,164,14,"data"],[228,45,164,18],[229,12,164,32,"selErr"],[229,18,164,38],[229,21,164,38,"_yield$supabase$from$5"],[229,43,164,38],[229,44,164,25,"error"],[229,49,164,30],[230,10,170,6],[230,14,170,10,"selErr"],[230,20,170,16],[230,22,170,18],[230,28,170,24,"selErr"],[230,34,170,30],[231,10,172,6],[231,14,172,10,"isAIGame"],[231,22,172,18],[231,24,172,20],[232,12,173,8],[233,12,174,8],[234,12,175,8],[234,16,175,14,"winInc"],[234,22,175,20],[234,25,175,23,"gameData"],[234,33,175,31],[234,35,175,33,"winner"],[234,41,175,39],[234,46,175,44],[234,54,175,52],[234,57,175,55],[234,58,175,56],[234,61,175,59],[234,62,175,60],[235,12,177,8],[235,16,177,12],[235,17,177,13,"row"],[235,20,177,16],[235,22,177,18],[236,14,178,10],[236,20,178,16,"supabase"],[236,29,178,24],[236,30,178,24,"supabase"],[236,38,178,24],[236,39,178,25,"from"],[236,43,178,29],[236,44,178,30],[236,63,178,49],[236,64,178,50],[236,65,178,51,"insert"],[236,71,178,57],[236,72,178,58],[237,16,179,12,"player_id"],[237,25,179,21],[237,27,179,23,"playerId"],[237,35,179,31],[238,16,180,12,"game_id"],[238,23,180,19],[238,25,180,21,"gameId"],[238,31,180,27],[239,16,181,12,"high_score"],[239,26,181,22],[239,28,181,24,"winInc"],[239,34,181,30],[240,16,182,12,"total_plays"],[240,27,182,23],[240,29,182,25],[241,14,183,10],[241,15,183,11],[241,16,183,12],[242,12,184,8],[242,13,184,9],[242,19,184,15],[243,14,185,10],[243,20,185,16,"supabase"],[243,29,185,24],[243,30,185,24,"supabase"],[243,38,185,24],[243,39,186,13,"from"],[243,43,186,17],[243,44,186,18],[243,63,186,37],[243,64,186,38],[243,65,187,13,"update"],[243,71,187,19],[243,72,187,20],[244,16,188,14,"high_score"],[244,26,188,24],[244,28,188,27,"Number"],[244,34,188,33],[244,35,188,34,"row"],[244,38,188,37],[244,39,188,38,"high_score"],[244,49,188,48],[244,53,188,52],[244,54,188,53],[244,55,188,54],[244,58,188,57,"winInc"],[244,64,188,64],[245,16,189,14,"total_plays"],[245,27,189,25],[245,29,189,28,"Number"],[245,35,189,34],[245,36,189,35,"row"],[245,39,189,38],[245,40,189,39,"total_plays"],[245,51,189,50],[245,55,189,54],[245,56,189,55],[245,57,189,56],[245,60,189,59],[246,14,190,12],[246,15,190,13],[246,16,190,14],[246,17,191,13,"eq"],[246,19,191,15],[246,20,191,16],[246,24,191,20],[246,26,191,22,"row"],[246,29,191,25],[246,30,191,26,"id"],[246,32,191,28],[246,33,191,29],[247,12,192,8],[248,12,193,8],[249,10,194,6],[251,10,196,6],[252,10,197,6],[253,10,198,6],[253,14,198,12,"newHigh"],[253,21,198,19],[253,24,198,22,"Math"],[253,28,198,26],[253,29,198,27,"max"],[253,32,198,30],[253,33,198,31,"Number"],[253,39,198,37],[253,40,198,38,"row"],[253,43,198,41],[253,45,198,43,"high_score"],[253,55,198,53],[253,59,198,57],[253,60,198,58],[253,61,198,59],[253,63,198,61,"Number"],[253,69,198,67],[253,70,198,68,"score"],[253,75,198,73],[253,79,198,77],[253,80,198,78],[253,81,198,79],[253,82,198,80],[255,10,200,6],[256,10,201,6],[257,10,202,6],[258,10,203,6],[259,10,204,6],[259,14,204,12,"durationSec"],[259,25,204,23],[259,28,204,26,"Number"],[259,34,204,32],[259,35,204,33,"gameData"],[259,43,204,41],[259,45,204,43,"duration"],[259,53,204,51],[259,57,204,55],[259,58,204,56],[259,59,204,57],[259,63,204,61],[259,67,204,65],[260,10,206,6],[260,14,206,10],[260,15,206,11,"row"],[260,18,206,14],[260,20,206,16],[261,12,207,8],[261,18,207,14,"supabase"],[261,27,207,22],[261,28,207,22,"supabase"],[261,36,207,22],[261,37,207,23,"from"],[261,41,207,27],[261,42,207,28],[261,61,207,47],[261,62,207,48],[261,63,207,49,"insert"],[261,69,207,55],[261,70,207,56],[262,14,208,10,"player_id"],[262,23,208,19],[262,25,208,21,"playerId"],[262,33,208,29],[263,14,209,10,"game_id"],[263,21,209,17],[263,23,209,19,"gameId"],[263,29,209,25],[264,14,210,10,"high_score"],[264,24,210,20],[264,26,210,22,"Number"],[264,32,210,28],[264,33,210,29,"score"],[264,38,210,34],[264,42,210,38],[264,43,210,39],[264,44,210,40],[265,14,211,10,"total_plays"],[265,25,211,21],[265,27,211,23],[265,28,211,24],[266,14,212,10],[266,18,212,14,"shouldTrackBestTime"],[266,37,212,33],[266,41,212,37,"durationSec"],[266,52,212,48],[266,56,212,52],[266,60,212,56],[266,63,212,59],[267,16,212,61,"best_time"],[267,25,212,70],[267,27,212,72,"durationSec"],[268,14,212,84],[268,15,212,85],[268,18,212,88],[268,19,212,89],[268,20,212,90],[269,12,213,8],[269,13,213,9],[269,14,213,10],[270,10,214,6],[270,11,214,7],[270,17,214,13],[271,12,215,8],[271,16,215,14,"next"],[271,20,215,18],[271,23,215,21],[272,14,216,10,"high_score"],[272,24,216,20],[272,26,216,22,"newHigh"],[272,33,216,29],[273,14,217,10,"total_plays"],[273,25,217,21],[273,27,217,24,"Number"],[273,33,217,30],[273,34,217,31,"row"],[273,37,217,34],[273,38,217,35,"total_plays"],[273,49,217,46],[273,53,217,50],[273,54,217,51],[273,55,217,52],[273,58,217,55],[274,12,218,8],[274,13,218,9],[275,12,220,8],[275,16,220,12,"shouldTrackBestTime"],[275,35,220,31],[275,39,220,35,"durationSec"],[275,50,220,46],[275,54,220,50],[275,58,220,54],[275,60,220,56],[276,14,221,10],[276,18,221,16,"currentBest"],[276,29,221,27],[276,32,221,30,"row"],[276,35,221,33],[276,36,221,34,"best_time"],[276,45,221,43],[276,49,221,47],[276,53,221,51],[276,56,221,54],[276,60,221,58],[276,63,221,61,"Number"],[276,69,221,67],[276,70,221,68,"row"],[276,73,221,71],[276,74,221,72,"best_time"],[276,83,221,81],[276,84,221,82],[277,14,222,10,"next"],[277,18,222,14],[277,19,222,15,"best_time"],[277,28,222,24],[277,31,223,12,"currentBest"],[277,42,223,23],[277,46,223,27],[277,50,223,31],[277,54,223,35,"currentBest"],[277,65,223,46],[277,70,223,51],[277,71,223,52],[277,74,224,16,"durationSec"],[277,85,224,27],[277,88,225,16,"Math"],[277,92,225,20],[277,93,225,21,"min"],[277,96,225,24],[277,97,225,25,"currentBest"],[277,108,225,36],[277,110,225,38,"durationSec"],[277,121,225,49],[277,122,225,50],[278,12,226,8],[279,12,228,8],[279,18,228,14,"supabase"],[279,27,228,22],[279,28,228,22,"supabase"],[279,36,228,22],[279,37,228,23,"from"],[279,41,228,27],[279,42,228,28],[279,61,228,47],[279,62,228,48],[279,63,228,49,"update"],[279,69,228,55],[279,70,228,56,"next"],[279,74,228,60],[279,75,228,61],[279,76,228,62,"eq"],[279,78,228,64],[279,79,228,65],[279,83,228,69],[279,85,228,71,"row"],[279,88,228,74],[279,89,228,75,"id"],[279,91,228,77],[279,92,228,78],[280,10,229,6],[281,8,230,4],[281,9,230,5],[282,8,230,5],[282,17,126,10,"updatePersistentStats"],[282,38,126,31,"updatePersistentStats"],[282,39,126,31,"_x7"],[282,42,126,31],[282,44,126,31,"_x8"],[282,47,126,31],[282,49,126,31,"_x9"],[282,52,126,31],[282,54,126,31,"_x0"],[282,57,126,31],[283,10,126,31],[283,17,126,31,"_updatePersistentStats"],[283,39,126,31],[283,40,126,31,"apply"],[283,45,126,31],[283,52,126,31,"arguments"],[283,61,126,31],[284,8,126,31],[285,8,126,31],[285,15,126,10,"updatePersistentStats"],[285,36,126,31],[286,6,126,31],[287,6,234,2],[288,0,235,0],[289,0,236,0],[290,4,234,2],[291,6,234,2,"key"],[291,9,234,2],[292,6,234,2,"value"],[292,11,234,2],[293,8,234,2],[293,12,234,2,"_checkAchievements"],[293,30,234,2],[293,37,234,2,"_asyncToGenerator"],[293,54,234,2],[293,55,234,2,"default"],[293,62,234,2],[293,64,237,2],[293,75,237,26,"playerId"],[293,83,237,34],[293,85,237,36,"gameId"],[293,91,237,42],[293,93,237,44],[294,10,238,4],[294,14,238,4,"_yield$supabase$from$6"],[294,36,238,4],[294,45,238,48,"supabase"],[294,54,238,56],[294,55,238,56,"supabase"],[294,63,238,56],[294,64,239,7,"from"],[294,68,239,11],[294,69,239,12],[294,83,239,26],[294,84,239,27],[294,85,240,7,"select"],[294,91,240,13],[294,92,240,14],[294,95,240,17],[294,96,240,18],[294,97,241,7,"or"],[294,99,241,9],[294,100,241,10],[294,114,241,24,"gameId"],[294,120,241,30],[294,138,241,48],[294,139,241,49],[295,12,238,18,"achievements"],[295,24,238,30],[295,27,238,30,"_yield$supabase$from$6"],[295,49,238,30],[295,50,238,12,"data"],[295,54,238,16],[296,12,238,32,"error"],[296,17,238,37],[296,20,238,37,"_yield$supabase$from$6"],[296,42,238,37],[296,43,238,32,"error"],[296,48,238,37],[297,10,242,4],[297,14,242,8,"error"],[297,19,242,13],[297,21,242,15],[297,27,242,21,"error"],[297,32,242,26],[298,10,244,4],[298,14,244,4,"_yield$supabase$from$7"],[298,36,244,4],[298,45,244,50,"supabase"],[298,54,244,58],[298,55,244,58,"supabase"],[298,63,244,58],[298,64,245,7,"from"],[298,68,245,11],[298,69,245,12],[298,84,245,27],[298,85,245,28],[298,86,246,7,"select"],[298,92,246,13],[298,93,246,14],[298,111,246,32],[298,112,246,33],[298,113,247,7,"eq"],[298,115,247,9],[298,116,247,10],[298,127,247,21],[298,129,247,23,"playerId"],[298,137,247,31],[298,138,247,32],[298,139,248,7,"eq"],[298,141,248,9],[298,142,248,10],[298,151,248,19],[298,153,248,21,"gameId"],[298,159,248,27],[298,160,248,28],[299,12,244,18,"sessions"],[299,20,244,26],[299,23,244,26,"_yield$supabase$from$7"],[299,45,244,26],[299,46,244,12,"data"],[299,50,244,16],[300,12,244,35,"sErr"],[300,16,244,39],[300,19,244,39,"_yield$supabase$from$7"],[300,41,244,39],[300,42,244,28,"error"],[300,47,244,33],[301,10,249,4],[301,14,249,8,"sErr"],[301,18,249,12],[301,20,249,14],[301,26,249,20,"sErr"],[301,30,249,24],[302,10,251,4],[302,14,251,10,"totalGameTime"],[302,27,251,23],[302,30,251,26],[302,31,251,27,"sessions"],[302,39,251,35],[302,43,251,39],[302,45,251,41],[302,47,251,43,"reduce"],[302,53,251,49],[302,54,252,6],[302,55,252,7,"sum"],[302,58,252,10],[302,60,252,12,"r"],[302,61,252,13],[302,66,252,18,"sum"],[302,69,252,21],[302,73,252,25,"Number"],[302,79,252,31],[302,80,252,32,"r"],[302,81,252,33],[302,82,252,34,"duration_seconds"],[302,98,252,50],[302,99,252,51],[302,103,252,55],[302,104,252,56],[302,105,252,57],[302,107,253,6],[302,108,254,4],[302,109,254,5],[303,10,256,4],[303,14,256,4,"_yield$supabase$from$8"],[303,36,256,4],[303,45,256,51,"supabase"],[303,54,256,59],[303,55,256,59,"supabase"],[303,63,256,59],[303,64,257,7,"from"],[303,68,257,11],[303,69,257,12],[303,90,257,33],[303,91,257,34],[303,92,258,7,"select"],[303,98,258,13],[303,99,258,14],[303,115,258,30],[303,116,258,31],[303,117,259,7,"eq"],[303,119,259,9],[303,120,259,10],[303,131,259,21],[303,133,259,23,"playerId"],[303,141,259,31],[303,142,259,32],[304,12,256,18,"completed"],[304,21,256,27],[304,24,256,27,"_yield$supabase$from$8"],[304,46,256,27],[304,47,256,12,"data"],[304,51,256,16],[305,12,256,36,"cErr"],[305,16,256,40],[305,19,256,40,"_yield$supabase$from$8"],[305,41,256,40],[305,42,256,29,"error"],[305,47,256,34],[306,10,260,4],[306,14,260,8,"cErr"],[306,18,260,12],[306,20,260,14],[306,26,260,20,"cErr"],[306,30,260,24],[307,10,262,4],[307,14,262,10,"done"],[307,18,262,14],[307,21,262,17],[307,25,262,21,"Set"],[307,28,262,24],[307,29,262,25],[307,30,262,26,"completed"],[307,39,262,35],[307,43,262,39],[307,45,262,41],[307,47,262,43,"map"],[307,50,262,46],[307,51,262,48,"a"],[307,52,262,49],[307,56,262,54,"a"],[307,57,262,55],[307,58,262,56,"achievement_id"],[307,72,262,70],[307,73,262,71],[307,74,262,72],[308,10,264,4],[308,15,264,9],[308,19,264,15,"ach"],[308,22,264,18],[308,26,264,22,"achievements"],[308,38,264,34],[308,42,264,38],[308,44,264,40],[308,46,264,42],[309,12,265,6],[309,16,265,10,"done"],[309,20,265,14],[309,21,265,15,"has"],[309,24,265,18],[309,25,265,19,"ach"],[309,28,265,22],[309,29,265,23,"id"],[309,31,265,25],[309,32,265,26],[309,34,265,28],[310,12,267,6],[310,16,267,10,"progress"],[310,24,267,18],[310,27,267,21],[310,28,267,22],[311,12,268,6],[311,16,268,10,"ach"],[311,19,268,13],[311,20,268,14,"achievement_type"],[311,36,268,30],[311,41,268,35],[311,57,268,51],[311,59,268,53],[312,14,269,8],[312,18,269,8,"_yield$supabase$from$9"],[312,40,269,8],[312,49,269,34,"supabase"],[312,58,269,42],[312,59,269,42,"supabase"],[312,67,269,42],[312,68,270,11,"from"],[312,72,270,15],[312,73,270,16],[312,82,270,25],[312,83,270,26],[312,84,271,11,"select"],[312,90,271,17],[312,91,271,18],[312,115,271,42],[312,116,271,43],[312,117,272,11,"eq"],[312,119,272,13],[312,120,272,14],[312,124,272,18],[312,126,272,20,"playerId"],[312,134,272,28],[312,135,272,29],[312,136,273,11,"maybeSingle"],[312,147,273,22],[312,148,273,23],[312,149,273,24],[313,16,269,22,"p"],[313,17,269,23],[313,20,269,23,"_yield$supabase$from$9"],[313,42,269,23],[313,43,269,16,"data"],[313,47,269,20],[314,14,274,8,"progress"],[314,22,274,16],[314,25,274,19,"Number"],[314,31,274,25],[314,32,274,26,"p"],[314,33,274,27],[314,35,274,29,"total_playtime_seconds"],[314,57,274,51],[314,61,274,55],[314,62,274,56],[314,63,274,57],[315,12,275,6],[315,13,275,7],[315,19,275,13],[315,23,275,17,"ach"],[315,26,275,20],[315,27,275,21,"achievement_type"],[315,43,275,37],[315,48,275,42],[315,63,275,57],[315,65,275,59],[316,14,276,8,"progress"],[316,22,276,16],[316,25,276,19,"totalGameTime"],[316,38,276,32],[317,12,277,6],[318,12,279,6],[318,16,279,10,"progress"],[318,24,279,18],[318,28,279,22,"Number"],[318,34,279,28],[318,35,279,29,"ach"],[318,38,279,32],[318,39,279,33,"target_value"],[318,51,279,45],[318,55,279,49],[318,56,279,50],[318,57,279,51],[318,59,279,53],[319,14,280,8],[319,20,280,14,"supabase"],[319,29,280,22],[319,30,280,22,"supabase"],[319,38,280,22],[319,39,280,23,"from"],[319,43,280,27],[319,44,280,28],[319,65,280,49],[319,66,280,50],[319,67,280,51,"insert"],[319,73,280,57],[319,74,280,58],[320,16,281,10,"player_id"],[320,25,281,19],[320,27,281,21,"playerId"],[320,35,281,29],[321,16,282,10,"achievement_id"],[321,30,282,24],[321,32,282,26,"ach"],[321,35,282,29],[321,36,282,30,"id"],[321,38,282,32],[322,16,283,10,"progress"],[322,24,283,18],[323,16,284,10,"is_completed"],[323,28,284,22],[323,30,284,24],[323,34,284,28],[324,16,285,10,"completed_at"],[324,28,285,22],[324,30,285,24],[324,34,285,28,"Date"],[324,38,285,32],[324,39,285,33],[324,40,285,34],[324,41,285,35,"toISOString"],[324,52,285,46],[324,53,285,47],[325,14,286,8],[325,15,286,9],[325,16,286,10],[326,14,287,8,"console"],[326,21,287,15],[326,22,287,16,"log"],[326,25,287,19],[326,26,287,20],[326,54,287,48,"ach"],[326,57,287,51],[326,58,287,52,"name"],[326,62,287,56],[326,64,287,58],[326,65,287,59],[327,12,288,6],[328,10,289,4],[329,8,290,2],[329,9,290,3],[330,8,290,3],[330,17,237,8,"checkAchievements"],[330,34,237,25,"checkAchievements"],[330,35,237,25,"_x1"],[330,38,237,25],[330,40,237,25,"_x10"],[330,44,237,25],[331,10,237,25],[331,17,237,25,"_checkAchievements"],[331,35,237,25],[331,36,237,25,"apply"],[331,41,237,25],[331,48,237,25,"arguments"],[331,57,237,25],[332,8,237,25],[333,8,237,25],[333,15,237,8,"checkAchievements"],[333,32,237,25],[334,6,237,25],[335,6,292,2],[336,0,293,0],[337,0,294,0],[338,6,292,2],[339,4,292,2],[340,6,292,2,"key"],[340,9,292,2],[341,6,292,2,"value"],[341,11,292,2],[342,8,292,2],[342,12,292,2,"_storeFailed"],[342,24,292,2],[342,31,292,2,"_asyncToGenerator"],[342,48,292,2],[342,49,292,2,"default"],[342,56,292,2],[342,58,295,2],[342,69,295,20,"session"],[342,76,295,27],[342,78,295,29],[343,10,296,4],[343,14,296,10,"failed"],[343,20,296,16],[343,29,296,25,"AsyncStorage"],[343,41,296,37],[343,42,296,37,"default"],[343,49,296,37],[343,50,296,38,"getItem"],[343,57,296,45],[343,58,296,46],[343,75,296,63],[343,76,296,64],[344,10,297,4],[344,14,297,10,"list"],[344,18,297,14],[344,21,297,17,"failed"],[344,27,297,23],[344,30,297,26,"JSON"],[344,34,297,30],[344,35,297,31,"parse"],[344,40,297,36],[344,41,297,37,"failed"],[344,47,297,43],[344,48,297,44],[344,51,297,47],[344,53,297,49],[345,10,298,4,"list"],[345,14,298,8],[345,15,298,9,"push"],[345,19,298,13],[345,20,298,14,"session"],[345,27,298,21],[345,28,298,22],[346,10,299,4],[346,16,299,10,"AsyncStorage"],[346,28,299,22],[346,29,299,22,"default"],[346,36,299,22],[346,37,299,23,"setItem"],[346,44,299,30],[346,45,299,31],[346,62,299,48],[346,64,299,50,"JSON"],[346,68,299,54],[346,69,299,55,"stringify"],[346,78,299,64],[346,79,299,65,"list"],[346,83,299,69],[346,84,299,70],[346,85,299,71],[347,8,300,2],[347,9,300,3],[348,8,300,3],[348,17,295,8,"storeFailed"],[348,28,295,19,"storeFailed"],[348,29,295,19,"_x11"],[348,33,295,19],[349,10,295,19],[349,17,295,19,"_storeFailed"],[349,29,295,19],[349,30,295,19,"apply"],[349,35,295,19],[349,42,295,19,"arguments"],[349,51,295,19],[350,8,295,19],[351,8,295,19],[351,15,295,8,"storeFailed"],[351,26,295,19],[352,6,295,19],[353,4,295,19],[354,6,295,19,"key"],[354,9,295,19],[355,6,295,19,"value"],[355,11,295,19],[356,8,295,19],[356,12,295,19,"_retryFailedSessions"],[356,32,295,19],[356,39,295,19,"_asyncToGenerator"],[356,56,295,19],[356,57,295,19,"default"],[356,64,295,19],[356,66,302,2],[356,79,302,30],[357,10,303,4],[357,14,303,10,"failed"],[357,20,303,16],[357,29,303,25,"AsyncStorage"],[357,41,303,37],[357,42,303,37,"default"],[357,49,303,37],[357,50,303,38,"getItem"],[357,57,303,45],[357,58,303,46],[357,75,303,63],[357,76,303,64],[358,10,304,4],[358,14,304,8],[358,15,304,9,"failed"],[358,21,304,15],[358,23,304,17],[359,10,305,4],[359,14,305,10,"list"],[359,18,305,14],[359,21,305,17,"JSON"],[359,25,305,21],[359,26,305,22,"parse"],[359,31,305,27],[359,32,305,28,"failed"],[359,38,305,34],[359,39,305,35],[360,10,306,4],[360,14,306,10,"still"],[360,19,306,15],[360,22,306,18],[360,24,306,20],[361,10,307,4],[361,15,307,9],[361,19,307,15,"s"],[361,20,307,16],[361,24,307,20,"list"],[361,28,307,24],[361,30,307,26],[362,12,308,6],[362,16,308,10],[363,14,309,8],[363,20,309,14],[363,24,309,18],[363,25,309,19,"submitSession"],[363,38,309,32],[363,39,309,33,"s"],[363,40,309,34],[363,41,309,35],[364,12,310,6],[364,13,310,7],[364,14,310,8],[364,20,310,14],[365,14,311,8,"still"],[365,19,311,13],[365,20,311,14,"push"],[365,24,311,18],[365,25,311,19,"s"],[365,26,311,20],[365,27,311,21],[366,12,312,6],[367,10,313,4],[368,10,314,4],[368,16,314,10,"AsyncStorage"],[368,28,314,22],[368,29,314,22,"default"],[368,36,314,22],[368,37,314,23,"setItem"],[368,44,314,30],[368,45,314,31],[368,62,314,48],[368,64,314,50,"JSON"],[368,68,314,54],[368,69,314,55,"stringify"],[368,78,314,64],[368,79,314,65,"still"],[368,84,314,70],[368,85,314,71],[368,86,314,72],[369,8,315,2],[369,9,315,3],[370,8,315,3],[370,17,302,8,"retryFailedSessions"],[370,36,302,27,"retryFailedSessions"],[370,37,302,27],[371,10,302,27],[371,17,302,27,"_retryFailedSessions"],[371,37,302,27],[371,38,302,27,"apply"],[371,43,302,27],[371,50,302,27,"arguments"],[371,59,302,27],[372,8,302,27],[373,8,302,27],[373,15,302,8,"retryFailedSessions"],[373,34,302,27],[374,6,302,27],[375,6,317,2],[376,0,318,0],[377,0,319,0],[378,4,317,2],[379,6,317,2,"key"],[379,9,317,2],[380,6,317,2,"value"],[380,11,317,2],[380,13,320,2],[380,22,320,2,"getCurrentDuration"],[380,40,320,20,"getCurrentDuration"],[380,41,320,21,"gameId"],[380,47,320,27],[380,49,320,29],[381,8,321,4],[381,12,321,10,"s"],[381,13,321,11],[381,16,321,14],[381,20,321,18],[381,21,321,19,"sessions"],[381,29,321,27],[381,30,321,28,"get"],[381,33,321,31],[381,34,321,32,"gameId"],[381,40,321,38],[381,41,321,39],[382,8,322,4],[382,15,322,11,"s"],[382,16,322,12],[382,19,322,15,"Math"],[382,23,322,19],[382,24,322,20,"floor"],[382,29,322,25],[382,30,322,26],[382,31,322,27,"Date"],[382,35,322,31],[382,36,322,32,"now"],[382,39,322,35],[382,40,322,36],[382,41,322,37],[382,44,322,40,"s"],[382,45,322,41],[382,46,322,42,"startTime"],[382,55,322,51],[382,59,322,55],[382,63,322,59],[382,64,322,60],[382,67,322,63],[382,68,322,64],[383,6,323,2],[384,4,323,3],[385,6,323,3,"key"],[385,9,323,3],[386,6,323,3,"value"],[386,11,323,3],[386,13,325,2],[386,22,325,2,"updateGameData"],[386,36,325,16,"updateGameData"],[386,37,325,17,"gameId"],[386,43,325,23],[386,45,325,25,"gameData"],[386,53,325,33],[386,55,325,35],[387,8,326,4],[387,12,326,10,"s"],[387,13,326,11],[387,16,326,14],[387,20,326,18],[387,21,326,19,"sessions"],[387,29,326,27],[387,30,326,28,"get"],[387,33,326,31],[387,34,326,32,"gameId"],[387,40,326,38],[387,41,326,39],[388,8,327,4],[388,12,327,8,"s"],[388,13,327,9],[388,17,327,13],[388,18,327,14,"s"],[388,19,327,15],[388,20,327,16,"ended"],[388,25,327,21],[388,27,327,23,"s"],[388,28,327,24],[388,29,327,25,"gameData"],[388,37,327,33],[388,40,327,36],[389,10,327,38],[389,13,327,41,"s"],[389,14,327,42],[389,15,327,43,"gameData"],[389,23,327,51],[390,10,327,53],[390,14,327,57,"gameData"],[390,22,327,65],[390,26,327,69],[390,27,327,70],[390,28,327,71],[391,8,327,73],[391,9,327,74],[392,6,328,2],[393,4,328,3],[394,2,328,3],[395,2,331,0],[395,6,331,0,"_default"],[395,14,331,0],[395,17,331,15],[395,21,331,19,"GameTracker"],[395,32,331,30],[395,33,331,31],[395,34,331,32],[396,0,331,33],[396,3]],"functionMap":{"names":["<global>","GameTracker","GameTracker#constructor","GameTracker#startGame","GameTracker#endGame","GameTracker#submitSession","GameTracker#addTotalPlaytime","GameTracker#updatePersistentStats","GameTracker#checkAchievements","reduce$argument_0","map$argument_0","GameTracker#storeFailed","GameTracker#retryFailedSessions","GameTracker#getCurrentDuration","GameTracker#updateGameData"],"mappings":"AAA;ACK;ECC;GDE;EEK;GFyB;EGK;GH2B;EIK;GJ0B;EKK;GLgB;IMG;KNwG;EOO;MCe,mDD;+CEU,uBF;GP4B;EUK;GVK;EWE;GXa;EYK;GZG;EaE;GbG;CDC"},"hasCjsExports":false},"type":"js/module"}]}