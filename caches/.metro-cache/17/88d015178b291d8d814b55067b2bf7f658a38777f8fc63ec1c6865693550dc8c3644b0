{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":354},"end":{"line":8,"column":69,"index":423}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":424},"end":{"line":9,"column":38,"index":462}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"],"imports":1}},{"name":"./playtimeTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":463},"end":{"line":10,"column":48,"index":511}}],"key":"7rFJhuIz9Kets2yJ9zan0luljEk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[4], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _supabase = require(_dependencyMap[5], \"./supabase\");\n  var _playtimeTracker = require(_dependencyMap[6], \"./playtimeTracker\");\n  var playtimeTracker = _interopDefault(_playtimeTracker);\n  // src/utils/gameTracker.js\n  // Tracks individual game sessions and updates Supabase tables:\n  //   • game_sessions        – one row per play\n  //   • player_game_stats    – per-game stats (high score, best time, etc.)\n  //   • players.total_playtime_seconds – total playtime across all games\n  // NOTE: global app-time is handled separately by playtimeTracker.\n  var GameTracker = /*#__PURE__*/function () {\n    function GameTracker() {\n      (0, _classCallCheck.default)(this, GameTracker);\n      this.sessions = new Map(); // Map<gameId, session>\n    }\n\n    /*─────────────────────────────\n      Start a new game session\n    ─────────────────────────────*/\n    return (0, _createClass.default)(GameTracker, [{\n      key: \"startGame\",\n      value: (function () {\n        var _startGame = (0, _asyncToGenerator.default)(function* (gameId, playerId) {\n          if (!gameId || !playerId) return;\n          console.log(`🎮 Starting game tracking: ${gameId} for player ${playerId}`);\n\n          // End any leftover sessions first\n          for (var _ref of this.sessions) {\n            var _ref2 = (0, _slicedToArray.default)(_ref, 2);\n            var id = _ref2[0];\n            var s = _ref2[1];\n            if (!s.ended) yield this.endGame(id, s.score || 0, s.gameData || {});\n          }\n\n          // Only set the player for global tracker (no per-game start)\n          playtimeTracker.default.setPlayerId(playerId);\n          var session = {\n            gameId,\n            playerId,\n            startTime: Date.now(),\n            endTime: null,\n            duration: 0,\n            score: 0,\n            gameData: {},\n            ended: false\n          };\n          this.sessions.set(gameId, session);\n          yield AsyncStorage.default.setItem(`game_session_${gameId}`, JSON.stringify(session));\n        });\n        function startGame(_x, _x2) {\n          return _startGame.apply(this, arguments);\n        }\n        return startGame;\n      }()\n      /*─────────────────────────────\n        End a session and submit\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"endGame\",\n      value: (function () {\n        var _endGame = (0, _asyncToGenerator.default)(function* (gameId) {\n          var score = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var gameData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var s = this.sessions.get(gameId);\n          if (!s) {\n            var raw = yield AsyncStorage.default.getItem(`game_session_${gameId}`);\n            if (raw) s = JSON.parse(raw);\n          }\n          if (!s || s.ended) return s || null;\n          s.endTime = Date.now();\n          s.duration = Math.floor((s.endTime - s.startTime) / 1000);\n          s.score = Number(score || 0);\n          s.gameData = gameData || {};\n          s.ended = true;\n          console.log(`🎮 Game session: ${s.duration}s`, s.gameData);\n          try {\n            yield this.submitSession(s);\n          } catch (e) {\n            console.error(\"❌ Failed to submit session:\", e);\n            yield this.storeFailed(s);\n          } finally {\n            this.sessions.delete(gameId);\n            yield AsyncStorage.default.removeItem(`game_session_${gameId}`);\n          }\n          return s;\n        });\n        function endGame(_x3) {\n          return _endGame.apply(this, arguments);\n        }\n        return endGame;\n      }()\n      /*─────────────────────────────\n        Persist to Supabase + update stats\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"submitSession\",\n      value: (function () {\n        var _submitSession = (0, _asyncToGenerator.default)(function* (s) {\n          var playerId = s.playerId,\n            gameId = s.gameId,\n            duration = s.duration,\n            score = s.score,\n            endTime = s.endTime,\n            gameData = s.gameData;\n\n          // 1️⃣ log a raw session\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"game_sessions\").insert({\n              player_id: playerId,\n              game_id: gameId,\n              score,\n              points_earned: 10,\n              duration_seconds: duration,\n              game_data: {\n                duration,\n                ...gameData\n              },\n              created_at: new Date(endTime).toISOString()\n            }),\n            insertErr = _yield$supabase$from$.error;\n          if (insertErr) throw insertErr;\n\n          // 2️⃣ add to players.total_playtime_seconds\n          yield this.addTotalPlaytime(playerId, duration);\n\n          // 3️⃣ update per-game stats\n          console.log(\"➡️ Submitting persistent stats\", {\n            playerId,\n            gameId,\n            score\n          });\n          yield this.updatePersistentStats(playerId, gameId, score, gameData);\n\n          // 4️⃣ achievements\n          yield this.checkAchievements(playerId, gameId);\n          console.log(\"✅ Session + persistent stats recorded\");\n        });\n        function submitSession(_x4) {\n          return _submitSession.apply(this, arguments);\n        }\n        return submitSession;\n      }()\n      /*─────────────────────────────\n        Increment global playtime\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"addTotalPlaytime\",\n      value: (function () {\n        var _addTotalPlaytime = (0, _asyncToGenerator.default)(function* (playerId, seconds) {\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"players\").select(\"total_playtime_seconds\").eq(\"id\", playerId).maybeSingle(),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          var current = Number(data?.total_playtime_seconds || 0);\n          var next = current + Number(seconds || 0);\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"players\").update({\n              total_playtime_seconds: next\n            }).eq(\"id\", playerId),\n            upErr = _yield$supabase$from$3.error;\n          if (upErr) throw upErr;\n        });\n        function addTotalPlaytime(_x5, _x6) {\n          return _addTotalPlaytime.apply(this, arguments);\n        }\n        return addTotalPlaytime;\n      }()\n      /*─────────────────────────────\n        Per-game persistent stats\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"updatePersistentStats\",\n      value: (function () {\n        var _updatePersistentStats = (0, _asyncToGenerator.default)(function* (playerId, gameId, score, gameData) {\n          var AI_GAMES_BY_TYPE = new Set([\"chess\", \"connect_4\", \"dots_and_boxes\", \"mancala\"]);\n          var BEST_TIME_GAMES_BY_TYPE = new Set([\"block_blast\"]);\n          var gameType = null;\n          var trackBestTime = null;\n          try {\n            var _yield$supabase$from$4 = yield _supabase.supabase.from(\"games\").select(\"game_type, track_best_time\").eq(\"id\", gameId).maybeSingle(),\n              g = _yield$supabase$from$4.data;\n            gameType = g?.game_type || null;\n            trackBestTime = typeof g?.track_best_time === \"boolean\" ? g.track_best_time : null;\n          } catch {\n            /* ignore */\n          }\n          var isAIGame = gameType ? AI_GAMES_BY_TYPE.has(gameType) : false;\n          var shouldTrackBestTime = trackBestTime !== null ? trackBestTime : gameType ? BEST_TIME_GAMES_BY_TYPE.has(gameType) : false;\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"player_game_stats\").select(\"id, high_score, total_plays, best_time\").eq(\"player_id\", playerId).eq(\"game_id\", gameId).maybeSingle(),\n            row = _yield$supabase$from$5.data,\n            selErr = _yield$supabase$from$5.error;\n          if (selErr) throw selErr;\n          if (isAIGame) {\n            var winInc = gameData?.winner === \"Player\" ? 1 : 0;\n            if (!row) {\n              yield _supabase.supabase.from(\"player_game_stats\").insert({\n                player_id: playerId,\n                game_id: gameId,\n                high_score: winInc,\n                total_plays: 1\n              });\n            } else {\n              yield _supabase.supabase.from(\"player_game_stats\").update({\n                high_score: Number(row.high_score || 0) + winInc,\n                total_plays: Number(row.total_plays || 0) + 1\n              }).eq(\"id\", row.id);\n            }\n            return;\n          }\n          var newHigh = Math.max(Number(row?.high_score || 0), Number(score || 0));\n          var durationSec = Number(gameData?.duration ?? 0) || null;\n          if (!row) {\n            yield _supabase.supabase.from(\"player_game_stats\").insert({\n              player_id: playerId,\n              game_id: gameId,\n              high_score: Number(score || 0),\n              total_plays: 1,\n              ...(shouldTrackBestTime && durationSec != null ? {\n                best_time: durationSec\n              } : {})\n            });\n          } else {\n            var next = {\n              high_score: newHigh,\n              total_plays: Number(row.total_plays || 0) + 1\n            };\n            if (shouldTrackBestTime && durationSec != null) {\n              var currentBest = row.best_time == null ? null : Number(row.best_time);\n              next.best_time = currentBest == null || currentBest === 0 ? durationSec : Math.min(currentBest, durationSec);\n            }\n            yield _supabase.supabase.from(\"player_game_stats\").update(next).eq(\"id\", row.id);\n          }\n        });\n        function updatePersistentStats(_x7, _x8, _x9, _x0) {\n          return _updatePersistentStats.apply(this, arguments);\n        }\n        return updatePersistentStats;\n      }()\n      /*─────────────────────────────\n        Achievements\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"checkAchievements\",\n      value: (function () {\n        var _checkAchievements = (0, _asyncToGenerator.default)(function* (playerId, gameId) {\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"achievements\").select(\"*\").or(`game_id.eq.${gameId},game_id.is.null`),\n            achievements = _yield$supabase$from$6.data,\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n          var _yield$supabase$from$7 = yield _supabase.supabase.from(\"game_sessions\").select(\"duration_seconds\").eq(\"player_id\", playerId).eq(\"game_id\", gameId),\n            sessions = _yield$supabase$from$7.data,\n            sErr = _yield$supabase$from$7.error;\n          if (sErr) throw sErr;\n          var totalGameTime = (sessions || []).reduce((sum, r) => sum + (Number(r.duration_seconds) || 0), 0);\n          var _yield$supabase$from$8 = yield _supabase.supabase.from(\"player_achievements\").select(\"achievement_id\").eq(\"player_id\", playerId),\n            completed = _yield$supabase$from$8.data,\n            cErr = _yield$supabase$from$8.error;\n          if (cErr) throw cErr;\n          var done = new Set((completed || []).map(a => a.achievement_id));\n          for (var ach of achievements || []) {\n            if (done.has(ach.id)) continue;\n            var progress = 0;\n            if (ach.achievement_type === \"total_playtime\") {\n              var _yield$supabase$from$9 = yield _supabase.supabase.from(\"players\").select(\"total_playtime_seconds\").eq(\"id\", playerId).maybeSingle(),\n                p = _yield$supabase$from$9.data;\n              progress = Number(p?.total_playtime_seconds || 0);\n            } else if (ach.achievement_type === \"game_playtime\") {\n              progress = totalGameTime;\n            }\n            if (progress >= Number(ach.target_value || 0)) {\n              yield _supabase.supabase.from(\"player_achievements\").insert({\n                player_id: playerId,\n                achievement_id: ach.id,\n                progress,\n                is_completed: true,\n                completed_at: new Date().toISOString()\n              });\n              console.log(`🏆 Achievement unlocked: ${ach.name}`);\n            }\n          }\n        });\n        function checkAchievements(_x1, _x10) {\n          return _checkAchievements.apply(this, arguments);\n        }\n        return checkAchievements;\n      }()\n      /*─────────────────────────────\n        Offline buffer\n      ─────────────────────────────*/\n      )\n    }, {\n      key: \"storeFailed\",\n      value: (function () {\n        var _storeFailed = (0, _asyncToGenerator.default)(function* (session) {\n          var failed = yield AsyncStorage.default.getItem(\"failed_sessions\");\n          var list = failed ? JSON.parse(failed) : [];\n          list.push(session);\n          yield AsyncStorage.default.setItem(\"failed_sessions\", JSON.stringify(list));\n        });\n        function storeFailed(_x11) {\n          return _storeFailed.apply(this, arguments);\n        }\n        return storeFailed;\n      }())\n    }, {\n      key: \"retryFailedSessions\",\n      value: function () {\n        var _retryFailedSessions = (0, _asyncToGenerator.default)(function* () {\n          var failed = yield AsyncStorage.default.getItem(\"failed_sessions\");\n          if (!failed) return;\n          var list = JSON.parse(failed);\n          var still = [];\n          for (var s of list) {\n            try {\n              yield this.submitSession(s);\n            } catch {\n              still.push(s);\n            }\n          }\n          yield AsyncStorage.default.setItem(\"failed_sessions\", JSON.stringify(still));\n        });\n        function retryFailedSessions() {\n          return _retryFailedSessions.apply(this, arguments);\n        }\n        return retryFailedSessions;\n      }()\n      /*─────────────────────────────\n        Helpers\n      ─────────────────────────────*/\n    }, {\n      key: \"getCurrentDuration\",\n      value: function getCurrentDuration(gameId) {\n        var s = this.sessions.get(gameId);\n        return s ? Math.floor((Date.now() - s.startTime) / 1000) : 0;\n      }\n    }, {\n      key: \"updateGameData\",\n      value: function updateGameData(gameId, gameData) {\n        var s = this.sessions.get(gameId);\n        if (s && !s.ended) s.gameData = {\n          ...s.gameData,\n          ...(gameData || {})\n        };\n      }\n    }]);\n  }();\n  var _default = new GameTracker();\n});","lineCount":377,"map":[[12,2,313,0,"Object"],[12,8,313,0],[12,9,313,0,"defineProperty"],[12,23,313,0],[12,24,313,0,"exports"],[12,31,313,0],[13,4,313,0,"enumerable"],[13,14,313,0],[14,4,313,0,"get"],[14,7,313,0],[14,18,313,0,"get"],[14,19,313,0],[15,6,313,0],[15,13,313,0,"_default"],[15,21,313,0],[16,4,313,0],[17,2,313,0],[18,2,313,33],[18,6,313,33,"_babelRuntimeHelpersSlicedToArray"],[18,39,313,33],[18,42,313,33,"require"],[18,49,313,33],[18,50,313,33,"_dependencyMap"],[18,64,313,33],[19,2,313,33],[19,6,313,33,"_slicedToArray"],[19,20,313,33],[19,23,313,33,"_interopDefault"],[19,38,313,33],[19,39,313,33,"_babelRuntimeHelpersSlicedToArray"],[19,72,313,33],[20,2,313,33],[20,6,313,33,"_babelRuntimeHelpersAsyncToGenerator"],[20,42,313,33],[20,45,313,33,"require"],[20,52,313,33],[20,53,313,33,"_dependencyMap"],[20,67,313,33],[21,2,313,33],[21,6,313,33,"_asyncToGenerator"],[21,23,313,33],[21,26,313,33,"_interopDefault"],[21,41,313,33],[21,42,313,33,"_babelRuntimeHelpersAsyncToGenerator"],[21,78,313,33],[22,2,313,33],[22,6,313,33,"_babelRuntimeHelpersClassCallCheck"],[22,40,313,33],[22,43,313,33,"require"],[22,50,313,33],[22,51,313,33,"_dependencyMap"],[22,65,313,33],[23,2,313,33],[23,6,313,33,"_classCallCheck"],[23,21,313,33],[23,24,313,33,"_interopDefault"],[23,39,313,33],[23,40,313,33,"_babelRuntimeHelpersClassCallCheck"],[23,74,313,33],[24,2,313,33],[24,6,313,33,"_babelRuntimeHelpersCreateClass"],[24,37,313,33],[24,40,313,33,"require"],[24,47,313,33],[24,48,313,33,"_dependencyMap"],[24,62,313,33],[25,2,313,33],[25,6,313,33,"_createClass"],[25,18,313,33],[25,21,313,33,"_interopDefault"],[25,36,313,33],[25,37,313,33,"_babelRuntimeHelpersCreateClass"],[25,68,313,33],[26,2,8,0],[26,6,8,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,8,0],[26,45,8,0,"require"],[26,52,8,0],[26,53,8,0,"_dependencyMap"],[26,67,8,0],[27,2,8,0],[27,6,8,0,"AsyncStorage"],[27,18,8,0],[27,21,8,0,"_interopDefault"],[27,36,8,0],[27,37,8,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,8,0],[28,2,9,0],[28,6,9,0,"_supabase"],[28,15,9,0],[28,18,9,0,"require"],[28,25,9,0],[28,26,9,0,"_dependencyMap"],[28,40,9,0],[29,2,10,0],[29,6,10,0,"_playtimeTracker"],[29,22,10,0],[29,25,10,0,"require"],[29,32,10,0],[29,33,10,0,"_dependencyMap"],[29,47,10,0],[30,2,10,0],[30,6,10,0,"playtimeTracker"],[30,21,10,0],[30,24,10,0,"_interopDefault"],[30,39,10,0],[30,40,10,0,"_playtimeTracker"],[30,56,10,0],[31,2,1,0],[32,2,2,0],[33,2,3,0],[34,2,4,0],[35,2,5,0],[36,2,6,0],[37,2,6,0],[37,6,12,6,"GameTracker"],[37,17,12,17],[38,4,13,2],[38,13,13,2,"GameTracker"],[38,25,13,2],[38,27,13,16],[39,6,13,16],[39,10,13,16,"_classCallCheck"],[39,25,13,16],[39,26,13,16,"default"],[39,33,13,16],[39,41,13,16,"GameTracker"],[39,52,13,16],[40,6,14,4],[40,10,14,8],[40,11,14,9,"sessions"],[40,19,14,17],[40,22,14,20],[40,26,14,24,"Map"],[40,29,14,27],[40,30,14,28],[40,31,14,29],[40,32,14,30],[40,33,14,31],[41,4,15,2],[43,4,17,2],[44,0,18,0],[45,0,19,0],[46,4,17,2],[46,15,17,2,"_createClass"],[46,27,17,2],[46,28,17,2,"default"],[46,35,17,2],[46,37,17,2,"GameTracker"],[46,48,17,2],[47,6,17,2,"key"],[47,9,17,2],[48,6,17,2,"value"],[48,11,17,2],[49,8,17,2],[49,12,17,2,"_startGame"],[49,22,17,2],[49,29,17,2,"_asyncToGenerator"],[49,46,17,2],[49,47,17,2,"default"],[49,54,17,2],[49,56,20,2],[49,67,20,18,"gameId"],[49,73,20,24],[49,75,20,26,"playerId"],[49,83,20,34],[49,85,20,36],[50,10,21,4],[50,14,21,8],[50,15,21,9,"gameId"],[50,21,21,15],[50,25,21,19],[50,26,21,20,"playerId"],[50,34,21,28],[50,36,21,30],[51,10,23,4,"console"],[51,17,23,11],[51,18,23,12,"log"],[51,21,23,15],[51,22,23,16],[51,52,23,46,"gameId"],[51,58,23,52],[51,73,23,67,"playerId"],[51,81,23,75],[51,83,23,77],[51,84,23,78],[53,10,25,4],[54,10,26,4],[54,19,26,4,"_ref"],[54,23,26,4],[54,27,26,26],[54,31,26,30],[54,32,26,31,"sessions"],[54,40,26,39],[54,42,26,41],[55,12,26,41],[55,16,26,41,"_ref2"],[55,21,26,41],[55,28,26,41,"_slicedToArray"],[55,42,26,41],[55,43,26,41,"default"],[55,50,26,41],[55,52,26,41,"_ref"],[55,56,26,41],[56,12,26,41],[56,16,26,16,"id"],[56,18,26,18],[56,21,26,18,"_ref2"],[56,26,26,18],[57,12,26,18],[57,16,26,20,"s"],[57,17,26,21],[57,20,26,21,"_ref2"],[57,25,26,21],[58,12,27,6],[58,16,27,10],[58,17,27,11,"s"],[58,18,27,12],[58,19,27,13,"ended"],[58,24,27,18],[58,26,27,20],[58,32,27,26],[58,36,27,30],[58,37,27,31,"endGame"],[58,44,27,38],[58,45,27,39,"id"],[58,47,27,41],[58,49,27,43,"s"],[58,50,27,44],[58,51,27,45,"score"],[58,56,27,50],[58,60,27,54],[58,61,27,55],[58,63,27,57,"s"],[58,64,27,58],[58,65,27,59,"gameData"],[58,73,27,67],[58,77,27,71],[58,78,27,72],[58,79,27,73],[58,80,27,74],[59,10,28,4],[61,10,30,4],[62,10,31,4,"playtimeTracker"],[62,25,31,19],[62,26,31,19,"default"],[62,33,31,19],[62,34,31,20,"setPlayerId"],[62,45,31,31],[62,46,31,32,"playerId"],[62,54,31,40],[62,55,31,41],[63,10,33,4],[63,14,33,10,"session"],[63,21,33,17],[63,24,33,20],[64,12,34,6,"gameId"],[64,18,34,12],[65,12,35,6,"playerId"],[65,20,35,14],[66,12,36,6,"startTime"],[66,21,36,15],[66,23,36,17,"Date"],[66,27,36,21],[66,28,36,22,"now"],[66,31,36,25],[66,32,36,26],[66,33,36,27],[67,12,37,6,"endTime"],[67,19,37,13],[67,21,37,15],[67,25,37,19],[68,12,38,6,"duration"],[68,20,38,14],[68,22,38,16],[68,23,38,17],[69,12,39,6,"score"],[69,17,39,11],[69,19,39,13],[69,20,39,14],[70,12,40,6,"gameData"],[70,20,40,14],[70,22,40,16],[70,23,40,17],[70,24,40,18],[71,12,41,6,"ended"],[71,17,41,11],[71,19,41,13],[72,10,42,4],[72,11,42,5],[73,10,44,4],[73,14,44,8],[73,15,44,9,"sessions"],[73,23,44,17],[73,24,44,18,"set"],[73,27,44,21],[73,28,44,22,"gameId"],[73,34,44,28],[73,36,44,30,"session"],[73,43,44,37],[73,44,44,38],[74,10,45,4],[74,16,45,10,"AsyncStorage"],[74,28,45,22],[74,29,45,22,"default"],[74,36,45,22],[74,37,45,23,"setItem"],[74,44,45,30],[74,45,46,6],[74,61,46,22,"gameId"],[74,67,46,28],[74,69,46,30],[74,71,47,6,"JSON"],[74,75,47,10],[74,76,47,11,"stringify"],[74,85,47,20],[74,86,47,21,"session"],[74,93,47,28],[74,94,48,4],[74,95,48,5],[75,8,49,2],[75,9,49,3],[76,8,49,3],[76,17,20,8,"startGame"],[76,26,20,17,"startGame"],[76,27,20,17,"_x"],[76,29,20,17],[76,31,20,17,"_x2"],[76,34,20,17],[77,10,20,17],[77,17,20,17,"_startGame"],[77,27,20,17],[77,28,20,17,"apply"],[77,33,20,17],[77,40,20,17,"arguments"],[77,49,20,17],[78,8,20,17],[79,8,20,17],[79,15,20,8,"startGame"],[79,24,20,17],[80,6,20,17],[81,6,51,2],[82,0,52,0],[83,0,53,0],[84,6,51,2],[85,4,51,2],[86,6,51,2,"key"],[86,9,51,2],[87,6,51,2,"value"],[87,11,51,2],[88,8,51,2],[88,12,51,2,"_endGame"],[88,20,51,2],[88,27,51,2,"_asyncToGenerator"],[88,44,51,2],[88,45,51,2,"default"],[88,52,51,2],[88,54,54,2],[88,65,54,16,"gameId"],[88,71,54,22],[88,73,54,50],[89,10,54,50],[89,14,54,24,"score"],[89,19,54,29],[89,22,54,29,"arguments"],[89,31,54,29],[89,32,54,29,"length"],[89,38,54,29],[89,46,54,29,"arguments"],[89,55,54,29],[89,63,54,29,"undefined"],[89,72,54,29],[89,75,54,29,"arguments"],[89,84,54,29],[89,90,54,32],[89,91,54,33],[90,10,54,33],[90,14,54,35,"gameData"],[90,22,54,43],[90,25,54,43,"arguments"],[90,34,54,43],[90,35,54,43,"length"],[90,41,54,43],[90,49,54,43,"arguments"],[90,58,54,43],[90,66,54,43,"undefined"],[90,75,54,43],[90,78,54,43,"arguments"],[90,87,54,43],[90,93,54,46],[90,94,54,47],[90,95,54,48],[91,10,55,4],[91,14,55,8,"s"],[91,15,55,9],[91,18,55,12],[91,22,55,16],[91,23,55,17,"sessions"],[91,31,55,25],[91,32,55,26,"get"],[91,35,55,29],[91,36,55,30,"gameId"],[91,42,55,36],[91,43,55,37],[92,10,56,4],[92,14,56,8],[92,15,56,9,"s"],[92,16,56,10],[92,18,56,12],[93,12,57,6],[93,16,57,12,"raw"],[93,19,57,15],[93,28,57,24,"AsyncStorage"],[93,40,57,36],[93,41,57,36,"default"],[93,48,57,36],[93,49,57,37,"getItem"],[93,56,57,44],[93,57,57,45],[93,73,57,61,"gameId"],[93,79,57,67],[93,81,57,69],[93,82,57,70],[94,12,58,6],[94,16,58,10,"raw"],[94,19,58,13],[94,21,58,15,"s"],[94,22,58,16],[94,25,58,19,"JSON"],[94,29,58,23],[94,30,58,24,"parse"],[94,35,58,29],[94,36,58,30,"raw"],[94,39,58,33],[94,40,58,34],[95,10,59,4],[96,10,60,4],[96,14,60,8],[96,15,60,9,"s"],[96,16,60,10],[96,20,60,14,"s"],[96,21,60,15],[96,22,60,16,"ended"],[96,27,60,21],[96,29,60,23],[96,36,60,30,"s"],[96,37,60,31],[96,41,60,35],[96,45,60,39],[97,10,62,4,"s"],[97,11,62,5],[97,12,62,6,"endTime"],[97,19,62,13],[97,22,62,16,"Date"],[97,26,62,20],[97,27,62,21,"now"],[97,30,62,24],[97,31,62,25],[97,32,62,26],[98,10,63,4,"s"],[98,11,63,5],[98,12,63,6,"duration"],[98,20,63,14],[98,23,63,17,"Math"],[98,27,63,21],[98,28,63,22,"floor"],[98,33,63,27],[98,34,63,28],[98,35,63,29,"s"],[98,36,63,30],[98,37,63,31,"endTime"],[98,44,63,38],[98,47,63,41,"s"],[98,48,63,42],[98,49,63,43,"startTime"],[98,58,63,52],[98,62,63,56],[98,66,63,60],[98,67,63,61],[99,10,64,4,"s"],[99,11,64,5],[99,12,64,6,"score"],[99,17,64,11],[99,20,64,14,"Number"],[99,26,64,20],[99,27,64,21,"score"],[99,32,64,26],[99,36,64,30],[99,37,64,31],[99,38,64,32],[100,10,65,4,"s"],[100,11,65,5],[100,12,65,6,"gameData"],[100,20,65,14],[100,23,65,17,"gameData"],[100,31,65,25],[100,35,65,29],[100,36,65,30],[100,37,65,31],[101,10,66,4,"s"],[101,11,66,5],[101,12,66,6,"ended"],[101,17,66,11],[101,20,66,14],[101,24,66,18],[102,10,68,4,"console"],[102,17,68,11],[102,18,68,12,"log"],[102,21,68,15],[102,22,68,16],[102,42,68,36,"s"],[102,43,68,37],[102,44,68,38,"duration"],[102,52,68,46],[102,55,68,49],[102,57,68,51,"s"],[102,58,68,52],[102,59,68,53,"gameData"],[102,67,68,61],[102,68,68,62],[103,10,70,4],[103,14,70,8],[104,12,71,6],[104,18,71,12],[104,22,71,16],[104,23,71,17,"submitSession"],[104,36,71,30],[104,37,71,31,"s"],[104,38,71,32],[104,39,71,33],[105,10,72,4],[105,11,72,5],[105,12,72,6],[105,19,72,13,"e"],[105,20,72,14],[105,22,72,16],[106,12,73,6,"console"],[106,19,73,13],[106,20,73,14,"error"],[106,25,73,19],[106,26,73,20],[106,55,73,49],[106,57,73,51,"e"],[106,58,73,52],[106,59,73,53],[107,12,74,6],[107,18,74,12],[107,22,74,16],[107,23,74,17,"storeFailed"],[107,34,74,28],[107,35,74,29,"s"],[107,36,74,30],[107,37,74,31],[108,10,75,4],[108,11,75,5],[108,20,75,14],[109,12,76,6],[109,16,76,10],[109,17,76,11,"sessions"],[109,25,76,19],[109,26,76,20,"delete"],[109,32,76,26],[109,33,76,27,"gameId"],[109,39,76,33],[109,40,76,34],[110,12,77,6],[110,18,77,12,"AsyncStorage"],[110,30,77,24],[110,31,77,24,"default"],[110,38,77,24],[110,39,77,25,"removeItem"],[110,49,77,35],[110,50,77,36],[110,66,77,52,"gameId"],[110,72,77,58],[110,74,77,60],[110,75,77,61],[111,10,78,4],[112,10,79,4],[112,17,79,11,"s"],[112,18,79,12],[113,8,80,2],[113,9,80,3],[114,8,80,3],[114,17,54,8,"endGame"],[114,24,54,15,"endGame"],[114,25,54,15,"_x3"],[114,28,54,15],[115,10,54,15],[115,17,54,15,"_endGame"],[115,25,54,15],[115,26,54,15,"apply"],[115,31,54,15],[115,38,54,15,"arguments"],[115,47,54,15],[116,8,54,15],[117,8,54,15],[117,15,54,8,"endGame"],[117,22,54,15],[118,6,54,15],[119,6,82,2],[120,0,83,0],[121,0,84,0],[122,6,82,2],[123,4,82,2],[124,6,82,2,"key"],[124,9,82,2],[125,6,82,2,"value"],[125,11,82,2],[126,8,82,2],[126,12,82,2,"_submitSession"],[126,26,82,2],[126,33,82,2,"_asyncToGenerator"],[126,50,82,2],[126,51,82,2,"default"],[126,58,82,2],[126,60,85,2],[126,71,85,22,"s"],[126,72,85,23],[126,74,85,25],[127,10,86,4],[127,14,86,12,"playerId"],[127,22,86,20],[127,25,86,69,"s"],[127,26,86,70],[127,27,86,12,"playerId"],[127,35,86,20],[128,12,86,22,"gameId"],[128,18,86,28],[128,21,86,69,"s"],[128,22,86,70],[128,23,86,22,"gameId"],[128,29,86,28],[129,12,86,30,"duration"],[129,20,86,38],[129,23,86,69,"s"],[129,24,86,70],[129,25,86,30,"duration"],[129,33,86,38],[130,12,86,40,"score"],[130,17,86,45],[130,20,86,69,"s"],[130,21,86,70],[130,22,86,40,"score"],[130,27,86,45],[131,12,86,47,"endTime"],[131,19,86,54],[131,22,86,69,"s"],[131,23,86,70],[131,24,86,47,"endTime"],[131,31,86,54],[132,12,86,56,"gameData"],[132,20,86,64],[132,23,86,69,"s"],[132,24,86,70],[132,25,86,56,"gameData"],[132,33,86,64],[134,10,88,4],[135,10,89,4],[135,14,89,4,"_yield$supabase$from$"],[135,35,89,4],[135,44,89,39,"supabase"],[135,53,89,47],[135,54,89,47,"supabase"],[135,62,89,47],[135,63,89,48,"from"],[135,67,89,52],[135,68,89,53],[135,83,89,68],[135,84,89,69],[135,85,89,70,"insert"],[135,91,89,76],[135,92,89,77],[136,14,90,6,"player_id"],[136,23,90,15],[136,25,90,17,"playerId"],[136,33,90,25],[137,14,91,6,"game_id"],[137,21,91,13],[137,23,91,15,"gameId"],[137,29,91,21],[138,14,92,6,"score"],[138,19,92,11],[139,14,93,6,"points_earned"],[139,27,93,19],[139,29,93,21],[139,31,93,23],[140,14,94,6,"duration_seconds"],[140,30,94,22],[140,32,94,24,"duration"],[140,40,94,32],[141,14,95,6,"game_data"],[141,23,95,15],[141,25,95,17],[142,16,95,19,"duration"],[142,24,95,27],[143,16,95,29],[143,19,95,32,"gameData"],[144,14,95,41],[144,15,95,42],[145,14,96,6,"created_at"],[145,24,96,16],[145,26,96,18],[145,30,96,22,"Date"],[145,34,96,26],[145,35,96,27,"endTime"],[145,42,96,34],[145,43,96,35],[145,44,96,36,"toISOString"],[145,55,96,47],[145,56,96,48],[146,12,97,4],[146,13,97,5],[146,14,97,6],[147,12,89,19,"insertErr"],[147,21,89,28],[147,24,89,28,"_yield$supabase$from$"],[147,45,89,28],[147,46,89,12,"error"],[147,51,89,17],[148,10,98,4],[148,14,98,8,"insertErr"],[148,23,98,17],[148,25,98,19],[148,31,98,25,"insertErr"],[148,40,98,34],[150,10,100,4],[151,10,101,4],[151,16,101,10],[151,20,101,14],[151,21,101,15,"addTotalPlaytime"],[151,37,101,31],[151,38,101,32,"playerId"],[151,46,101,40],[151,48,101,42,"duration"],[151,56,101,50],[151,57,101,51],[153,10,103,4],[154,10,104,4,"console"],[154,17,104,11],[154,18,104,12,"log"],[154,21,104,15],[154,22,104,16],[154,54,104,48],[154,56,104,50],[155,12,104,52,"playerId"],[155,20,104,60],[156,12,104,62,"gameId"],[156,18,104,68],[157,12,104,70,"score"],[158,10,104,76],[158,11,104,77],[158,12,104,78],[159,10,105,4],[159,16,105,10],[159,20,105,14],[159,21,105,15,"updatePersistentStats"],[159,42,105,36],[159,43,105,37,"playerId"],[159,51,105,45],[159,53,105,47,"gameId"],[159,59,105,53],[159,61,105,55,"score"],[159,66,105,60],[159,68,105,62,"gameData"],[159,76,105,70],[159,77,105,71],[161,10,107,4],[162,10,108,4],[162,16,108,10],[162,20,108,14],[162,21,108,15,"checkAchievements"],[162,38,108,32],[162,39,108,33,"playerId"],[162,47,108,41],[162,49,108,43,"gameId"],[162,55,108,49],[162,56,108,50],[163,10,110,4,"console"],[163,17,110,11],[163,18,110,12,"log"],[163,21,110,15],[163,22,110,16],[163,61,110,55],[163,62,110,56],[164,8,111,2],[164,9,111,3],[165,8,111,3],[165,17,85,8,"submitSession"],[165,30,85,21,"submitSession"],[165,31,85,21,"_x4"],[165,34,85,21],[166,10,85,21],[166,17,85,21,"_submitSession"],[166,31,85,21],[166,32,85,21,"apply"],[166,37,85,21],[166,44,85,21,"arguments"],[166,53,85,21],[167,8,85,21],[168,8,85,21],[168,15,85,8,"submitSession"],[168,28,85,21],[169,6,85,21],[170,6,113,2],[171,0,114,0],[172,0,115,0],[173,6,113,2],[174,4,113,2],[175,6,113,2,"key"],[175,9,113,2],[176,6,113,2,"value"],[176,11,113,2],[177,8,113,2],[177,12,113,2,"_addTotalPlaytime"],[177,29,113,2],[177,36,113,2,"_asyncToGenerator"],[177,53,113,2],[177,54,113,2,"default"],[177,61,113,2],[177,63,116,2],[177,74,116,25,"playerId"],[177,82,116,33],[177,84,116,35,"seconds"],[177,91,116,42],[177,93,116,44],[178,10,117,4],[178,14,117,4,"_yield$supabase$from$2"],[178,36,117,4],[178,45,117,34,"supabase"],[178,54,117,42],[178,55,117,42,"supabase"],[178,63,117,42],[178,64,118,7,"from"],[178,68,118,11],[178,69,118,12],[178,78,118,21],[178,79,118,22],[178,80,119,7,"select"],[178,86,119,13],[178,87,119,14],[178,111,119,38],[178,112,119,39],[178,113,120,7,"eq"],[178,115,120,9],[178,116,120,10],[178,120,120,14],[178,122,120,16,"playerId"],[178,130,120,24],[178,131,120,25],[178,132,121,7,"maybeSingle"],[178,143,121,18],[178,144,121,19],[178,145,121,20],[179,12,117,12,"data"],[179,16,117,16],[179,19,117,16,"_yield$supabase$from$2"],[179,41,117,16],[179,42,117,12,"data"],[179,46,117,16],[180,12,117,18,"error"],[180,17,117,23],[180,20,117,23,"_yield$supabase$from$2"],[180,42,117,23],[180,43,117,18,"error"],[180,48,117,23],[181,10,122,4],[181,14,122,8,"error"],[181,19,122,13],[181,21,122,15],[181,27,122,21,"error"],[181,32,122,26],[182,10,124,4],[182,14,124,10,"current"],[182,21,124,17],[182,24,124,20,"Number"],[182,30,124,26],[182,31,124,27,"data"],[182,35,124,31],[182,37,124,33,"total_playtime_seconds"],[182,59,124,55],[182,63,124,59],[182,64,124,60],[182,65,124,61],[183,10,125,4],[183,14,125,10,"next"],[183,18,125,14],[183,21,125,17,"current"],[183,28,125,24],[183,31,125,27,"Number"],[183,37,125,33],[183,38,125,34,"seconds"],[183,45,125,41],[183,49,125,45],[183,50,125,46],[183,51,125,47],[184,10,127,4],[184,14,127,4,"_yield$supabase$from$3"],[184,36,127,4],[184,45,127,35,"supabase"],[184,54,127,43],[184,55,127,43,"supabase"],[184,63,127,43],[184,64,128,7,"from"],[184,68,128,11],[184,69,128,12],[184,78,128,21],[184,79,128,22],[184,80,129,7,"update"],[184,86,129,13],[184,87,129,14],[185,14,129,16,"total_playtime_seconds"],[185,36,129,38],[185,38,129,40,"next"],[186,12,129,45],[186,13,129,46],[186,14,129,47],[186,15,130,7,"eq"],[186,17,130,9],[186,18,130,10],[186,22,130,14],[186,24,130,16,"playerId"],[186,32,130,24],[186,33,130,25],[187,12,127,19,"upErr"],[187,17,127,24],[187,20,127,24,"_yield$supabase$from$3"],[187,42,127,24],[187,43,127,12,"error"],[187,48,127,17],[188,10,131,4],[188,14,131,8,"upErr"],[188,19,131,13],[188,21,131,15],[188,27,131,21,"upErr"],[188,32,131,26],[189,8,132,2],[189,9,132,3],[190,8,132,3],[190,17,116,8,"addTotalPlaytime"],[190,33,116,24,"addTotalPlaytime"],[190,34,116,24,"_x5"],[190,37,116,24],[190,39,116,24,"_x6"],[190,42,116,24],[191,10,116,24],[191,17,116,24,"_addTotalPlaytime"],[191,34,116,24],[191,35,116,24,"apply"],[191,40,116,24],[191,47,116,24,"arguments"],[191,56,116,24],[192,8,116,24],[193,8,116,24],[193,15,116,8,"addTotalPlaytime"],[193,31,116,24],[194,6,116,24],[195,6,134,2],[196,0,135,0],[197,0,136,0],[198,6,134,2],[199,4,134,2],[200,6,134,2,"key"],[200,9,134,2],[201,6,134,2,"value"],[201,11,134,2],[202,8,134,2],[202,12,134,2,"_updatePersistentStats"],[202,34,134,2],[202,41,134,2,"_asyncToGenerator"],[202,58,134,2],[202,59,134,2,"default"],[202,66,134,2],[202,68,137,2],[202,79,137,30,"playerId"],[202,87,137,38],[202,89,137,40,"gameId"],[202,95,137,46],[202,97,137,48,"score"],[202,102,137,53],[202,104,137,55,"gameData"],[202,112,137,63],[202,114,137,65],[203,10,138,4],[203,14,138,10,"AI_GAMES_BY_TYPE"],[203,30,138,26],[203,33,138,29],[203,37,138,33,"Set"],[203,40,138,36],[203,41,138,37],[203,42,138,38],[203,49,138,45],[203,51,138,47],[203,62,138,58],[203,64,138,60],[203,80,138,76],[203,82,138,78],[203,91,138,87],[203,92,138,88],[203,93,138,89],[204,10,139,4],[204,14,139,10,"BEST_TIME_GAMES_BY_TYPE"],[204,37,139,33],[204,40,139,36],[204,44,139,40,"Set"],[204,47,139,43],[204,48,139,44],[204,49,139,45],[204,62,139,58],[204,63,139,59],[204,64,139,60],[205,10,141,4],[205,14,141,8,"gameType"],[205,22,141,16],[205,25,141,19],[205,29,141,23],[206,10,142,4],[206,14,142,8,"trackBestTime"],[206,27,142,21],[206,30,142,24],[206,34,142,28],[207,10,143,4],[207,14,143,8],[208,12,144,6],[208,16,144,6,"_yield$supabase$from$4"],[208,38,144,6],[208,47,144,32,"supabase"],[208,56,144,40],[208,57,144,40,"supabase"],[208,65,144,40],[208,66,145,9,"from"],[208,70,145,13],[208,71,145,14],[208,78,145,21],[208,79,145,22],[208,80,146,9,"select"],[208,86,146,15],[208,87,146,16],[208,115,146,44],[208,116,146,45],[208,117,147,9,"eq"],[208,119,147,11],[208,120,147,12],[208,124,147,16],[208,126,147,18,"gameId"],[208,132,147,24],[208,133,147,25],[208,134,148,9,"maybeSingle"],[208,145,148,20],[208,146,148,21],[208,147,148,22],[209,14,144,20,"g"],[209,15,144,21],[209,18,144,21,"_yield$supabase$from$4"],[209,40,144,21],[209,41,144,14,"data"],[209,45,144,18],[210,12,149,6,"gameType"],[210,20,149,14],[210,23,149,17,"g"],[210,24,149,18],[210,26,149,20,"game_type"],[210,35,149,29],[210,39,149,33],[210,43,149,37],[211,12,150,6,"trackBestTime"],[211,25,150,19],[211,28,150,22],[211,35,150,29,"g"],[211,36,150,30],[211,38,150,32,"track_best_time"],[211,53,150,47],[211,58,150,52],[211,67,150,61],[211,70,150,64,"g"],[211,71,150,65],[211,72,150,66,"track_best_time"],[211,87,150,81],[211,90,150,84],[211,94,150,88],[212,10,151,4],[212,11,151,5],[212,12,151,6],[212,18,151,12],[213,12,152,6],[214,10,152,6],[215,10,155,4],[215,14,155,10,"isAIGame"],[215,22,155,18],[215,25,155,21,"gameType"],[215,33,155,29],[215,36,155,32,"AI_GAMES_BY_TYPE"],[215,52,155,48],[215,53,155,49,"has"],[215,56,155,52],[215,57,155,53,"gameType"],[215,65,155,61],[215,66,155,62],[215,69,155,65],[215,74,155,70],[216,10,156,4],[216,14,156,10,"shouldTrackBestTime"],[216,33,156,29],[216,36,157,6,"trackBestTime"],[216,49,157,19],[216,54,157,24],[216,58,157,28],[216,61,157,31,"trackBestTime"],[216,74,157,44],[216,77,158,7,"gameType"],[216,85,158,15],[216,88,158,18,"BEST_TIME_GAMES_BY_TYPE"],[216,111,158,41],[216,112,158,42,"has"],[216,115,158,45],[216,116,158,46,"gameType"],[216,124,158,54],[216,125,158,55],[216,128,158,58],[216,133,158,64],[217,10,160,4],[217,14,160,4,"_yield$supabase$from$5"],[217,36,160,4],[217,45,160,47,"supabase"],[217,54,160,55],[217,55,160,55,"supabase"],[217,63,160,55],[217,64,161,7,"from"],[217,68,161,11],[217,69,161,12],[217,88,161,31],[217,89,161,32],[217,90,162,7,"select"],[217,96,162,13],[217,97,162,14],[217,137,162,54],[217,138,162,55],[217,139,163,7,"eq"],[217,141,163,9],[217,142,163,10],[217,153,163,21],[217,155,163,23,"playerId"],[217,163,163,31],[217,164,163,32],[217,165,164,7,"eq"],[217,167,164,9],[217,168,164,10],[217,177,164,19],[217,179,164,21,"gameId"],[217,185,164,27],[217,186,164,28],[217,187,165,7,"maybeSingle"],[217,198,165,18],[217,199,165,19],[217,200,165,20],[218,12,160,18,"row"],[218,15,160,21],[218,18,160,21,"_yield$supabase$from$5"],[218,40,160,21],[218,41,160,12,"data"],[218,45,160,16],[219,12,160,30,"selErr"],[219,18,160,36],[219,21,160,36,"_yield$supabase$from$5"],[219,43,160,36],[219,44,160,23,"error"],[219,49,160,28],[220,10,166,4],[220,14,166,8,"selErr"],[220,20,166,14],[220,22,166,16],[220,28,166,22,"selErr"],[220,34,166,28],[221,10,168,4],[221,14,168,8,"isAIGame"],[221,22,168,16],[221,24,168,18],[222,12,169,6],[222,16,169,12,"winInc"],[222,22,169,18],[222,25,169,21,"gameData"],[222,33,169,29],[222,35,169,31,"winner"],[222,41,169,37],[222,46,169,42],[222,54,169,50],[222,57,169,53],[222,58,169,54],[222,61,169,57],[222,62,169,58],[223,12,170,6],[223,16,170,10],[223,17,170,11,"row"],[223,20,170,14],[223,22,170,16],[224,14,171,8],[224,20,171,14,"supabase"],[224,29,171,22],[224,30,171,22,"supabase"],[224,38,171,22],[224,39,171,23,"from"],[224,43,171,27],[224,44,171,28],[224,63,171,47],[224,64,171,48],[224,65,171,49,"insert"],[224,71,171,55],[224,72,171,56],[225,16,172,10,"player_id"],[225,25,172,19],[225,27,172,21,"playerId"],[225,35,172,29],[226,16,173,10,"game_id"],[226,23,173,17],[226,25,173,19,"gameId"],[226,31,173,25],[227,16,174,10,"high_score"],[227,26,174,20],[227,28,174,22,"winInc"],[227,34,174,28],[228,16,175,10,"total_plays"],[228,27,175,21],[228,29,175,23],[229,14,176,8],[229,15,176,9],[229,16,176,10],[230,12,177,6],[230,13,177,7],[230,19,177,13],[231,14,178,8],[231,20,178,14,"supabase"],[231,29,178,22],[231,30,178,22,"supabase"],[231,38,178,22],[231,39,179,11,"from"],[231,43,179,15],[231,44,179,16],[231,63,179,35],[231,64,179,36],[231,65,180,11,"update"],[231,71,180,17],[231,72,180,18],[232,16,181,12,"high_score"],[232,26,181,22],[232,28,181,25,"Number"],[232,34,181,31],[232,35,181,32,"row"],[232,38,181,35],[232,39,181,36,"high_score"],[232,49,181,46],[232,53,181,50],[232,54,181,51],[232,55,181,52],[232,58,181,55,"winInc"],[232,64,181,62],[233,16,182,12,"total_plays"],[233,27,182,23],[233,29,182,26,"Number"],[233,35,182,32],[233,36,182,33,"row"],[233,39,182,36],[233,40,182,37,"total_plays"],[233,51,182,48],[233,55,182,52],[233,56,182,53],[233,57,182,54],[233,60,182,57],[234,14,183,10],[234,15,183,11],[234,16,183,12],[234,17,184,11,"eq"],[234,19,184,13],[234,20,184,14],[234,24,184,18],[234,26,184,20,"row"],[234,29,184,23],[234,30,184,24,"id"],[234,32,184,26],[234,33,184,27],[235,12,185,6],[236,12,186,6],[237,10,187,4],[238,10,189,4],[238,14,189,10,"newHigh"],[238,21,189,17],[238,24,189,20,"Math"],[238,28,189,24],[238,29,189,25,"max"],[238,32,189,28],[238,33,189,29,"Number"],[238,39,189,35],[238,40,189,36,"row"],[238,43,189,39],[238,45,189,41,"high_score"],[238,55,189,51],[238,59,189,55],[238,60,189,56],[238,61,189,57],[238,63,189,59,"Number"],[238,69,189,65],[238,70,189,66,"score"],[238,75,189,71],[238,79,189,75],[238,80,189,76],[238,81,189,77],[238,82,189,78],[239,10,190,4],[239,14,190,10,"durationSec"],[239,25,190,21],[239,28,190,24,"Number"],[239,34,190,30],[239,35,190,31,"gameData"],[239,43,190,39],[239,45,190,41,"duration"],[239,53,190,49],[239,57,190,53],[239,58,190,54],[239,59,190,55],[239,63,190,59],[239,67,190,63],[240,10,192,4],[240,14,192,8],[240,15,192,9,"row"],[240,18,192,12],[240,20,192,14],[241,12,193,6],[241,18,193,12,"supabase"],[241,27,193,20],[241,28,193,20,"supabase"],[241,36,193,20],[241,37,193,21,"from"],[241,41,193,25],[241,42,193,26],[241,61,193,45],[241,62,193,46],[241,63,193,47,"insert"],[241,69,193,53],[241,70,193,54],[242,14,194,8,"player_id"],[242,23,194,17],[242,25,194,19,"playerId"],[242,33,194,27],[243,14,195,8,"game_id"],[243,21,195,15],[243,23,195,17,"gameId"],[243,29,195,23],[244,14,196,8,"high_score"],[244,24,196,18],[244,26,196,20,"Number"],[244,32,196,26],[244,33,196,27,"score"],[244,38,196,32],[244,42,196,36],[244,43,196,37],[244,44,196,38],[245,14,197,8,"total_plays"],[245,25,197,19],[245,27,197,21],[245,28,197,22],[246,14,198,8],[246,18,198,12,"shouldTrackBestTime"],[246,37,198,31],[246,41,198,35,"durationSec"],[246,52,198,46],[246,56,198,50],[246,60,198,54],[246,63,198,57],[247,16,198,59,"best_time"],[247,25,198,68],[247,27,198,70,"durationSec"],[248,14,198,82],[248,15,198,83],[248,18,198,86],[248,19,198,87],[248,20,198,88],[249,12,199,6],[249,13,199,7],[249,14,199,8],[250,10,200,4],[250,11,200,5],[250,17,200,11],[251,12,201,6],[251,16,201,12,"next"],[251,20,201,16],[251,23,201,19],[252,14,202,8,"high_score"],[252,24,202,18],[252,26,202,20,"newHigh"],[252,33,202,27],[253,14,203,8,"total_plays"],[253,25,203,19],[253,27,203,22,"Number"],[253,33,203,28],[253,34,203,29,"row"],[253,37,203,32],[253,38,203,33,"total_plays"],[253,49,203,44],[253,53,203,48],[253,54,203,49],[253,55,203,50],[253,58,203,53],[254,12,204,6],[254,13,204,7],[255,12,205,6],[255,16,205,10,"shouldTrackBestTime"],[255,35,205,29],[255,39,205,33,"durationSec"],[255,50,205,44],[255,54,205,48],[255,58,205,52],[255,60,205,54],[256,14,206,8],[256,18,206,14,"currentBest"],[256,29,206,25],[256,32,206,28,"row"],[256,35,206,31],[256,36,206,32,"best_time"],[256,45,206,41],[256,49,206,45],[256,53,206,49],[256,56,206,52],[256,60,206,56],[256,63,206,59,"Number"],[256,69,206,65],[256,70,206,66,"row"],[256,73,206,69],[256,74,206,70,"best_time"],[256,83,206,79],[256,84,206,80],[257,14,207,8,"next"],[257,18,207,12],[257,19,207,13,"best_time"],[257,28,207,22],[257,31,208,10,"currentBest"],[257,42,208,21],[257,46,208,25],[257,50,208,29],[257,54,208,33,"currentBest"],[257,65,208,44],[257,70,208,49],[257,71,208,50],[257,74,209,14,"durationSec"],[257,85,209,25],[257,88,210,14,"Math"],[257,92,210,18],[257,93,210,19,"min"],[257,96,210,22],[257,97,210,23,"currentBest"],[257,108,210,34],[257,110,210,36,"durationSec"],[257,121,210,47],[257,122,210,48],[258,12,211,6],[259,12,212,6],[259,18,212,12,"supabase"],[259,27,212,20],[259,28,212,20,"supabase"],[259,36,212,20],[259,37,212,21,"from"],[259,41,212,25],[259,42,212,26],[259,61,212,45],[259,62,212,46],[259,63,212,47,"update"],[259,69,212,53],[259,70,212,54,"next"],[259,74,212,58],[259,75,212,59],[259,76,212,60,"eq"],[259,78,212,62],[259,79,212,63],[259,83,212,67],[259,85,212,69,"row"],[259,88,212,72],[259,89,212,73,"id"],[259,91,212,75],[259,92,212,76],[260,10,213,4],[261,8,214,2],[261,9,214,3],[262,8,214,3],[262,17,137,8,"updatePersistentStats"],[262,38,137,29,"updatePersistentStats"],[262,39,137,29,"_x7"],[262,42,137,29],[262,44,137,29,"_x8"],[262,47,137,29],[262,49,137,29,"_x9"],[262,52,137,29],[262,54,137,29,"_x0"],[262,57,137,29],[263,10,137,29],[263,17,137,29,"_updatePersistentStats"],[263,39,137,29],[263,40,137,29,"apply"],[263,45,137,29],[263,52,137,29,"arguments"],[263,61,137,29],[264,8,137,29],[265,8,137,29],[265,15,137,8,"updatePersistentStats"],[265,36,137,29],[266,6,137,29],[267,6,216,2],[268,0,217,0],[269,0,218,0],[270,6,216,2],[271,4,216,2],[272,6,216,2,"key"],[272,9,216,2],[273,6,216,2,"value"],[273,11,216,2],[274,8,216,2],[274,12,216,2,"_checkAchievements"],[274,30,216,2],[274,37,216,2,"_asyncToGenerator"],[274,54,216,2],[274,55,216,2,"default"],[274,62,216,2],[274,64,219,2],[274,75,219,26,"playerId"],[274,83,219,34],[274,85,219,36,"gameId"],[274,91,219,42],[274,93,219,44],[275,10,220,4],[275,14,220,4,"_yield$supabase$from$6"],[275,36,220,4],[275,45,220,48,"supabase"],[275,54,220,56],[275,55,220,56,"supabase"],[275,63,220,56],[275,64,221,7,"from"],[275,68,221,11],[275,69,221,12],[275,83,221,26],[275,84,221,27],[275,85,222,7,"select"],[275,91,222,13],[275,92,222,14],[275,95,222,17],[275,96,222,18],[275,97,223,7,"or"],[275,99,223,9],[275,100,223,10],[275,114,223,24,"gameId"],[275,120,223,30],[275,138,223,48],[275,139,223,49],[276,12,220,18,"achievements"],[276,24,220,30],[276,27,220,30,"_yield$supabase$from$6"],[276,49,220,30],[276,50,220,12,"data"],[276,54,220,16],[277,12,220,32,"error"],[277,17,220,37],[277,20,220,37,"_yield$supabase$from$6"],[277,42,220,37],[277,43,220,32,"error"],[277,48,220,37],[278,10,224,4],[278,14,224,8,"error"],[278,19,224,13],[278,21,224,15],[278,27,224,21,"error"],[278,32,224,26],[279,10,226,4],[279,14,226,4,"_yield$supabase$from$7"],[279,36,226,4],[279,45,226,50,"supabase"],[279,54,226,58],[279,55,226,58,"supabase"],[279,63,226,58],[279,64,227,7,"from"],[279,68,227,11],[279,69,227,12],[279,84,227,27],[279,85,227,28],[279,86,228,7,"select"],[279,92,228,13],[279,93,228,14],[279,111,228,32],[279,112,228,33],[279,113,229,7,"eq"],[279,115,229,9],[279,116,229,10],[279,127,229,21],[279,129,229,23,"playerId"],[279,137,229,31],[279,138,229,32],[279,139,230,7,"eq"],[279,141,230,9],[279,142,230,10],[279,151,230,19],[279,153,230,21,"gameId"],[279,159,230,27],[279,160,230,28],[280,12,226,18,"sessions"],[280,20,226,26],[280,23,226,26,"_yield$supabase$from$7"],[280,45,226,26],[280,46,226,12,"data"],[280,50,226,16],[281,12,226,35,"sErr"],[281,16,226,39],[281,19,226,39,"_yield$supabase$from$7"],[281,41,226,39],[281,42,226,28,"error"],[281,47,226,33],[282,10,231,4],[282,14,231,8,"sErr"],[282,18,231,12],[282,20,231,14],[282,26,231,20,"sErr"],[282,30,231,24],[283,10,233,4],[283,14,233,10,"totalGameTime"],[283,27,233,23],[283,30,233,26],[283,31,233,27,"sessions"],[283,39,233,35],[283,43,233,39],[283,45,233,41],[283,47,233,43,"reduce"],[283,53,233,49],[283,54,234,6],[283,55,234,7,"sum"],[283,58,234,10],[283,60,234,12,"r"],[283,61,234,13],[283,66,234,18,"sum"],[283,69,234,21],[283,73,234,25,"Number"],[283,79,234,31],[283,80,234,32,"r"],[283,81,234,33],[283,82,234,34,"duration_seconds"],[283,98,234,50],[283,99,234,51],[283,103,234,55],[283,104,234,56],[283,105,234,57],[283,107,235,6],[283,108,236,4],[283,109,236,5],[284,10,238,4],[284,14,238,4,"_yield$supabase$from$8"],[284,36,238,4],[284,45,238,51,"supabase"],[284,54,238,59],[284,55,238,59,"supabase"],[284,63,238,59],[284,64,239,7,"from"],[284,68,239,11],[284,69,239,12],[284,90,239,33],[284,91,239,34],[284,92,240,7,"select"],[284,98,240,13],[284,99,240,14],[284,115,240,30],[284,116,240,31],[284,117,241,7,"eq"],[284,119,241,9],[284,120,241,10],[284,131,241,21],[284,133,241,23,"playerId"],[284,141,241,31],[284,142,241,32],[285,12,238,18,"completed"],[285,21,238,27],[285,24,238,27,"_yield$supabase$from$8"],[285,46,238,27],[285,47,238,12,"data"],[285,51,238,16],[286,12,238,36,"cErr"],[286,16,238,40],[286,19,238,40,"_yield$supabase$from$8"],[286,41,238,40],[286,42,238,29,"error"],[286,47,238,34],[287,10,242,4],[287,14,242,8,"cErr"],[287,18,242,12],[287,20,242,14],[287,26,242,20,"cErr"],[287,30,242,24],[288,10,244,4],[288,14,244,10,"done"],[288,18,244,14],[288,21,244,17],[288,25,244,21,"Set"],[288,28,244,24],[288,29,244,25],[288,30,244,26,"completed"],[288,39,244,35],[288,43,244,39],[288,45,244,41],[288,47,244,43,"map"],[288,50,244,46],[288,51,244,48,"a"],[288,52,244,49],[288,56,244,54,"a"],[288,57,244,55],[288,58,244,56,"achievement_id"],[288,72,244,70],[288,73,244,71],[288,74,244,72],[289,10,246,4],[289,15,246,9],[289,19,246,15,"ach"],[289,22,246,18],[289,26,246,22,"achievements"],[289,38,246,34],[289,42,246,38],[289,44,246,40],[289,46,246,42],[290,12,247,6],[290,16,247,10,"done"],[290,20,247,14],[290,21,247,15,"has"],[290,24,247,18],[290,25,247,19,"ach"],[290,28,247,22],[290,29,247,23,"id"],[290,31,247,25],[290,32,247,26],[290,34,247,28],[291,12,249,6],[291,16,249,10,"progress"],[291,24,249,18],[291,27,249,21],[291,28,249,22],[292,12,250,6],[292,16,250,10,"ach"],[292,19,250,13],[292,20,250,14,"achievement_type"],[292,36,250,30],[292,41,250,35],[292,57,250,51],[292,59,250,53],[293,14,251,8],[293,18,251,8,"_yield$supabase$from$9"],[293,40,251,8],[293,49,251,34,"supabase"],[293,58,251,42],[293,59,251,42,"supabase"],[293,67,251,42],[293,68,252,11,"from"],[293,72,252,15],[293,73,252,16],[293,82,252,25],[293,83,252,26],[293,84,253,11,"select"],[293,90,253,17],[293,91,253,18],[293,115,253,42],[293,116,253,43],[293,117,254,11,"eq"],[293,119,254,13],[293,120,254,14],[293,124,254,18],[293,126,254,20,"playerId"],[293,134,254,28],[293,135,254,29],[293,136,255,11,"maybeSingle"],[293,147,255,22],[293,148,255,23],[293,149,255,24],[294,16,251,22,"p"],[294,17,251,23],[294,20,251,23,"_yield$supabase$from$9"],[294,42,251,23],[294,43,251,16,"data"],[294,47,251,20],[295,14,256,8,"progress"],[295,22,256,16],[295,25,256,19,"Number"],[295,31,256,25],[295,32,256,26,"p"],[295,33,256,27],[295,35,256,29,"total_playtime_seconds"],[295,57,256,51],[295,61,256,55],[295,62,256,56],[295,63,256,57],[296,12,257,6],[296,13,257,7],[296,19,257,13],[296,23,257,17,"ach"],[296,26,257,20],[296,27,257,21,"achievement_type"],[296,43,257,37],[296,48,257,42],[296,63,257,57],[296,65,257,59],[297,14,258,8,"progress"],[297,22,258,16],[297,25,258,19,"totalGameTime"],[297,38,258,32],[298,12,259,6],[299,12,261,6],[299,16,261,10,"progress"],[299,24,261,18],[299,28,261,22,"Number"],[299,34,261,28],[299,35,261,29,"ach"],[299,38,261,32],[299,39,261,33,"target_value"],[299,51,261,45],[299,55,261,49],[299,56,261,50],[299,57,261,51],[299,59,261,53],[300,14,262,8],[300,20,262,14,"supabase"],[300,29,262,22],[300,30,262,22,"supabase"],[300,38,262,22],[300,39,262,23,"from"],[300,43,262,27],[300,44,262,28],[300,65,262,49],[300,66,262,50],[300,67,262,51,"insert"],[300,73,262,57],[300,74,262,58],[301,16,263,10,"player_id"],[301,25,263,19],[301,27,263,21,"playerId"],[301,35,263,29],[302,16,264,10,"achievement_id"],[302,30,264,24],[302,32,264,26,"ach"],[302,35,264,29],[302,36,264,30,"id"],[302,38,264,32],[303,16,265,10,"progress"],[303,24,265,18],[304,16,266,10,"is_completed"],[304,28,266,22],[304,30,266,24],[304,34,266,28],[305,16,267,10,"completed_at"],[305,28,267,22],[305,30,267,24],[305,34,267,28,"Date"],[305,38,267,32],[305,39,267,33],[305,40,267,34],[305,41,267,35,"toISOString"],[305,52,267,46],[305,53,267,47],[306,14,268,8],[306,15,268,9],[306,16,268,10],[307,14,269,8,"console"],[307,21,269,15],[307,22,269,16,"log"],[307,25,269,19],[307,26,269,20],[307,54,269,48,"ach"],[307,57,269,51],[307,58,269,52,"name"],[307,62,269,56],[307,64,269,58],[307,65,269,59],[308,12,270,6],[309,10,271,4],[310,8,272,2],[310,9,272,3],[311,8,272,3],[311,17,219,8,"checkAchievements"],[311,34,219,25,"checkAchievements"],[311,35,219,25,"_x1"],[311,38,219,25],[311,40,219,25,"_x10"],[311,44,219,25],[312,10,219,25],[312,17,219,25,"_checkAchievements"],[312,35,219,25],[312,36,219,25,"apply"],[312,41,219,25],[312,48,219,25,"arguments"],[312,57,219,25],[313,8,219,25],[314,8,219,25],[314,15,219,8,"checkAchievements"],[314,32,219,25],[315,6,219,25],[316,6,274,2],[317,0,275,0],[318,0,276,0],[319,6,274,2],[320,4,274,2],[321,6,274,2,"key"],[321,9,274,2],[322,6,274,2,"value"],[322,11,274,2],[323,8,274,2],[323,12,274,2,"_storeFailed"],[323,24,274,2],[323,31,274,2,"_asyncToGenerator"],[323,48,274,2],[323,49,274,2,"default"],[323,56,274,2],[323,58,277,2],[323,69,277,20,"session"],[323,76,277,27],[323,78,277,29],[324,10,278,4],[324,14,278,10,"failed"],[324,20,278,16],[324,29,278,25,"AsyncStorage"],[324,41,278,37],[324,42,278,37,"default"],[324,49,278,37],[324,50,278,38,"getItem"],[324,57,278,45],[324,58,278,46],[324,75,278,63],[324,76,278,64],[325,10,279,4],[325,14,279,10,"list"],[325,18,279,14],[325,21,279,17,"failed"],[325,27,279,23],[325,30,279,26,"JSON"],[325,34,279,30],[325,35,279,31,"parse"],[325,40,279,36],[325,41,279,37,"failed"],[325,47,279,43],[325,48,279,44],[325,51,279,47],[325,53,279,49],[326,10,280,4,"list"],[326,14,280,8],[326,15,280,9,"push"],[326,19,280,13],[326,20,280,14,"session"],[326,27,280,21],[326,28,280,22],[327,10,281,4],[327,16,281,10,"AsyncStorage"],[327,28,281,22],[327,29,281,22,"default"],[327,36,281,22],[327,37,281,23,"setItem"],[327,44,281,30],[327,45,281,31],[327,62,281,48],[327,64,281,50,"JSON"],[327,68,281,54],[327,69,281,55,"stringify"],[327,78,281,64],[327,79,281,65,"list"],[327,83,281,69],[327,84,281,70],[327,85,281,71],[328,8,282,2],[328,9,282,3],[329,8,282,3],[329,17,277,8,"storeFailed"],[329,28,277,19,"storeFailed"],[329,29,277,19,"_x11"],[329,33,277,19],[330,10,277,19],[330,17,277,19,"_storeFailed"],[330,29,277,19],[330,30,277,19,"apply"],[330,35,277,19],[330,42,277,19,"arguments"],[330,51,277,19],[331,8,277,19],[332,8,277,19],[332,15,277,8,"storeFailed"],[332,26,277,19],[333,6,277,19],[334,4,277,19],[335,6,277,19,"key"],[335,9,277,19],[336,6,277,19,"value"],[336,11,277,19],[337,8,277,19],[337,12,277,19,"_retryFailedSessions"],[337,32,277,19],[337,39,277,19,"_asyncToGenerator"],[337,56,277,19],[337,57,277,19,"default"],[337,64,277,19],[337,66,284,2],[337,79,284,30],[338,10,285,4],[338,14,285,10,"failed"],[338,20,285,16],[338,29,285,25,"AsyncStorage"],[338,41,285,37],[338,42,285,37,"default"],[338,49,285,37],[338,50,285,38,"getItem"],[338,57,285,45],[338,58,285,46],[338,75,285,63],[338,76,285,64],[339,10,286,4],[339,14,286,8],[339,15,286,9,"failed"],[339,21,286,15],[339,23,286,17],[340,10,287,4],[340,14,287,10,"list"],[340,18,287,14],[340,21,287,17,"JSON"],[340,25,287,21],[340,26,287,22,"parse"],[340,31,287,27],[340,32,287,28,"failed"],[340,38,287,34],[340,39,287,35],[341,10,288,4],[341,14,288,10,"still"],[341,19,288,15],[341,22,288,18],[341,24,288,20],[342,10,289,4],[342,15,289,9],[342,19,289,15,"s"],[342,20,289,16],[342,24,289,20,"list"],[342,28,289,24],[342,30,289,26],[343,12,290,6],[343,16,290,10],[344,14,291,8],[344,20,291,14],[344,24,291,18],[344,25,291,19,"submitSession"],[344,38,291,32],[344,39,291,33,"s"],[344,40,291,34],[344,41,291,35],[345,12,292,6],[345,13,292,7],[345,14,292,8],[345,20,292,14],[346,14,293,8,"still"],[346,19,293,13],[346,20,293,14,"push"],[346,24,293,18],[346,25,293,19,"s"],[346,26,293,20],[346,27,293,21],[347,12,294,6],[348,10,295,4],[349,10,296,4],[349,16,296,10,"AsyncStorage"],[349,28,296,22],[349,29,296,22,"default"],[349,36,296,22],[349,37,296,23,"setItem"],[349,44,296,30],[349,45,296,31],[349,62,296,48],[349,64,296,50,"JSON"],[349,68,296,54],[349,69,296,55,"stringify"],[349,78,296,64],[349,79,296,65,"still"],[349,84,296,70],[349,85,296,71],[349,86,296,72],[350,8,297,2],[350,9,297,3],[351,8,297,3],[351,17,284,8,"retryFailedSessions"],[351,36,284,27,"retryFailedSessions"],[351,37,284,27],[352,10,284,27],[352,17,284,27,"_retryFailedSessions"],[352,37,284,27],[352,38,284,27,"apply"],[352,43,284,27],[352,50,284,27,"arguments"],[352,59,284,27],[353,8,284,27],[354,8,284,27],[354,15,284,8,"retryFailedSessions"],[354,34,284,27],[355,6,284,27],[356,6,299,2],[357,0,300,0],[358,0,301,0],[359,4,299,2],[360,6,299,2,"key"],[360,9,299,2],[361,6,299,2,"value"],[361,11,299,2],[361,13,302,2],[361,22,302,2,"getCurrentDuration"],[361,40,302,20,"getCurrentDuration"],[361,41,302,21,"gameId"],[361,47,302,27],[361,49,302,29],[362,8,303,4],[362,12,303,10,"s"],[362,13,303,11],[362,16,303,14],[362,20,303,18],[362,21,303,19,"sessions"],[362,29,303,27],[362,30,303,28,"get"],[362,33,303,31],[362,34,303,32,"gameId"],[362,40,303,38],[362,41,303,39],[363,8,304,4],[363,15,304,11,"s"],[363,16,304,12],[363,19,304,15,"Math"],[363,23,304,19],[363,24,304,20,"floor"],[363,29,304,25],[363,30,304,26],[363,31,304,27,"Date"],[363,35,304,31],[363,36,304,32,"now"],[363,39,304,35],[363,40,304,36],[363,41,304,37],[363,44,304,40,"s"],[363,45,304,41],[363,46,304,42,"startTime"],[363,55,304,51],[363,59,304,55],[363,63,304,59],[363,64,304,60],[363,67,304,63],[363,68,304,64],[364,6,305,2],[365,4,305,3],[366,6,305,3,"key"],[366,9,305,3],[367,6,305,3,"value"],[367,11,305,3],[367,13,307,2],[367,22,307,2,"updateGameData"],[367,36,307,16,"updateGameData"],[367,37,307,17,"gameId"],[367,43,307,23],[367,45,307,25,"gameData"],[367,53,307,33],[367,55,307,35],[368,8,308,4],[368,12,308,10,"s"],[368,13,308,11],[368,16,308,14],[368,20,308,18],[368,21,308,19,"sessions"],[368,29,308,27],[368,30,308,28,"get"],[368,33,308,31],[368,34,308,32,"gameId"],[368,40,308,38],[368,41,308,39],[369,8,309,4],[369,12,309,8,"s"],[369,13,309,9],[369,17,309,13],[369,18,309,14,"s"],[369,19,309,15],[369,20,309,16,"ended"],[369,25,309,21],[369,27,309,23,"s"],[369,28,309,24],[369,29,309,25,"gameData"],[369,37,309,33],[369,40,309,36],[370,10,309,38],[370,13,309,41,"s"],[370,14,309,42],[370,15,309,43,"gameData"],[370,23,309,51],[371,10,309,53],[371,14,309,57,"gameData"],[371,22,309,65],[371,26,309,69],[371,27,309,70],[371,28,309,71],[372,8,309,73],[372,9,309,74],[373,6,310,2],[374,4,310,3],[375,2,310,3],[376,2,313,0],[376,6,313,0,"_default"],[376,14,313,0],[376,17,313,15],[376,21,313,19,"GameTracker"],[376,32,313,30],[376,33,313,31],[376,34,313,32],[377,0,313,33],[377,3]],"functionMap":{"names":["<global>","GameTracker","GameTracker#constructor","GameTracker#startGame","GameTracker#endGame","GameTracker#submitSession","GameTracker#addTotalPlaytime","GameTracker#updatePersistentStats","GameTracker#checkAchievements","reduce$argument_0","map$argument_0","GameTracker#storeFailed","GameTracker#retryFailedSessions","GameTracker#getCurrentDuration","GameTracker#updateGameData"],"mappings":"AAA;ACW;ECC;GDE;EEK;GF6B;EGK;GH0B;EIK;GJ0B;EKK;GLgB;EMK;GN6E;EOK;MCe,mDD;+CEU,uBF;GP4B;EUK;GVK;EWE;GXa;EYK;GZG;EaE;GbG;CDC"},"hasCjsExports":false},"type":"js/module"}]}