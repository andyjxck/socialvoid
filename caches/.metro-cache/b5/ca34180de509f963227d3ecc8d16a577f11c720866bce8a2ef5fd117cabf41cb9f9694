{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":37,"index":82}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"expo-haptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":83},"end":{"line":3,"column":40,"index":123}}],"key":"XxdHVlyuI491+26LeQ/AtfIvhac=","exportNames":["*"],"imports":1}},{"name":"../utils/solitaire/logic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":124},"end":{"line":4,"column":53,"index":177}}],"key":"1l07PsIaNEAm7MH/WizqPYE687o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useSolitaireGame\", {\n    enumerable: true,\n    get: function () {\n      return useSolitaireGame;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _expoHaptics = require(_dependencyMap[4], \"expo-haptics\");\n  var Haptics = _interopNamespace(_expoHaptics);\n  var _utilsSolitaireLogic = require(_dependencyMap[5], \"../utils/solitaire/logic\");\n  /**\n   * Minimal “playable start” check helpers\n   */\n  var localCanMoveTo = (card, target, targetType) => {\n    if (targetType === \"foundation\") {\n      if (target.length === 0) return card.numValue === 1;\n      var top = target[target.length - 1];\n      return card.suit === top.suit && card.numValue === top.numValue + 1;\n    }\n    if (targetType === \"tableau\") {\n      if (target.length === 0) return card.numValue === 13;\n      var _top = target[target.length - 1];\n      return card.color !== _top.color && card.numValue === _top.numValue - 1;\n    }\n    return false;\n  };\n  var localGetMovableCards = (column, cardIndex) => {\n    var cards = [];\n    for (var i = cardIndex; i < column.length; i++) {\n      if (!column[i].faceUp) break;\n      if (cards.length > 0) {\n        var prev = cards[cards.length - 1];\n        if (column[i].color === prev.color || column[i].numValue !== prev.numValue - 1) break;\n      }\n      cards.push(column[i]);\n    }\n    return cards;\n  };\n  var hasAnyMoves = game => {\n    // waste -> foundation/tableau\n    if (game.waste.length > 0) {\n      var topWaste = game.waste[game.waste.length - 1];\n      for (var i = 0; i < game.foundations.length; i++) {\n        if (localCanMoveTo(topWaste, game.foundations[i], \"foundation\")) return true;\n      }\n      for (var _i = 0; _i < game.tableau.length; _i++) {\n        if (localCanMoveTo(topWaste, game.tableau[_i], \"tableau\")) return true;\n      }\n    }\n    // tableau top -> foundation\n    for (var col = 0; col < game.tableau.length; col++) {\n      var column = game.tableau[col];\n      if (column.length === 0) continue;\n      var topCard = column[column.length - 1];\n      if (topCard.faceUp) {\n        for (var _i2 = 0; _i2 < game.foundations.length; _i2++) {\n          if (localCanMoveTo(topCard, game.foundations[_i2], \"foundation\")) return true;\n        }\n      }\n    }\n    // tableau stacks -> tableau targets\n    for (var s = 0; s < game.tableau.length; s++) {\n      var sourceCol = game.tableau[s];\n      for (var start = 0; start < sourceCol.length; start++) {\n        if (!sourceCol[start].faceUp) continue;\n        var movable = localGetMovableCards(sourceCol, start);\n        if (!movable.length) continue;\n        var lead = movable[0];\n        for (var t = 0; t < game.tableau.length; t++) {\n          if (t === s) continue;\n          if (localCanMoveTo(lead, game.tableau[t], \"tableau\")) return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Re-deal up to 10x until the initial layout has at least one legal move.\n   */\n  var generatePlayableGame = () => {\n    for (var attempts = 0; attempts < 10; attempts++) {\n      var g = (0, _utilsSolitaireLogic.setupGame)();\n      if (hasAnyMoves(g)) return g;\n    }\n    return (0, _utilsSolitaireLogic.setupGame)();\n  };\n  var useSolitaireGame = () => {\n    _s();\n    // stockCycles = \"number of waste->stock recycles since last PROGRESS\"\n    var _useState = (0, _react.useState)(generatePlayableGame()),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      game = _useState2[0],\n      setGame = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      gameHistory = _useState4[0],\n      setGameHistory = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      stockCycles = _useState6[0],\n      setStockCycles = _useState6[1];\n    var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      isAutoCompleting = _useState8[0],\n      setIsAutoCompleting = _useState8[1];\n    var resetCycleOnProgress = () => setStockCycles(0);\n\n    // Save game state for undo functionality\n    var saveGameState = currentGame => {\n      setGameHistory(prev => [...prev.slice(-19), {\n        ...currentGame,\n        foundations: currentGame.foundations.map(f => [...f]),\n        tableau: currentGame.tableau.map(t => [...t]),\n        stock: [...currentGame.stock],\n        waste: [...currentGame.waste],\n        selected: null\n      }]);\n    };\n\n    // ✅ Change you asked for: ONLY allow auto-complete when waste pile is empty\n    var canAutoComplete = gameState => {\n      // All tableau cards must be face-up\n      for (var column of gameState.tableau) {\n        for (var card of column) {\n          if (!card.faceUp) return false;\n        }\n      }\n      // Waste must be empty\n      if (gameState.waste.length > 0) return false;\n      // Not already won\n      if (gameState.foundations.every(f => f.length === 13)) return false;\n      return true;\n    };\n    var canMoveTo = (card, target, targetType) => {\n      if (targetType === \"foundation\") {\n        if (target.length === 0) return card.numValue === 1; // Ace\n        var top = target[target.length - 1];\n        return card.suit === top.suit && card.numValue === top.numValue + 1;\n      }\n      if (targetType === \"tableau\") {\n        if (target.length === 0) return card.numValue === 13; // King\n        var _top2 = target[target.length - 1];\n        return card.color !== _top2.color && card.numValue === _top2.numValue - 1;\n      }\n      return false;\n    };\n    var getMovableCards = (column, cardIndex) => {\n      var cards = [];\n      for (var i = cardIndex; i < column.length; i++) {\n        if (!column[i].faceUp) break;\n        if (cards.length > 0) {\n          var prev = cards[cards.length - 1];\n          if (column[i].color === prev.color || column[i].numValue !== prev.numValue - 1) {\n            break;\n          }\n        }\n        cards.push(column[i]);\n      }\n      return cards;\n    };\n    var autoCompleteGame = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator.default)(function* (gameState) {\n        if (isAutoCompleting) return;\n        setIsAutoCompleting(true);\n        var currentGame = {\n          ...gameState\n        };\n        var movesMade = true;\n        while (movesMade && !currentGame.foundations.every(f => f.length === 13)) {\n          movesMade = false;\n\n          // Waste -> Foundation\n          if (currentGame.waste.length > 0) {\n            var topWaste = currentGame.waste[currentGame.waste.length - 1];\n            for (var i = 0; i < currentGame.foundations.length; i++) {\n              if (canMoveTo(topWaste, currentGame.foundations[i], \"foundation\")) {\n                currentGame.foundations[i] = [...currentGame.foundations[i], topWaste];\n                currentGame.waste = currentGame.waste.slice(0, -1);\n                currentGame.score += 10;\n                currentGame.moves++;\n                movesMade = true;\n                resetCycleOnProgress();\n                break;\n              }\n            }\n          }\n\n          // Tableau top -> Foundation\n          if (!movesMade) {\n            for (var colIndex = 0; colIndex < currentGame.tableau.length; colIndex++) {\n              var column = currentGame.tableau[colIndex];\n              if (column.length > 0) {\n                var topCard = column[column.length - 1];\n                for (var _i3 = 0; _i3 < currentGame.foundations.length; _i3++) {\n                  if (canMoveTo(topCard, currentGame.foundations[_i3], \"foundation\")) {\n                    currentGame.foundations[_i3] = [...currentGame.foundations[_i3], topCard];\n                    currentGame.tableau[colIndex] = column.slice(0, -1);\n                    currentGame.score += 10;\n                    currentGame.moves++;\n                    movesMade = true;\n                    resetCycleOnProgress();\n                    break;\n                  }\n                }\n                if (movesMade) break;\n              }\n            }\n          }\n          if (movesMade) {\n            setGame({\n              ...currentGame\n            });\n            yield new Promise(resolve => setTimeout(resolve, 300));\n          }\n        }\n        setIsAutoCompleting(false);\n      });\n      return function autoCompleteGame(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Win/Lose + Auto-complete prompt logic\n    (0, _react.useEffect)(() => {\n      // Win\n      if (game.foundations.every(f => f.length === 13)) {\n        _reactNative.Alert.alert(\"🎉 You Won!\", `Congratulations! Score: ${game.score}`);\n        return;\n      }\n\n      // LOSS: strictly after 5 recycles with NO progress in between.\n      if (stockCycles >= 5) {\n        _reactNative.Alert.alert(\"😔 Game Over\", \"You've recycled the stock 5 times without making progress.\", [{\n          text: \"New Game\",\n          onPress: () => resetGame()\n        }]);\n        return;\n      }\n\n      // Auto-complete available (only if waste is empty per your request)\n      if (canAutoComplete(game) && !isAutoCompleting) {\n        _reactNative.Alert.alert(\"🎉 Auto-Complete Available!\", \"All tableau cards are face up and the waste pile is empty. Auto-complete the game?\", [{\n          text: \"Continue Playing\",\n          style: \"cancel\"\n        }, {\n          text: \"Auto-Complete\",\n          onPress: () => autoCompleteGame(game)\n        }]);\n      }\n    }, [game.foundations, stockCycles, game.stock.length, game.waste.length, isAutoCompleting]);\n\n    // Undo last move\n    var undoLastMove = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* () {\n        if (gameHistory.length === 0) {\n          yield Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n          return;\n        }\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n        var previousState = gameHistory[gameHistory.length - 1];\n        setGame(previousState);\n        setGameHistory(prev => prev.slice(0, -1));\n        // We don't touch stockCycles on undo.\n      });\n      return function undoLastMove() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Try auto-placing a card into a foundation\n    var tryAutoPlaceInSafeZone = /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (card, source, cardIndex) {\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n        var _loop = function* (i) {\n            var foundation = game.foundations[i];\n            if (canMoveTo(card, foundation, \"foundation\")) {\n              setGame(prevGame => {\n                saveGameState(prevGame);\n                var newGame = {\n                  ...prevGame\n                };\n\n                // Add to foundation\n                var newFoundations = [...newGame.foundations];\n                newFoundations[i] = [...foundation, card];\n                newGame.foundations = newFoundations;\n\n                // Remove from source\n                if (source.type === \"tableau\") {\n                  var sourceIndex = newGame.tableau.indexOf(source.column);\n                  var newSourceColumn = [...source.column];\n                  newSourceColumn.splice(cardIndex, 1);\n                  newGame.tableau[sourceIndex] = newSourceColumn;\n\n                  // Flip top if needed (progress)\n                  var topCard = newSourceColumn[newSourceColumn.length - 1];\n                  if (topCard && !topCard.faceUp) {\n                    topCard.faceUp = true;\n                    newGame.score += 5;\n                  }\n                } else if (source.type === \"waste\") {\n                  newGame.waste = [...newGame.waste];\n                  newGame.waste.pop();\n                }\n                newGame.score += 10;\n                newGame.moves++;\n                newGame.selected = null;\n                resetCycleOnProgress(); // PROGRESS!\n                Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n                return newGame;\n              });\n              return {\n                v: true\n              };\n            }\n          },\n          _ret;\n        for (var i = 0; i < game.foundations.length; i++) {\n          _ret = yield* _loop(i);\n          if (_ret) return _ret.v;\n        }\n        Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n        return false;\n      });\n      return function tryAutoPlaceInSafeZone(_x2, _x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var handleCardPress = /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (card, source, cardIndex) {\n        if (isAutoCompleting) return;\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n        if (!game.selected) {\n          if (!card.faceUp) return;\n          var cards = [card];\n          if (source.type === \"tableau\") {\n            cards = getMovableCards(source.column, cardIndex);\n          }\n          setGame({\n            ...game,\n            selected: {\n              cards,\n              source,\n              cardIndex\n            }\n          });\n          return;\n        }\n\n        // Try to move selected cards to this location\n        setGame(prevGame => {\n          var newGame = {\n            ...prevGame\n          };\n          var _newGame$selected = newGame.selected,\n            selectedCards = _newGame$selected.cards,\n            selectedSource = _newGame$selected.source;\n          var canMove = false;\n          if (source.type === \"foundation\") {\n            if (selectedCards.length === 1 && canMoveTo(selectedCards[0], source.column, \"foundation\")) {\n              saveGameState(prevGame);\n              var newFoundations = [...newGame.foundations];\n              var foundationIndex = newGame.foundations.indexOf(source.column);\n              newFoundations[foundationIndex] = [...source.column, selectedCards[0]];\n              newGame.foundations = newFoundations;\n              canMove = true;\n              newGame.score += 10;\n            }\n          } else if (source.type === \"tableau\") {\n            if (canMoveTo(selectedCards[0], source.column, \"tableau\")) {\n              saveGameState(prevGame);\n              var newTableau = [...newGame.tableau];\n              var tableauIndex = newGame.tableau.indexOf(source.column);\n              newTableau[tableauIndex] = [...source.column, ...selectedCards];\n              newGame.tableau = newTableau;\n              canMove = true;\n              newGame.score += 5;\n            }\n          }\n          if (canMove) {\n            if (selectedSource.type === \"tableau\") {\n              var sourceIndex = newGame.tableau.indexOf(selectedSource.column);\n              var newSourceColumn = [...selectedSource.column];\n              newSourceColumn.splice(-selectedCards.length);\n              newGame.tableau[sourceIndex] = newSourceColumn;\n              var topCard = newSourceColumn[newSourceColumn.length - 1];\n              if (topCard && !topCard.faceUp) {\n                topCard.faceUp = true;\n                newGame.score += 5;\n              }\n            } else if (selectedSource.type === \"waste\") {\n              newGame.waste = [...newGame.waste];\n              newGame.waste.pop();\n            }\n            newGame.moves++;\n            resetCycleOnProgress(); // PROGRESS!\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n          } else {\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n          }\n          newGame.selected = null;\n          return newGame;\n        });\n      });\n      return function handleCardPress(_x5, _x6, _x7) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var handleEmptySpacePress = /*#__PURE__*/function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* (target, targetType) {\n        if (!game.selected || isAutoCompleting) return;\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n        setGame(prevGame => {\n          var newGame = {\n            ...prevGame\n          };\n          var _newGame$selected2 = newGame.selected,\n            selectedCards = _newGame$selected2.cards,\n            selectedSource = _newGame$selected2.source;\n          var canMove = false;\n          if (targetType === \"foundation\" && selectedCards.length === 1) {\n            if (canMoveTo(selectedCards[0], target, \"foundation\")) {\n              saveGameState(prevGame);\n              var newFoundations = [...newGame.foundations];\n              var foundationIndex = newGame.foundations.indexOf(target);\n              newFoundations[foundationIndex] = [...target, selectedCards[0]];\n              newGame.foundations = newFoundations;\n              canMove = true;\n              newGame.score += 10;\n            }\n          } else if (targetType === \"tableau\") {\n            if (canMoveTo(selectedCards[0], target, \"tableau\")) {\n              saveGameState(prevGame);\n              var newTableau = [...newGame.tableau];\n              var tableauIndex = newGame.tableau.indexOf(target);\n              newTableau[tableauIndex] = [...target, ...selectedCards];\n              newGame.tableau = newTableau;\n              canMove = true;\n              newGame.score += 5;\n            }\n          }\n          if (canMove) {\n            if (selectedSource.type === \"tableau\") {\n              var sourceIndex = newGame.tableau.indexOf(selectedSource.column);\n              var newSourceColumn = [...selectedSource.column];\n              newSourceColumn.splice(-selectedCards.length);\n              newGame.tableau[sourceIndex] = newSourceColumn;\n              var topCard = newSourceColumn[newSourceColumn.length - 1];\n              if (topCard && !topCard.faceUp) {\n                topCard.faceUp = true;\n                newGame.score += 5;\n              }\n            } else if (selectedSource.type === \"waste\") {\n              newGame.waste = [...newGame.waste];\n              newGame.waste.pop();\n            }\n            newGame.moves++;\n            resetCycleOnProgress(); // PROGRESS!\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n          } else {\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n          }\n          newGame.selected = null;\n          return newGame;\n        });\n      });\n      return function handleEmptySpacePress(_x8, _x9) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var handleStockPress = /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* () {\n        if (isAutoCompleting) return;\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n        setGame(prevGame => {\n          var newGame = {\n            ...prevGame,\n            stock: [...prevGame.stock],\n            waste: [...prevGame.waste],\n            selected: null\n          };\n          if (newGame.stock.length > 0) {\n            // Draw up to 3 cards to waste (drawing is not \"progress\" yet)\n            saveGameState(prevGame);\n            var cardsToDraw = Math.min(3, newGame.stock.length);\n            for (var i = 0; i < cardsToDraw; i++) {\n              var drawnCard = {\n                ...newGame.stock.pop()\n              };\n              drawnCard.faceUp = true;\n              newGame.waste.push(drawnCard);\n            }\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n          } else if (newGame.waste.length > 0) {\n            // Recycle waste -> stock (this increments the \"since progress\" counter)\n            saveGameState(prevGame);\n            newGame.stock = newGame.waste.map(card => ({\n              ...card,\n              faceUp: false\n            })).reverse();\n            newGame.waste = [];\n            newGame.score = Math.max(0, newGame.score - 10);\n            setStockCycles(prev => prev + 1);\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Warning);\n          }\n          return newGame;\n        });\n      });\n      return function handleStockPress() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    var resetGame = /*#__PURE__*/function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* () {\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);\n        setGame(generatePlayableGame());\n        setGameHistory([]);\n        setStockCycles(0);\n        setIsAutoCompleting(false);\n      });\n      return function resetGame() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    var isSelected = card => {\n      return game.selected?.cards.some(c => c.id === card.id) || false;\n    };\n    return {\n      game,\n      resetGame,\n      undoLastMove,\n      canUndo: gameHistory.length > 0,\n      stockCycles,\n      // recycles since last progress\n      isAutoCompleting,\n      handleCardPress,\n      handleEmptySpacePress,\n      handleStockPress,\n      isSelected,\n      tryAutoPlaceInSafeZone\n    };\n  };\n  _s(useSolitaireGame, \"5QP3hdImwYf22dzNbe5K/16hlvE=\");\n});","lineCount":577,"map":[[28,2,92,0,"Object"],[28,8,92,0],[28,9,92,0,"defineProperty"],[28,23,92,0],[28,24,92,0,"exports"],[28,31,92,0],[29,4,92,0,"enumerable"],[29,14,92,0],[30,4,92,0,"get"],[30,7,92,0],[30,18,92,0,"get"],[30,19,92,0],[31,6,92,0],[31,13,92,0,"useSolitaireGame"],[31,29,92,0],[32,4,92,0],[33,2,92,0],[34,2,536,2],[34,6,536,2,"_babelRuntimeHelpersAsyncToGenerator"],[34,42,536,2],[34,45,536,2,"require"],[34,52,536,2],[34,53,536,2,"_dependencyMap"],[34,67,536,2],[35,2,536,2],[35,6,536,2,"_asyncToGenerator"],[35,23,536,2],[35,26,536,2,"_interopDefault"],[35,41,536,2],[35,42,536,2,"_babelRuntimeHelpersAsyncToGenerator"],[35,78,536,2],[36,2,536,2],[36,6,536,2,"_babelRuntimeHelpersSlicedToArray"],[36,39,536,2],[36,42,536,2,"require"],[36,49,536,2],[36,50,536,2,"_dependencyMap"],[36,64,536,2],[37,2,536,2],[37,6,536,2,"_slicedToArray"],[37,20,536,2],[37,23,536,2,"_interopDefault"],[37,38,536,2],[37,39,536,2,"_babelRuntimeHelpersSlicedToArray"],[37,72,536,2],[38,2,1,0],[38,6,1,0,"_react"],[38,12,1,0],[38,15,1,0,"require"],[38,22,1,0],[38,23,1,0,"_dependencyMap"],[38,37,1,0],[39,2,2,0],[39,6,2,0,"_reactNative"],[39,18,2,0],[39,21,2,0,"require"],[39,28,2,0],[39,29,2,0,"_dependencyMap"],[39,43,2,0],[40,2,3,0],[40,6,3,0,"_expoHaptics"],[40,18,3,0],[40,21,3,0,"require"],[40,28,3,0],[40,29,3,0,"_dependencyMap"],[40,43,3,0],[41,2,3,0],[41,6,3,0,"Haptics"],[41,13,3,0],[41,16,3,0,"_interopNamespace"],[41,33,3,0],[41,34,3,0,"_expoHaptics"],[41,46,3,0],[42,2,4,0],[42,6,4,0,"_utilsSolitaireLogic"],[42,26,4,0],[42,29,4,0,"require"],[42,36,4,0],[42,37,4,0,"_dependencyMap"],[42,51,4,0],[43,2,6,0],[44,0,7,0],[45,0,8,0],[46,2,9,0],[46,6,9,6,"localCanMoveTo"],[46,20,9,20],[46,23,9,23,"localCanMoveTo"],[46,24,9,24,"card"],[46,28,9,28],[46,30,9,30,"target"],[46,36,9,36],[46,38,9,38,"targetType"],[46,48,9,48],[46,53,9,53],[47,4,10,2],[47,8,10,6,"targetType"],[47,18,10,16],[47,23,10,21],[47,35,10,33],[47,37,10,35],[48,6,11,4],[48,10,11,8,"target"],[48,16,11,14],[48,17,11,15,"length"],[48,23,11,21],[48,28,11,26],[48,29,11,27],[48,31,11,29],[48,38,11,36,"card"],[48,42,11,40],[48,43,11,41,"numValue"],[48,51,11,49],[48,56,11,54],[48,57,11,55],[49,6,12,4],[49,10,12,10,"top"],[49,13,12,13],[49,16,12,16,"target"],[49,22,12,22],[49,23,12,23,"target"],[49,29,12,29],[49,30,12,30,"length"],[49,36,12,36],[49,39,12,39],[49,40,12,40],[49,41,12,41],[50,6,13,4],[50,13,13,11,"card"],[50,17,13,15],[50,18,13,16,"suit"],[50,22,13,20],[50,27,13,25,"top"],[50,30,13,28],[50,31,13,29,"suit"],[50,35,13,33],[50,39,13,37,"card"],[50,43,13,41],[50,44,13,42,"numValue"],[50,52,13,50],[50,57,13,55,"top"],[50,60,13,58],[50,61,13,59,"numValue"],[50,69,13,67],[50,72,13,70],[50,73,13,71],[51,4,14,2],[52,4,15,2],[52,8,15,6,"targetType"],[52,18,15,16],[52,23,15,21],[52,32,15,30],[52,34,15,32],[53,6,16,4],[53,10,16,8,"target"],[53,16,16,14],[53,17,16,15,"length"],[53,23,16,21],[53,28,16,26],[53,29,16,27],[53,31,16,29],[53,38,16,36,"card"],[53,42,16,40],[53,43,16,41,"numValue"],[53,51,16,49],[53,56,16,54],[53,58,16,56],[54,6,17,4],[54,10,17,10,"top"],[54,14,17,13],[54,17,17,16,"target"],[54,23,17,22],[54,24,17,23,"target"],[54,30,17,29],[54,31,17,30,"length"],[54,37,17,36],[54,40,17,39],[54,41,17,40],[54,42,17,41],[55,6,18,4],[55,13,18,11,"card"],[55,17,18,15],[55,18,18,16,"color"],[55,23,18,21],[55,28,18,26,"top"],[55,32,18,29],[55,33,18,30,"color"],[55,38,18,35],[55,42,18,39,"card"],[55,46,18,43],[55,47,18,44,"numValue"],[55,55,18,52],[55,60,18,57,"top"],[55,64,18,60],[55,65,18,61,"numValue"],[55,73,18,69],[55,76,18,72],[55,77,18,73],[56,4,19,2],[57,4,20,2],[57,11,20,9],[57,16,20,14],[58,2,21,0],[58,3,21,1],[59,2,23,0],[59,6,23,6,"localGetMovableCards"],[59,26,23,26],[59,29,23,29,"localGetMovableCards"],[59,30,23,30,"column"],[59,36,23,36],[59,38,23,38,"cardIndex"],[59,47,23,47],[59,52,23,52],[60,4,24,2],[60,8,24,8,"cards"],[60,13,24,13],[60,16,24,16],[60,18,24,18],[61,4,25,2],[61,9,25,7],[61,13,25,11,"i"],[61,14,25,12],[61,17,25,15,"cardIndex"],[61,26,25,24],[61,28,25,26,"i"],[61,29,25,27],[61,32,25,30,"column"],[61,38,25,36],[61,39,25,37,"length"],[61,45,25,43],[61,47,25,45,"i"],[61,48,25,46],[61,50,25,48],[61,52,25,50],[62,6,26,4],[62,10,26,8],[62,11,26,9,"column"],[62,17,26,15],[62,18,26,16,"i"],[62,19,26,17],[62,20,26,18],[62,21,26,19,"faceUp"],[62,27,26,25],[62,29,26,27],[63,6,27,4],[63,10,27,8,"cards"],[63,15,27,13],[63,16,27,14,"length"],[63,22,27,20],[63,25,27,23],[63,26,27,24],[63,28,27,26],[64,8,28,6],[64,12,28,12,"prev"],[64,16,28,16],[64,19,28,19,"cards"],[64,24,28,24],[64,25,28,25,"cards"],[64,30,28,30],[64,31,28,31,"length"],[64,37,28,37],[64,40,28,40],[64,41,28,41],[64,42,28,42],[65,8,29,6],[65,12,30,8,"column"],[65,18,30,14],[65,19,30,15,"i"],[65,20,30,16],[65,21,30,17],[65,22,30,18,"color"],[65,27,30,23],[65,32,30,28,"prev"],[65,36,30,32],[65,37,30,33,"color"],[65,42,30,38],[65,46,31,8,"column"],[65,52,31,14],[65,53,31,15,"i"],[65,54,31,16],[65,55,31,17],[65,56,31,18,"numValue"],[65,64,31,26],[65,69,31,31,"prev"],[65,73,31,35],[65,74,31,36,"numValue"],[65,82,31,44],[65,85,31,47],[65,86,31,48],[65,88,33,8],[66,6,34,4],[67,6,35,4,"cards"],[67,11,35,9],[67,12,35,10,"push"],[67,16,35,14],[67,17,35,15,"column"],[67,23,35,21],[67,24,35,22,"i"],[67,25,35,23],[67,26,35,24],[67,27,35,25],[68,4,36,2],[69,4,37,2],[69,11,37,9,"cards"],[69,16,37,14],[70,2,38,0],[70,3,38,1],[71,2,40,0],[71,6,40,6,"hasAnyMoves"],[71,17,40,17],[71,20,40,21,"game"],[71,24,40,25],[71,28,40,30],[72,4,41,2],[73,4,42,2],[73,8,42,6,"game"],[73,12,42,10],[73,13,42,11,"waste"],[73,18,42,16],[73,19,42,17,"length"],[73,25,42,23],[73,28,42,26],[73,29,42,27],[73,31,42,29],[74,6,43,4],[74,10,43,10,"topWaste"],[74,18,43,18],[74,21,43,21,"game"],[74,25,43,25],[74,26,43,26,"waste"],[74,31,43,31],[74,32,43,32,"game"],[74,36,43,36],[74,37,43,37,"waste"],[74,42,43,42],[74,43,43,43,"length"],[74,49,43,49],[74,52,43,52],[74,53,43,53],[74,54,43,54],[75,6,44,4],[75,11,44,9],[75,15,44,13,"i"],[75,16,44,14],[75,19,44,17],[75,20,44,18],[75,22,44,20,"i"],[75,23,44,21],[75,26,44,24,"game"],[75,30,44,28],[75,31,44,29,"foundations"],[75,42,44,40],[75,43,44,41,"length"],[75,49,44,47],[75,51,44,49,"i"],[75,52,44,50],[75,54,44,52],[75,56,44,54],[76,8,45,6],[76,12,45,10,"localCanMoveTo"],[76,26,45,24],[76,27,45,25,"topWaste"],[76,35,45,33],[76,37,45,35,"game"],[76,41,45,39],[76,42,45,40,"foundations"],[76,53,45,51],[76,54,45,52,"i"],[76,55,45,53],[76,56,45,54],[76,58,45,56],[76,70,45,68],[76,71,45,69],[76,73,46,8],[76,80,46,15],[76,84,46,19],[77,6,47,4],[78,6,48,4],[78,11,48,9],[78,15,48,13,"i"],[78,17,48,14],[78,20,48,17],[78,21,48,18],[78,23,48,20,"i"],[78,25,48,21],[78,28,48,24,"game"],[78,32,48,28],[78,33,48,29,"tableau"],[78,40,48,36],[78,41,48,37,"length"],[78,47,48,43],[78,49,48,45,"i"],[78,51,48,46],[78,53,48,48],[78,55,48,50],[79,8,49,6],[79,12,49,10,"localCanMoveTo"],[79,26,49,24],[79,27,49,25,"topWaste"],[79,35,49,33],[79,37,49,35,"game"],[79,41,49,39],[79,42,49,40,"tableau"],[79,49,49,47],[79,50,49,48,"i"],[79,52,49,49],[79,53,49,50],[79,55,49,52],[79,64,49,61],[79,65,49,62],[79,67,49,64],[79,74,49,71],[79,78,49,75],[80,6,50,4],[81,4,51,2],[82,4,52,2],[83,4,53,2],[83,9,53,7],[83,13,53,11,"col"],[83,16,53,14],[83,19,53,17],[83,20,53,18],[83,22,53,20,"col"],[83,25,53,23],[83,28,53,26,"game"],[83,32,53,30],[83,33,53,31,"tableau"],[83,40,53,38],[83,41,53,39,"length"],[83,47,53,45],[83,49,53,47,"col"],[83,52,53,50],[83,54,53,52],[83,56,53,54],[84,6,54,4],[84,10,54,10,"column"],[84,16,54,16],[84,19,54,19,"game"],[84,23,54,23],[84,24,54,24,"tableau"],[84,31,54,31],[84,32,54,32,"col"],[84,35,54,35],[84,36,54,36],[85,6,55,4],[85,10,55,8,"column"],[85,16,55,14],[85,17,55,15,"length"],[85,23,55,21],[85,28,55,26],[85,29,55,27],[85,31,55,29],[86,6,56,4],[86,10,56,10,"topCard"],[86,17,56,17],[86,20,56,20,"column"],[86,26,56,26],[86,27,56,27,"column"],[86,33,56,33],[86,34,56,34,"length"],[86,40,56,40],[86,43,56,43],[86,44,56,44],[86,45,56,45],[87,6,57,4],[87,10,57,8,"topCard"],[87,17,57,15],[87,18,57,16,"faceUp"],[87,24,57,22],[87,26,57,24],[88,8,58,6],[88,13,58,11],[88,17,58,15,"i"],[88,20,58,16],[88,23,58,19],[88,24,58,20],[88,26,58,22,"i"],[88,29,58,23],[88,32,58,26,"game"],[88,36,58,30],[88,37,58,31,"foundations"],[88,48,58,42],[88,49,58,43,"length"],[88,55,58,49],[88,57,58,51,"i"],[88,60,58,52],[88,62,58,54],[88,64,58,56],[89,10,59,8],[89,14,59,12,"localCanMoveTo"],[89,28,59,26],[89,29,59,27,"topCard"],[89,36,59,34],[89,38,59,36,"game"],[89,42,59,40],[89,43,59,41,"foundations"],[89,54,59,52],[89,55,59,53,"i"],[89,58,59,54],[89,59,59,55],[89,61,59,57],[89,73,59,69],[89,74,59,70],[89,76,60,10],[89,83,60,17],[89,87,60,21],[90,8,61,6],[91,6,62,4],[92,4,63,2],[93,4,64,2],[94,4,65,2],[94,9,65,7],[94,13,65,11,"s"],[94,14,65,12],[94,17,65,15],[94,18,65,16],[94,20,65,18,"s"],[94,21,65,19],[94,24,65,22,"game"],[94,28,65,26],[94,29,65,27,"tableau"],[94,36,65,34],[94,37,65,35,"length"],[94,43,65,41],[94,45,65,43,"s"],[94,46,65,44],[94,48,65,46],[94,50,65,48],[95,6,66,4],[95,10,66,10,"sourceCol"],[95,19,66,19],[95,22,66,22,"game"],[95,26,66,26],[95,27,66,27,"tableau"],[95,34,66,34],[95,35,66,35,"s"],[95,36,66,36],[95,37,66,37],[96,6,67,4],[96,11,67,9],[96,15,67,13,"start"],[96,20,67,18],[96,23,67,21],[96,24,67,22],[96,26,67,24,"start"],[96,31,67,29],[96,34,67,32,"sourceCol"],[96,43,67,41],[96,44,67,42,"length"],[96,50,67,48],[96,52,67,50,"start"],[96,57,67,55],[96,59,67,57],[96,61,67,59],[97,8,68,6],[97,12,68,10],[97,13,68,11,"sourceCol"],[97,22,68,20],[97,23,68,21,"start"],[97,28,68,26],[97,29,68,27],[97,30,68,28,"faceUp"],[97,36,68,34],[97,38,68,36],[98,8,69,6],[98,12,69,12,"movable"],[98,19,69,19],[98,22,69,22,"localGetMovableCards"],[98,42,69,42],[98,43,69,43,"sourceCol"],[98,52,69,52],[98,54,69,54,"start"],[98,59,69,59],[98,60,69,60],[99,8,70,6],[99,12,70,10],[99,13,70,11,"movable"],[99,20,70,18],[99,21,70,19,"length"],[99,27,70,25],[99,29,70,27],[100,8,71,6],[100,12,71,12,"lead"],[100,16,71,16],[100,19,71,19,"movable"],[100,26,71,26],[100,27,71,27],[100,28,71,28],[100,29,71,29],[101,8,72,6],[101,13,72,11],[101,17,72,15,"t"],[101,18,72,16],[101,21,72,19],[101,22,72,20],[101,24,72,22,"t"],[101,25,72,23],[101,28,72,26,"game"],[101,32,72,30],[101,33,72,31,"tableau"],[101,40,72,38],[101,41,72,39,"length"],[101,47,72,45],[101,49,72,47,"t"],[101,50,72,48],[101,52,72,50],[101,54,72,52],[102,10,73,8],[102,14,73,12,"t"],[102,15,73,13],[102,20,73,18,"s"],[102,21,73,19],[102,23,73,21],[103,10,74,8],[103,14,74,12,"localCanMoveTo"],[103,28,74,26],[103,29,74,27,"lead"],[103,33,74,31],[103,35,74,33,"game"],[103,39,74,37],[103,40,74,38,"tableau"],[103,47,74,45],[103,48,74,46,"t"],[103,49,74,47],[103,50,74,48],[103,52,74,50],[103,61,74,59],[103,62,74,60],[103,64,74,62],[103,71,74,69],[103,75,74,73],[104,8,75,6],[105,6,76,4],[106,4,77,2],[107,4,78,2],[107,11,78,9],[107,16,78,14],[108,2,79,0],[108,3,79,1],[110,2,81,0],[111,0,82,0],[112,0,83,0],[113,2,84,0],[113,6,84,6,"generatePlayableGame"],[113,26,84,26],[113,29,84,29,"generatePlayableGame"],[113,30,84,29],[113,35,84,35],[114,4,85,2],[114,9,85,7],[114,13,85,11,"attempts"],[114,21,85,19],[114,24,85,22],[114,25,85,23],[114,27,85,25,"attempts"],[114,35,85,33],[114,38,85,36],[114,40,85,38],[114,42,85,40,"attempts"],[114,50,85,48],[114,52,85,50],[114,54,85,52],[115,6,86,4],[115,10,86,10,"g"],[115,11,86,11],[115,14,86,14],[115,18,86,14,"setupGame"],[115,38,86,23],[115,39,86,23,"setupGame"],[115,48,86,23],[115,50,86,24],[115,51,86,25],[116,6,87,4],[116,10,87,8,"hasAnyMoves"],[116,21,87,19],[116,22,87,20,"g"],[116,23,87,21],[116,24,87,22],[116,26,87,24],[116,33,87,31,"g"],[116,34,87,32],[117,4,88,2],[118,4,89,2],[118,11,89,9],[118,15,89,9,"setupGame"],[118,35,89,18],[118,36,89,18,"setupGame"],[118,45,89,18],[118,47,89,19],[118,48,89,20],[119,2,90,0],[119,3,90,1],[120,2,92,7],[120,6,92,13,"useSolitaireGame"],[120,22,92,29],[120,25,92,32,"useSolitaireGame"],[120,26,92,32],[120,31,92,38],[121,4,92,38,"_s"],[121,6,92,38],[122,4,93,2],[123,4,94,2],[123,8,94,2,"_useState"],[123,17,94,2],[123,20,94,26],[123,24,94,26,"useState"],[123,30,94,34],[123,31,94,34,"useState"],[123,39,94,34],[123,41,94,35,"generatePlayableGame"],[123,61,94,55],[123,62,94,56],[123,63,94,57],[123,64,94,58],[124,6,94,58,"_useState2"],[124,16,94,58],[124,23,94,58,"_slicedToArray"],[124,37,94,58],[124,38,94,58,"default"],[124,45,94,58],[124,47,94,58,"_useState"],[124,56,94,58],[125,6,94,9,"game"],[125,10,94,13],[125,13,94,13,"_useState2"],[125,23,94,13],[126,6,94,15,"setGame"],[126,13,94,22],[126,16,94,22,"_useState2"],[126,26,94,22],[127,4,95,2],[127,8,95,2,"_useState3"],[127,18,95,2],[127,21,95,40],[127,25,95,40,"useState"],[127,31,95,48],[127,32,95,48,"useState"],[127,40,95,48],[127,42,95,49],[127,44,95,51],[127,45,95,52],[128,6,95,52,"_useState4"],[128,16,95,52],[128,23,95,52,"_slicedToArray"],[128,37,95,52],[128,38,95,52,"default"],[128,45,95,52],[128,47,95,52,"_useState3"],[128,57,95,52],[129,6,95,9,"gameHistory"],[129,17,95,20],[129,20,95,20,"_useState4"],[129,30,95,20],[130,6,95,22,"setGameHistory"],[130,20,95,36],[130,23,95,36,"_useState4"],[130,33,95,36],[131,4,96,2],[131,8,96,2,"_useState5"],[131,18,96,2],[131,21,96,40],[131,25,96,40,"useState"],[131,31,96,48],[131,32,96,48,"useState"],[131,40,96,48],[131,42,96,49],[131,43,96,50],[131,44,96,51],[132,6,96,51,"_useState6"],[132,16,96,51],[132,23,96,51,"_slicedToArray"],[132,37,96,51],[132,38,96,51,"default"],[132,45,96,51],[132,47,96,51,"_useState5"],[132,57,96,51],[133,6,96,9,"stockCycles"],[133,17,96,20],[133,20,96,20,"_useState6"],[133,30,96,20],[134,6,96,22,"setStockCycles"],[134,20,96,36],[134,23,96,36,"_useState6"],[134,33,96,36],[135,4,97,2],[135,8,97,2,"_useState7"],[135,18,97,2],[135,21,97,50],[135,25,97,50,"useState"],[135,31,97,58],[135,32,97,58,"useState"],[135,40,97,58],[135,42,97,59],[135,47,97,64],[135,48,97,65],[136,6,97,65,"_useState8"],[136,16,97,65],[136,23,97,65,"_slicedToArray"],[136,37,97,65],[136,38,97,65,"default"],[136,45,97,65],[136,47,97,65,"_useState7"],[136,57,97,65],[137,6,97,9,"isAutoCompleting"],[137,22,97,25],[137,25,97,25,"_useState8"],[137,35,97,25],[138,6,97,27,"setIsAutoCompleting"],[138,25,97,46],[138,28,97,46,"_useState8"],[138,38,97,46],[139,4,99,2],[139,8,99,8,"resetCycleOnProgress"],[139,28,99,28],[139,31,99,31,"resetCycleOnProgress"],[139,32,99,31],[139,37,99,37,"setStockCycles"],[139,51,99,51],[139,52,99,52],[139,53,99,53],[139,54,99,54],[141,4,101,2],[142,4,102,2],[142,8,102,8,"saveGameState"],[142,21,102,21],[142,24,102,25,"currentGame"],[142,35,102,36],[142,39,102,41],[143,6,103,4,"setGameHistory"],[143,20,103,18],[143,21,103,20,"prev"],[143,25,103,24],[143,29,103,29],[143,30,104,6],[143,33,104,9,"prev"],[143,37,104,13],[143,38,104,14,"slice"],[143,43,104,19],[143,44,104,20],[143,45,104,21],[143,47,104,23],[143,48,104,24],[143,50,105,6],[144,8,106,8],[144,11,106,11,"currentGame"],[144,22,106,22],[145,8,107,8,"foundations"],[145,19,107,19],[145,21,107,21,"currentGame"],[145,32,107,32],[145,33,107,33,"foundations"],[145,44,107,44],[145,45,107,45,"map"],[145,48,107,48],[145,49,107,50,"f"],[145,50,107,51],[145,54,107,56],[145,55,107,57],[145,58,107,60,"f"],[145,59,107,61],[145,60,107,62],[145,61,107,63],[146,8,108,8,"tableau"],[146,15,108,15],[146,17,108,17,"currentGame"],[146,28,108,28],[146,29,108,29,"tableau"],[146,36,108,36],[146,37,108,37,"map"],[146,40,108,40],[146,41,108,42,"t"],[146,42,108,43],[146,46,108,48],[146,47,108,49],[146,50,108,52,"t"],[146,51,108,53],[146,52,108,54],[146,53,108,55],[147,8,109,8,"stock"],[147,13,109,13],[147,15,109,15],[147,16,109,16],[147,19,109,19,"currentGame"],[147,30,109,30],[147,31,109,31,"stock"],[147,36,109,36],[147,37,109,37],[148,8,110,8,"waste"],[148,13,110,13],[148,15,110,15],[148,16,110,16],[148,19,110,19,"currentGame"],[148,30,110,30],[148,31,110,31,"waste"],[148,36,110,36],[148,37,110,37],[149,8,111,8,"selected"],[149,16,111,16],[149,18,111,18],[150,6,112,6],[150,7,112,7],[150,8,113,5],[150,9,113,6],[151,4,114,2],[151,5,114,3],[153,4,116,2],[154,4,117,2],[154,8,117,8,"canAutoComplete"],[154,23,117,23],[154,26,117,27,"gameState"],[154,35,117,36],[154,39,117,41],[155,6,118,4],[156,6,119,4],[156,11,119,9],[156,15,119,15,"column"],[156,21,119,21],[156,25,119,25,"gameState"],[156,34,119,34],[156,35,119,35,"tableau"],[156,42,119,42],[156,44,119,44],[157,8,120,6],[157,13,120,11],[157,17,120,17,"card"],[157,21,120,21],[157,25,120,25,"column"],[157,31,120,31],[157,33,120,33],[158,10,121,8],[158,14,121,12],[158,15,121,13,"card"],[158,19,121,17],[158,20,121,18,"faceUp"],[158,26,121,24],[158,28,121,26],[158,35,121,33],[158,40,121,38],[159,8,122,6],[160,6,123,4],[161,6,124,4],[162,6,125,4],[162,10,125,8,"gameState"],[162,19,125,17],[162,20,125,18,"waste"],[162,25,125,23],[162,26,125,24,"length"],[162,32,125,30],[162,35,125,33],[162,36,125,34],[162,38,125,36],[162,45,125,43],[162,50,125,48],[163,6,126,4],[164,6,127,4],[164,10,127,8,"gameState"],[164,19,127,17],[164,20,127,18,"foundations"],[164,31,127,29],[164,32,127,30,"every"],[164,37,127,35],[164,38,127,37,"f"],[164,39,127,38],[164,43,127,43,"f"],[164,44,127,44],[164,45,127,45,"length"],[164,51,127,51],[164,56,127,56],[164,58,127,58],[164,59,127,59],[164,61,127,61],[164,68,127,68],[164,73,127,73],[165,6,128,4],[165,13,128,11],[165,17,128,15],[166,4,129,2],[166,5,129,3],[167,4,131,2],[167,8,131,8,"canMoveTo"],[167,17,131,17],[167,20,131,20,"canMoveTo"],[167,21,131,21,"card"],[167,25,131,25],[167,27,131,27,"target"],[167,33,131,33],[167,35,131,35,"targetType"],[167,45,131,45],[167,50,131,50],[168,6,132,4],[168,10,132,8,"targetType"],[168,20,132,18],[168,25,132,23],[168,37,132,35],[168,39,132,37],[169,8,133,6],[169,12,133,10,"target"],[169,18,133,16],[169,19,133,17,"length"],[169,25,133,23],[169,30,133,28],[169,31,133,29],[169,33,133,31],[169,40,133,38,"card"],[169,44,133,42],[169,45,133,43,"numValue"],[169,53,133,51],[169,58,133,56],[169,59,133,57],[169,60,133,58],[169,61,133,59],[170,8,134,6],[170,12,134,12,"top"],[170,15,134,15],[170,18,134,18,"target"],[170,24,134,24],[170,25,134,25,"target"],[170,31,134,31],[170,32,134,32,"length"],[170,38,134,38],[170,41,134,41],[170,42,134,42],[170,43,134,43],[171,8,135,6],[171,15,135,13,"card"],[171,19,135,17],[171,20,135,18,"suit"],[171,24,135,22],[171,29,135,27,"top"],[171,32,135,30],[171,33,135,31,"suit"],[171,37,135,35],[171,41,135,39,"card"],[171,45,135,43],[171,46,135,44,"numValue"],[171,54,135,52],[171,59,135,57,"top"],[171,62,135,60],[171,63,135,61,"numValue"],[171,71,135,69],[171,74,135,72],[171,75,135,73],[172,6,136,4],[173,6,137,4],[173,10,137,8,"targetType"],[173,20,137,18],[173,25,137,23],[173,34,137,32],[173,36,137,34],[174,8,138,6],[174,12,138,10,"target"],[174,18,138,16],[174,19,138,17,"length"],[174,25,138,23],[174,30,138,28],[174,31,138,29],[174,33,138,31],[174,40,138,38,"card"],[174,44,138,42],[174,45,138,43,"numValue"],[174,53,138,51],[174,58,138,56],[174,60,138,58],[174,61,138,59],[174,62,138,60],[175,8,139,6],[175,12,139,12,"top"],[175,17,139,15],[175,20,139,18,"target"],[175,26,139,24],[175,27,139,25,"target"],[175,33,139,31],[175,34,139,32,"length"],[175,40,139,38],[175,43,139,41],[175,44,139,42],[175,45,139,43],[176,8,140,6],[176,15,140,13,"card"],[176,19,140,17],[176,20,140,18,"color"],[176,25,140,23],[176,30,140,28,"top"],[176,35,140,31],[176,36,140,32,"color"],[176,41,140,37],[176,45,140,41,"card"],[176,49,140,45],[176,50,140,46,"numValue"],[176,58,140,54],[176,63,140,59,"top"],[176,68,140,62],[176,69,140,63,"numValue"],[176,77,140,71],[176,80,140,74],[176,81,140,75],[177,6,141,4],[178,6,142,4],[178,13,142,11],[178,18,142,16],[179,4,143,2],[179,5,143,3],[180,4,145,2],[180,8,145,8,"getMovableCards"],[180,23,145,23],[180,26,145,26,"getMovableCards"],[180,27,145,27,"column"],[180,33,145,33],[180,35,145,35,"cardIndex"],[180,44,145,44],[180,49,145,49],[181,6,146,4],[181,10,146,10,"cards"],[181,15,146,15],[181,18,146,18],[181,20,146,20],[182,6,147,4],[182,11,147,9],[182,15,147,13,"i"],[182,16,147,14],[182,19,147,17,"cardIndex"],[182,28,147,26],[182,30,147,28,"i"],[182,31,147,29],[182,34,147,32,"column"],[182,40,147,38],[182,41,147,39,"length"],[182,47,147,45],[182,49,147,47,"i"],[182,50,147,48],[182,52,147,50],[182,54,147,52],[183,8,148,6],[183,12,148,10],[183,13,148,11,"column"],[183,19,148,17],[183,20,148,18,"i"],[183,21,148,19],[183,22,148,20],[183,23,148,21,"faceUp"],[183,29,148,27],[183,31,148,29],[184,8,149,6],[184,12,149,10,"cards"],[184,17,149,15],[184,18,149,16,"length"],[184,24,149,22],[184,27,149,25],[184,28,149,26],[184,30,149,28],[185,10,150,8],[185,14,150,14,"prev"],[185,18,150,18],[185,21,150,21,"cards"],[185,26,150,26],[185,27,150,27,"cards"],[185,32,150,32],[185,33,150,33,"length"],[185,39,150,39],[185,42,150,42],[185,43,150,43],[185,44,150,44],[186,10,151,8],[186,14,152,10,"column"],[186,20,152,16],[186,21,152,17,"i"],[186,22,152,18],[186,23,152,19],[186,24,152,20,"color"],[186,29,152,25],[186,34,152,30,"prev"],[186,38,152,34],[186,39,152,35,"color"],[186,44,152,40],[186,48,153,10,"column"],[186,54,153,16],[186,55,153,17,"i"],[186,56,153,18],[186,57,153,19],[186,58,153,20,"numValue"],[186,66,153,28],[186,71,153,33,"prev"],[186,75,153,37],[186,76,153,38,"numValue"],[186,84,153,46],[186,87,153,49],[186,88,153,50],[186,90,154,10],[187,12,155,10],[188,10,156,8],[189,8,157,6],[190,8,158,6,"cards"],[190,13,158,11],[190,14,158,12,"push"],[190,18,158,16],[190,19,158,17,"column"],[190,25,158,23],[190,26,158,24,"i"],[190,27,158,25],[190,28,158,26],[190,29,158,27],[191,6,159,4],[192,6,160,4],[192,13,160,11,"cards"],[192,18,160,16],[193,4,161,2],[193,5,161,3],[194,4,163,2],[194,8,163,8,"autoCompleteGame"],[194,24,163,24],[195,6,163,24],[195,10,163,24,"_ref"],[195,14,163,24],[195,21,163,24,"_asyncToGenerator"],[195,38,163,24],[195,39,163,24,"default"],[195,46,163,24],[195,48,163,27],[195,59,163,34,"gameState"],[195,68,163,43],[195,70,163,48],[196,8,164,4],[196,12,164,8,"isAutoCompleting"],[196,28,164,24],[196,30,164,26],[197,8,165,4,"setIsAutoCompleting"],[197,27,165,23],[197,28,165,24],[197,32,165,28],[197,33,165,29],[198,8,167,4],[198,12,167,8,"currentGame"],[198,23,167,19],[198,26,167,22],[199,10,167,24],[199,13,167,27,"gameState"],[200,8,167,37],[200,9,167,38],[201,8,168,4],[201,12,168,8,"movesMade"],[201,21,168,17],[201,24,168,20],[201,28,168,24],[202,8,170,4],[202,15,171,6,"movesMade"],[202,24,171,15],[202,28,172,6],[202,29,172,7,"currentGame"],[202,40,172,18],[202,41,172,19,"foundations"],[202,52,172,30],[202,53,172,31,"every"],[202,58,172,36],[202,59,172,38,"f"],[202,60,172,39],[202,64,172,44,"f"],[202,65,172,45],[202,66,172,46,"length"],[202,72,172,52],[202,77,172,57],[202,79,172,59],[202,80,172,60],[202,82,173,6],[203,10,174,6,"movesMade"],[203,19,174,15],[203,22,174,18],[203,27,174,23],[205,10,176,6],[206,10,177,6],[206,14,177,10,"currentGame"],[206,25,177,21],[206,26,177,22,"waste"],[206,31,177,27],[206,32,177,28,"length"],[206,38,177,34],[206,41,177,37],[206,42,177,38],[206,44,177,40],[207,12,178,8],[207,16,178,14,"topWaste"],[207,24,178,22],[207,27,178,25,"currentGame"],[207,38,178,36],[207,39,178,37,"waste"],[207,44,178,42],[207,45,178,43,"currentGame"],[207,56,178,54],[207,57,178,55,"waste"],[207,62,178,60],[207,63,178,61,"length"],[207,69,178,67],[207,72,178,70],[207,73,178,71],[207,74,178,72],[208,12,179,8],[208,17,179,13],[208,21,179,17,"i"],[208,22,179,18],[208,25,179,21],[208,26,179,22],[208,28,179,24,"i"],[208,29,179,25],[208,32,179,28,"currentGame"],[208,43,179,39],[208,44,179,40,"foundations"],[208,55,179,51],[208,56,179,52,"length"],[208,62,179,58],[208,64,179,60,"i"],[208,65,179,61],[208,67,179,63],[208,69,179,65],[209,14,180,10],[209,18,180,14,"canMoveTo"],[209,27,180,23],[209,28,180,24,"topWaste"],[209,36,180,32],[209,38,180,34,"currentGame"],[209,49,180,45],[209,50,180,46,"foundations"],[209,61,180,57],[209,62,180,58,"i"],[209,63,180,59],[209,64,180,60],[209,66,180,62],[209,78,180,74],[209,79,180,75],[209,81,180,77],[210,16,181,12,"currentGame"],[210,27,181,23],[210,28,181,24,"foundations"],[210,39,181,35],[210,40,181,36,"i"],[210,41,181,37],[210,42,181,38],[210,45,181,41],[210,46,182,14],[210,49,182,17,"currentGame"],[210,60,182,28],[210,61,182,29,"foundations"],[210,72,182,40],[210,73,182,41,"i"],[210,74,182,42],[210,75,182,43],[210,77,183,14,"topWaste"],[210,85,183,22],[210,86,184,13],[211,16,185,12,"currentGame"],[211,27,185,23],[211,28,185,24,"waste"],[211,33,185,29],[211,36,185,32,"currentGame"],[211,47,185,43],[211,48,185,44,"waste"],[211,53,185,49],[211,54,185,50,"slice"],[211,59,185,55],[211,60,185,56],[211,61,185,57],[211,63,185,59],[211,64,185,60],[211,65,185,61],[211,66,185,62],[212,16,186,12,"currentGame"],[212,27,186,23],[212,28,186,24,"score"],[212,33,186,29],[212,37,186,33],[212,39,186,35],[213,16,187,12,"currentGame"],[213,27,187,23],[213,28,187,24,"moves"],[213,33,187,29],[213,35,187,31],[214,16,188,12,"movesMade"],[214,25,188,21],[214,28,188,24],[214,32,188,28],[215,16,189,12,"resetCycleOnProgress"],[215,36,189,32],[215,37,189,33],[215,38,189,34],[216,16,190,12],[217,14,191,10],[218,12,192,8],[219,10,193,6],[221,10,195,6],[222,10,196,6],[222,14,196,10],[222,15,196,11,"movesMade"],[222,24,196,20],[222,26,196,22],[223,12,197,8],[223,17,198,10],[223,21,198,14,"colIndex"],[223,29,198,22],[223,32,198,25],[223,33,198,26],[223,35,199,10,"colIndex"],[223,43,199,18],[223,46,199,21,"currentGame"],[223,57,199,32],[223,58,199,33,"tableau"],[223,65,199,40],[223,66,199,41,"length"],[223,72,199,47],[223,74,200,10,"colIndex"],[223,82,200,18],[223,84,200,20],[223,86,201,10],[224,14,202,10],[224,18,202,16,"column"],[224,24,202,22],[224,27,202,25,"currentGame"],[224,38,202,36],[224,39,202,37,"tableau"],[224,46,202,44],[224,47,202,45,"colIndex"],[224,55,202,53],[224,56,202,54],[225,14,203,10],[225,18,203,14,"column"],[225,24,203,20],[225,25,203,21,"length"],[225,31,203,27],[225,34,203,30],[225,35,203,31],[225,37,203,33],[226,16,204,12],[226,20,204,18,"topCard"],[226,27,204,25],[226,30,204,28,"column"],[226,36,204,34],[226,37,204,35,"column"],[226,43,204,41],[226,44,204,42,"length"],[226,50,204,48],[226,53,204,51],[226,54,204,52],[226,55,204,53],[227,16,205,12],[227,21,205,17],[227,25,205,21,"i"],[227,28,205,22],[227,31,205,25],[227,32,205,26],[227,34,205,28,"i"],[227,37,205,29],[227,40,205,32,"currentGame"],[227,51,205,43],[227,52,205,44,"foundations"],[227,63,205,55],[227,64,205,56,"length"],[227,70,205,62],[227,72,205,64,"i"],[227,75,205,65],[227,77,205,67],[227,79,205,69],[228,18,206,14],[228,22,207,16,"canMoveTo"],[228,31,207,25],[228,32,207,26,"topCard"],[228,39,207,33],[228,41,207,35,"currentGame"],[228,52,207,46],[228,53,207,47,"foundations"],[228,64,207,58],[228,65,207,59,"i"],[228,68,207,60],[228,69,207,61],[228,71,207,63],[228,83,207,75],[228,84,207,76],[228,86,208,16],[229,20,209,16,"currentGame"],[229,31,209,27],[229,32,209,28,"foundations"],[229,43,209,39],[229,44,209,40,"i"],[229,47,209,41],[229,48,209,42],[229,51,209,45],[229,52,210,18],[229,55,210,21,"currentGame"],[229,66,210,32],[229,67,210,33,"foundations"],[229,78,210,44],[229,79,210,45,"i"],[229,82,210,46],[229,83,210,47],[229,85,211,18,"topCard"],[229,92,211,25],[229,93,212,17],[230,20,213,16,"currentGame"],[230,31,213,27],[230,32,213,28,"tableau"],[230,39,213,35],[230,40,213,36,"colIndex"],[230,48,213,44],[230,49,213,45],[230,52,213,48,"column"],[230,58,213,54],[230,59,213,55,"slice"],[230,64,213,60],[230,65,213,61],[230,66,213,62],[230,68,213,64],[230,69,213,65],[230,70,213,66],[230,71,213,67],[231,20,214,16,"currentGame"],[231,31,214,27],[231,32,214,28,"score"],[231,37,214,33],[231,41,214,37],[231,43,214,39],[232,20,215,16,"currentGame"],[232,31,215,27],[232,32,215,28,"moves"],[232,37,215,33],[232,39,215,35],[233,20,216,16,"movesMade"],[233,29,216,25],[233,32,216,28],[233,36,216,32],[234,20,217,16,"resetCycleOnProgress"],[234,40,217,36],[234,41,217,37],[234,42,217,38],[235,20,218,16],[236,18,219,14],[237,16,220,12],[238,16,221,12],[238,20,221,16,"movesMade"],[238,29,221,25],[238,31,221,27],[239,14,222,10],[240,12,223,8],[241,10,224,6],[242,10,226,6],[242,14,226,10,"movesMade"],[242,23,226,19],[242,25,226,21],[243,12,227,8,"setGame"],[243,19,227,15],[243,20,227,16],[244,14,227,18],[244,17,227,21,"currentGame"],[245,12,227,33],[245,13,227,34],[245,14,227,35],[246,12,228,8],[246,18,228,14],[246,22,228,18,"Promise"],[246,29,228,25],[246,30,228,27,"resolve"],[246,37,228,34],[246,41,228,39,"setTimeout"],[246,51,228,49],[246,52,228,50,"resolve"],[246,59,228,57],[246,61,228,59],[246,64,228,62],[246,65,228,63],[246,66,228,64],[247,10,229,6],[248,8,230,4],[249,8,232,4,"setIsAutoCompleting"],[249,27,232,23],[249,28,232,24],[249,33,232,29],[249,34,232,30],[250,6,233,2],[250,7,233,3],[251,6,233,3],[251,22,163,8,"autoCompleteGame"],[251,38,163,24,"autoCompleteGame"],[251,39,163,24,"_x"],[251,41,163,24],[252,8,163,24],[252,15,163,24,"_ref"],[252,19,163,24],[252,20,163,24,"apply"],[252,25,163,24],[252,32,163,24,"arguments"],[252,41,163,24],[253,6,163,24],[254,4,163,24],[254,7,233,3],[256,4,235,2],[257,4,236,2],[257,8,236,2,"useEffect"],[257,14,236,11],[257,15,236,11,"useEffect"],[257,24,236,11],[257,26,236,12],[257,32,236,18],[258,6,237,4],[259,6,238,4],[259,10,238,8,"game"],[259,14,238,12],[259,15,238,13,"foundations"],[259,26,238,24],[259,27,238,25,"every"],[259,32,238,30],[259,33,238,32,"f"],[259,34,238,33],[259,38,238,38,"f"],[259,39,238,39],[259,40,238,40,"length"],[259,46,238,46],[259,51,238,51],[259,53,238,53],[259,54,238,54],[259,56,238,56],[260,8,239,6,"Alert"],[260,20,239,11],[260,21,239,11,"Alert"],[260,26,239,11],[260,27,239,12,"alert"],[260,32,239,17],[260,33,239,18],[260,46,239,31],[260,48,239,33],[260,75,239,60,"game"],[260,79,239,64],[260,80,239,65,"score"],[260,85,239,70],[260,87,239,72],[260,88,239,73],[261,8,240,6],[262,6,241,4],[264,6,243,4],[265,6,244,4],[265,10,244,8,"stockCycles"],[265,21,244,19],[265,25,244,23],[265,26,244,24],[265,28,244,26],[266,8,245,6,"Alert"],[266,20,245,11],[266,21,245,11,"Alert"],[266,26,245,11],[266,27,245,12,"alert"],[266,32,245,17],[266,33,246,8],[266,47,246,22],[266,49,247,8],[266,109,247,68],[266,111,248,8],[266,112,248,9],[267,10,248,11,"text"],[267,14,248,15],[267,16,248,17],[267,26,248,27],[268,10,248,29,"onPress"],[268,17,248,36],[268,19,248,38,"onPress"],[268,20,248,38],[268,25,248,44,"resetGame"],[268,34,248,53],[268,35,248,54],[269,8,248,56],[269,9,248,57],[269,10,249,6],[269,11,249,7],[270,8,250,6],[271,6,251,4],[273,6,253,4],[274,6,254,4],[274,10,254,8,"canAutoComplete"],[274,25,254,23],[274,26,254,24,"game"],[274,30,254,28],[274,31,254,29],[274,35,254,33],[274,36,254,34,"isAutoCompleting"],[274,52,254,50],[274,54,254,52],[275,8,255,6,"Alert"],[275,20,255,11],[275,21,255,11,"Alert"],[275,26,255,11],[275,27,255,12,"alert"],[275,32,255,17],[275,33,256,8],[275,62,256,37],[275,64,257,8],[275,148,257,92],[275,150,258,8],[275,151,259,10],[276,10,259,12,"text"],[276,14,259,16],[276,16,259,18],[276,34,259,36],[277,10,259,38,"style"],[277,15,259,43],[277,17,259,45],[278,8,259,54],[278,9,259,55],[278,11,260,10],[279,10,260,12,"text"],[279,14,260,16],[279,16,260,18],[279,31,260,33],[280,10,260,35,"onPress"],[280,17,260,42],[280,19,260,44,"onPress"],[280,20,260,44],[280,25,260,50,"autoCompleteGame"],[280,41,260,66],[280,42,260,67,"game"],[280,46,260,71],[281,8,260,73],[281,9,260,74],[281,10,262,6],[281,11,262,7],[282,6,263,4],[283,4,264,2],[283,5,264,3],[283,7,264,5],[283,8,265,4,"game"],[283,12,265,8],[283,13,265,9,"foundations"],[283,24,265,20],[283,26,266,4,"stockCycles"],[283,37,266,15],[283,39,267,4,"game"],[283,43,267,8],[283,44,267,9,"stock"],[283,49,267,14],[283,50,267,15,"length"],[283,56,267,21],[283,58,268,4,"game"],[283,62,268,8],[283,63,268,9,"waste"],[283,68,268,14],[283,69,268,15,"length"],[283,75,268,21],[283,77,269,4,"isAutoCompleting"],[283,93,269,20],[283,94,270,3],[283,95,270,4],[285,4,272,2],[286,4,273,2],[286,8,273,8,"undoLastMove"],[286,20,273,20],[287,6,273,20],[287,10,273,20,"_ref2"],[287,15,273,20],[287,22,273,20,"_asyncToGenerator"],[287,39,273,20],[287,40,273,20,"default"],[287,47,273,20],[287,49,273,23],[287,62,273,35],[288,8,274,4],[288,12,274,8,"gameHistory"],[288,23,274,19],[288,24,274,20,"length"],[288,30,274,26],[288,35,274,31],[288,36,274,32],[288,38,274,34],[289,10,275,6],[289,16,275,12,"Haptics"],[289,23,275,19],[289,24,275,20,"notificationAsync"],[289,41,275,37],[289,42,275,38,"Haptics"],[289,49,275,45],[289,50,275,46,"NotificationFeedbackType"],[289,74,275,70],[289,75,275,71,"Error"],[289,80,275,76],[289,81,275,77],[290,10,276,6],[291,8,277,4],[292,8,278,4],[292,14,278,10,"Haptics"],[292,21,278,17],[292,22,278,18,"impactAsync"],[292,33,278,29],[292,34,278,30,"Haptics"],[292,41,278,37],[292,42,278,38,"ImpactFeedbackStyle"],[292,61,278,57],[292,62,278,58,"Medium"],[292,68,278,64],[292,69,278,65],[293,8,279,4],[293,12,279,10,"previousState"],[293,25,279,23],[293,28,279,26,"gameHistory"],[293,39,279,37],[293,40,279,38,"gameHistory"],[293,51,279,49],[293,52,279,50,"length"],[293,58,279,56],[293,61,279,59],[293,62,279,60],[293,63,279,61],[294,8,280,4,"setGame"],[294,15,280,11],[294,16,280,12,"previousState"],[294,29,280,25],[294,30,280,26],[295,8,281,4,"setGameHistory"],[295,22,281,18],[295,23,281,20,"prev"],[295,27,281,24],[295,31,281,29,"prev"],[295,35,281,33],[295,36,281,34,"slice"],[295,41,281,39],[295,42,281,40],[295,43,281,41],[295,45,281,43],[295,46,281,44],[295,47,281,45],[295,48,281,46],[295,49,281,47],[296,8,282,4],[297,6,283,2],[297,7,283,3],[298,6,283,3],[298,22,273,8,"undoLastMove"],[298,34,273,20,"undoLastMove"],[298,35,273,20],[299,8,273,20],[299,15,273,20,"_ref2"],[299,20,273,20],[299,21,273,20,"apply"],[299,26,273,20],[299,33,273,20,"arguments"],[299,42,273,20],[300,6,273,20],[301,4,273,20],[301,7,283,3],[303,4,285,2],[304,4,286,2],[304,8,286,8,"tryAutoPlaceInSafeZone"],[304,30,286,30],[305,6,286,30],[305,10,286,30,"_ref3"],[305,15,286,30],[305,22,286,30,"_asyncToGenerator"],[305,39,286,30],[305,40,286,30,"default"],[305,47,286,30],[305,49,286,33],[305,60,286,40,"card"],[305,64,286,44],[305,66,286,46,"source"],[305,72,286,52],[305,74,286,54,"cardIndex"],[305,83,286,63],[305,85,286,68],[306,8,287,4],[306,14,287,10,"Haptics"],[306,21,287,17],[306,22,287,18,"impactAsync"],[306,33,287,29],[306,34,287,30,"Haptics"],[306,41,287,37],[306,42,287,38,"ImpactFeedbackStyle"],[306,61,287,57],[306,62,287,58,"Medium"],[306,68,287,64],[306,69,287,65],[307,8,287,66],[307,12,287,66,"_loop"],[307,17,287,66],[307,30,287,66,"_loop"],[307,31,287,66,"i"],[307,32,287,66],[307,34,289,54],[308,12,290,6],[308,16,290,12,"foundation"],[308,26,290,22],[308,29,290,25,"game"],[308,33,290,29],[308,34,290,30,"foundations"],[308,45,290,41],[308,46,290,42,"i"],[308,47,290,43],[308,48,290,44],[309,12,291,6],[309,16,291,10,"canMoveTo"],[309,25,291,19],[309,26,291,20,"card"],[309,30,291,24],[309,32,291,26,"foundation"],[309,42,291,36],[309,44,291,38],[309,56,291,50],[309,57,291,51],[309,59,291,53],[310,14,292,8,"setGame"],[310,21,292,15],[310,22,292,17,"prevGame"],[310,30,292,25],[310,34,292,30],[311,16,293,10,"saveGameState"],[311,29,293,23],[311,30,293,24,"prevGame"],[311,38,293,32],[311,39,293,33],[312,16,294,10],[312,20,294,16,"newGame"],[312,27,294,23],[312,30,294,26],[313,18,294,28],[313,21,294,31,"prevGame"],[314,16,294,40],[314,17,294,41],[316,16,296,10],[317,16,297,10],[317,20,297,16,"newFoundations"],[317,34,297,30],[317,37,297,33],[317,38,297,34],[317,41,297,37,"newGame"],[317,48,297,44],[317,49,297,45,"foundations"],[317,60,297,56],[317,61,297,57],[318,16,298,10,"newFoundations"],[318,30,298,24],[318,31,298,25,"i"],[318,32,298,26],[318,33,298,27],[318,36,298,30],[318,37,298,31],[318,40,298,34,"foundation"],[318,50,298,44],[318,52,298,46,"card"],[318,56,298,50],[318,57,298,51],[319,16,299,10,"newGame"],[319,23,299,17],[319,24,299,18,"foundations"],[319,35,299,29],[319,38,299,32,"newFoundations"],[319,52,299,46],[321,16,301,10],[322,16,302,10],[322,20,302,14,"source"],[322,26,302,20],[322,27,302,21,"type"],[322,31,302,25],[322,36,302,30],[322,45,302,39],[322,47,302,41],[323,18,303,12],[323,22,303,18,"sourceIndex"],[323,33,303,29],[323,36,303,32,"newGame"],[323,43,303,39],[323,44,303,40,"tableau"],[323,51,303,47],[323,52,303,48,"indexOf"],[323,59,303,55],[323,60,303,56,"source"],[323,66,303,62],[323,67,303,63,"column"],[323,73,303,69],[323,74,303,70],[324,18,304,12],[324,22,304,18,"newSourceColumn"],[324,37,304,33],[324,40,304,36],[324,41,304,37],[324,44,304,40,"source"],[324,50,304,46],[324,51,304,47,"column"],[324,57,304,53],[324,58,304,54],[325,18,305,12,"newSourceColumn"],[325,33,305,27],[325,34,305,28,"splice"],[325,40,305,34],[325,41,305,35,"cardIndex"],[325,50,305,44],[325,52,305,46],[325,53,305,47],[325,54,305,48],[326,18,306,12,"newGame"],[326,25,306,19],[326,26,306,20,"tableau"],[326,33,306,27],[326,34,306,28,"sourceIndex"],[326,45,306,39],[326,46,306,40],[326,49,306,43,"newSourceColumn"],[326,64,306,58],[328,18,308,12],[329,18,309,12],[329,22,309,18,"topCard"],[329,29,309,25],[329,32,309,28,"newSourceColumn"],[329,47,309,43],[329,48,309,44,"newSourceColumn"],[329,63,309,59],[329,64,309,60,"length"],[329,70,309,66],[329,73,309,69],[329,74,309,70],[329,75,309,71],[330,18,310,12],[330,22,310,16,"topCard"],[330,29,310,23],[330,33,310,27],[330,34,310,28,"topCard"],[330,41,310,35],[330,42,310,36,"faceUp"],[330,48,310,42],[330,50,310,44],[331,20,311,14,"topCard"],[331,27,311,21],[331,28,311,22,"faceUp"],[331,34,311,28],[331,37,311,31],[331,41,311,35],[332,20,312,14,"newGame"],[332,27,312,21],[332,28,312,22,"score"],[332,33,312,27],[332,37,312,31],[332,38,312,32],[333,18,313,12],[334,16,314,10],[334,17,314,11],[334,23,314,17],[334,27,314,21,"source"],[334,33,314,27],[334,34,314,28,"type"],[334,38,314,32],[334,43,314,37],[334,50,314,44],[334,52,314,46],[335,18,315,12,"newGame"],[335,25,315,19],[335,26,315,20,"waste"],[335,31,315,25],[335,34,315,28],[335,35,315,29],[335,38,315,32,"newGame"],[335,45,315,39],[335,46,315,40,"waste"],[335,51,315,45],[335,52,315,46],[336,18,316,12,"newGame"],[336,25,316,19],[336,26,316,20,"waste"],[336,31,316,25],[336,32,316,26,"pop"],[336,35,316,29],[336,36,316,30],[336,37,316,31],[337,16,317,10],[338,16,319,10,"newGame"],[338,23,319,17],[338,24,319,18,"score"],[338,29,319,23],[338,33,319,27],[338,35,319,29],[339,16,320,10,"newGame"],[339,23,320,17],[339,24,320,18,"moves"],[339,29,320,23],[339,31,320,25],[340,16,321,10,"newGame"],[340,23,321,17],[340,24,321,18,"selected"],[340,32,321,26],[340,35,321,29],[340,39,321,33],[341,16,323,10,"resetCycleOnProgress"],[341,36,323,30],[341,37,323,31],[341,38,323,32],[341,39,323,33],[341,40,323,34],[342,16,324,10,"Haptics"],[342,23,324,17],[342,24,324,18,"notificationAsync"],[342,41,324,35],[342,42,324,36,"Haptics"],[342,49,324,43],[342,50,324,44,"NotificationFeedbackType"],[342,74,324,68],[342,75,324,69,"Success"],[342,82,324,76],[342,83,324,77],[343,16,325,10],[343,23,325,17,"newGame"],[343,30,325,24],[344,14,326,8],[344,15,326,9],[344,16,326,10],[345,14,326,11],[346,16,326,11,"v"],[346,17,326,11],[346,19,327,15],[347,14,327,19],[348,12,328,6],[349,10,329,4],[349,11,329,5],[350,10,329,5,"_ret"],[350,14,329,5],[351,8,289,4],[351,13,289,9],[351,17,289,13,"i"],[351,18,289,14],[351,21,289,17],[351,22,289,18],[351,24,289,20,"i"],[351,25,289,21],[351,28,289,24,"game"],[351,32,289,28],[351,33,289,29,"foundations"],[351,44,289,40],[351,45,289,41,"length"],[351,51,289,47],[351,53,289,49,"i"],[351,54,289,50],[351,56,289,52],[352,10,289,52,"_ret"],[352,14,289,52],[352,24,289,52,"_loop"],[352,29,289,52],[352,30,289,52,"i"],[352,31,289,52],[353,10,289,52],[353,14,289,52,"_ret"],[353,18,289,52],[353,27,289,52,"_ret"],[353,31,289,52],[353,32,289,52,"v"],[353,33,289,52],[354,8,289,52],[355,8,331,4,"Haptics"],[355,15,331,11],[355,16,331,12,"notificationAsync"],[355,33,331,29],[355,34,331,30,"Haptics"],[355,41,331,37],[355,42,331,38,"NotificationFeedbackType"],[355,66,331,62],[355,67,331,63,"Error"],[355,72,331,68],[355,73,331,69],[356,8,332,4],[356,15,332,11],[356,20,332,16],[357,6,333,2],[357,7,333,3],[358,6,333,3],[358,22,286,8,"tryAutoPlaceInSafeZone"],[358,44,286,30,"tryAutoPlaceInSafeZone"],[358,45,286,30,"_x2"],[358,48,286,30],[358,50,286,30,"_x3"],[358,53,286,30],[358,55,286,30,"_x4"],[358,58,286,30],[359,8,286,30],[359,15,286,30,"_ref3"],[359,20,286,30],[359,21,286,30,"apply"],[359,26,286,30],[359,33,286,30,"arguments"],[359,42,286,30],[360,6,286,30],[361,4,286,30],[361,7,333,3],[362,4,335,2],[362,8,335,8,"handleCardPress"],[362,23,335,23],[363,6,335,23],[363,10,335,23,"_ref4"],[363,15,335,23],[363,22,335,23,"_asyncToGenerator"],[363,39,335,23],[363,40,335,23,"default"],[363,47,335,23],[363,49,335,26],[363,60,335,33,"card"],[363,64,335,37],[363,66,335,39,"source"],[363,72,335,45],[363,74,335,47,"cardIndex"],[363,83,335,56],[363,85,335,61],[364,8,336,4],[364,12,336,8,"isAutoCompleting"],[364,28,336,24],[364,30,336,26],[365,8,338,4],[365,14,338,10,"Haptics"],[365,21,338,17],[365,22,338,18,"impactAsync"],[365,33,338,29],[365,34,338,30,"Haptics"],[365,41,338,37],[365,42,338,38,"ImpactFeedbackStyle"],[365,61,338,57],[365,62,338,58,"Light"],[365,67,338,63],[365,68,338,64],[366,8,340,4],[366,12,340,8],[366,13,340,9,"game"],[366,17,340,13],[366,18,340,14,"selected"],[366,26,340,22],[366,28,340,24],[367,10,341,6],[367,14,341,10],[367,15,341,11,"card"],[367,19,341,15],[367,20,341,16,"faceUp"],[367,26,341,22],[367,28,341,24],[368,10,342,6],[368,14,342,10,"cards"],[368,19,342,15],[368,22,342,18],[368,23,342,19,"card"],[368,27,342,23],[368,28,342,24],[369,10,343,6],[369,14,343,10,"source"],[369,20,343,16],[369,21,343,17,"type"],[369,25,343,21],[369,30,343,26],[369,39,343,35],[369,41,343,37],[370,12,344,8,"cards"],[370,17,344,13],[370,20,344,16,"getMovableCards"],[370,35,344,31],[370,36,344,32,"source"],[370,42,344,38],[370,43,344,39,"column"],[370,49,344,45],[370,51,344,47,"cardIndex"],[370,60,344,56],[370,61,344,57],[371,10,345,6],[372,10,346,6,"setGame"],[372,17,346,13],[372,18,346,14],[373,12,346,16],[373,15,346,19,"game"],[373,19,346,23],[374,12,346,25,"selected"],[374,20,346,33],[374,22,346,35],[375,14,346,37,"cards"],[375,19,346,42],[376,14,346,44,"source"],[376,20,346,50],[377,14,346,52,"cardIndex"],[378,12,346,62],[379,10,346,64],[379,11,346,65],[379,12,346,66],[380,10,347,6],[381,8,348,4],[383,8,350,4],[384,8,351,4,"setGame"],[384,15,351,11],[384,16,351,13,"prevGame"],[384,24,351,21],[384,28,351,26],[385,10,352,6],[385,14,352,12,"newGame"],[385,21,352,19],[385,24,352,22],[386,12,352,24],[386,15,352,27,"prevGame"],[387,10,352,36],[387,11,352,37],[388,10,353,6],[388,14,353,6,"_newGame$selected"],[388,31,353,6],[388,34,353,63,"newGame"],[388,41,353,70],[388,42,353,71,"selected"],[388,50,353,79],[389,12,353,21,"selectedCards"],[389,25,353,34],[389,28,353,34,"_newGame$selected"],[389,45,353,34],[389,46,353,14,"cards"],[389,51,353,19],[390,12,353,44,"selectedSource"],[390,26,353,58],[390,29,353,58,"_newGame$selected"],[390,46,353,58],[390,47,353,36,"source"],[390,53,353,42],[391,10,354,6],[391,14,354,10,"canMove"],[391,21,354,17],[391,24,354,20],[391,29,354,25],[392,10,356,6],[392,14,356,10,"source"],[392,20,356,16],[392,21,356,17,"type"],[392,25,356,21],[392,30,356,26],[392,42,356,38],[392,44,356,40],[393,12,357,8],[393,16,358,10,"selectedCards"],[393,29,358,23],[393,30,358,24,"length"],[393,36,358,30],[393,41,358,35],[393,42,358,36],[393,46,359,10,"canMoveTo"],[393,55,359,19],[393,56,359,20,"selectedCards"],[393,69,359,33],[393,70,359,34],[393,71,359,35],[393,72,359,36],[393,74,359,38,"source"],[393,80,359,44],[393,81,359,45,"column"],[393,87,359,51],[393,89,359,53],[393,101,359,65],[393,102,359,66],[393,104,360,10],[394,14,361,10,"saveGameState"],[394,27,361,23],[394,28,361,24,"prevGame"],[394,36,361,32],[394,37,361,33],[395,14,362,10],[395,18,362,16,"newFoundations"],[395,32,362,30],[395,35,362,33],[395,36,362,34],[395,39,362,37,"newGame"],[395,46,362,44],[395,47,362,45,"foundations"],[395,58,362,56],[395,59,362,57],[396,14,363,10],[396,18,363,16,"foundationIndex"],[396,33,363,31],[396,36,363,34,"newGame"],[396,43,363,41],[396,44,363,42,"foundations"],[396,55,363,53],[396,56,363,54,"indexOf"],[396,63,363,61],[396,64,363,62,"source"],[396,70,363,68],[396,71,363,69,"column"],[396,77,363,75],[396,78,363,76],[397,14,364,10,"newFoundations"],[397,28,364,24],[397,29,364,25,"foundationIndex"],[397,44,364,40],[397,45,364,41],[397,48,364,44],[397,49,365,12],[397,52,365,15,"source"],[397,58,365,21],[397,59,365,22,"column"],[397,65,365,28],[397,67,366,12,"selectedCards"],[397,80,366,25],[397,81,366,26],[397,82,366,27],[397,83,366,28],[397,84,367,11],[398,14,368,10,"newGame"],[398,21,368,17],[398,22,368,18,"foundations"],[398,33,368,29],[398,36,368,32,"newFoundations"],[398,50,368,46],[399,14,369,10,"canMove"],[399,21,369,17],[399,24,369,20],[399,28,369,24],[400,14,370,10,"newGame"],[400,21,370,17],[400,22,370,18,"score"],[400,27,370,23],[400,31,370,27],[400,33,370,29],[401,12,371,8],[402,10,372,6],[402,11,372,7],[402,17,372,13],[402,21,372,17,"source"],[402,27,372,23],[402,28,372,24,"type"],[402,32,372,28],[402,37,372,33],[402,46,372,42],[402,48,372,44],[403,12,373,8],[403,16,373,12,"canMoveTo"],[403,25,373,21],[403,26,373,22,"selectedCards"],[403,39,373,35],[403,40,373,36],[403,41,373,37],[403,42,373,38],[403,44,373,40,"source"],[403,50,373,46],[403,51,373,47,"column"],[403,57,373,53],[403,59,373,55],[403,68,373,64],[403,69,373,65],[403,71,373,67],[404,14,374,10,"saveGameState"],[404,27,374,23],[404,28,374,24,"prevGame"],[404,36,374,32],[404,37,374,33],[405,14,375,10],[405,18,375,16,"newTableau"],[405,28,375,26],[405,31,375,29],[405,32,375,30],[405,35,375,33,"newGame"],[405,42,375,40],[405,43,375,41,"tableau"],[405,50,375,48],[405,51,375,49],[406,14,376,10],[406,18,376,16,"tableauIndex"],[406,30,376,28],[406,33,376,31,"newGame"],[406,40,376,38],[406,41,376,39,"tableau"],[406,48,376,46],[406,49,376,47,"indexOf"],[406,56,376,54],[406,57,376,55,"source"],[406,63,376,61],[406,64,376,62,"column"],[406,70,376,68],[406,71,376,69],[407,14,377,10,"newTableau"],[407,24,377,20],[407,25,377,21,"tableauIndex"],[407,37,377,33],[407,38,377,34],[407,41,377,37],[407,42,377,38],[407,45,377,41,"source"],[407,51,377,47],[407,52,377,48,"column"],[407,58,377,54],[407,60,377,56],[407,63,377,59,"selectedCards"],[407,76,377,72],[407,77,377,73],[408,14,378,10,"newGame"],[408,21,378,17],[408,22,378,18,"tableau"],[408,29,378,25],[408,32,378,28,"newTableau"],[408,42,378,38],[409,14,379,10,"canMove"],[409,21,379,17],[409,24,379,20],[409,28,379,24],[410,14,380,10,"newGame"],[410,21,380,17],[410,22,380,18,"score"],[410,27,380,23],[410,31,380,27],[410,32,380,28],[411,12,381,8],[412,10,382,6],[413,10,384,6],[413,14,384,10,"canMove"],[413,21,384,17],[413,23,384,19],[414,12,385,8],[414,16,385,12,"selectedSource"],[414,30,385,26],[414,31,385,27,"type"],[414,35,385,31],[414,40,385,36],[414,49,385,45],[414,51,385,47],[415,14,386,10],[415,18,386,16,"sourceIndex"],[415,29,386,27],[415,32,386,30,"newGame"],[415,39,386,37],[415,40,386,38,"tableau"],[415,47,386,45],[415,48,386,46,"indexOf"],[415,55,386,53],[415,56,386,54,"selectedSource"],[415,70,386,68],[415,71,386,69,"column"],[415,77,386,75],[415,78,386,76],[416,14,387,10],[416,18,387,16,"newSourceColumn"],[416,33,387,31],[416,36,387,34],[416,37,387,35],[416,40,387,38,"selectedSource"],[416,54,387,52],[416,55,387,53,"column"],[416,61,387,59],[416,62,387,60],[417,14,388,10,"newSourceColumn"],[417,29,388,25],[417,30,388,26,"splice"],[417,36,388,32],[417,37,388,33],[417,38,388,34,"selectedCards"],[417,51,388,47],[417,52,388,48,"length"],[417,58,388,54],[417,59,388,55],[418,14,389,10,"newGame"],[418,21,389,17],[418,22,389,18,"tableau"],[418,29,389,25],[418,30,389,26,"sourceIndex"],[418,41,389,37],[418,42,389,38],[418,45,389,41,"newSourceColumn"],[418,60,389,56],[419,14,391,10],[419,18,391,16,"topCard"],[419,25,391,23],[419,28,391,26,"newSourceColumn"],[419,43,391,41],[419,44,391,42,"newSourceColumn"],[419,59,391,57],[419,60,391,58,"length"],[419,66,391,64],[419,69,391,67],[419,70,391,68],[419,71,391,69],[420,14,392,10],[420,18,392,14,"topCard"],[420,25,392,21],[420,29,392,25],[420,30,392,26,"topCard"],[420,37,392,33],[420,38,392,34,"faceUp"],[420,44,392,40],[420,46,392,42],[421,16,393,12,"topCard"],[421,23,393,19],[421,24,393,20,"faceUp"],[421,30,393,26],[421,33,393,29],[421,37,393,33],[422,16,394,12,"newGame"],[422,23,394,19],[422,24,394,20,"score"],[422,29,394,25],[422,33,394,29],[422,34,394,30],[423,14,395,10],[424,12,396,8],[424,13,396,9],[424,19,396,15],[424,23,396,19,"selectedSource"],[424,37,396,33],[424,38,396,34,"type"],[424,42,396,38],[424,47,396,43],[424,54,396,50],[424,56,396,52],[425,14,397,10,"newGame"],[425,21,397,17],[425,22,397,18,"waste"],[425,27,397,23],[425,30,397,26],[425,31,397,27],[425,34,397,30,"newGame"],[425,41,397,37],[425,42,397,38,"waste"],[425,47,397,43],[425,48,397,44],[426,14,398,10,"newGame"],[426,21,398,17],[426,22,398,18,"waste"],[426,27,398,23],[426,28,398,24,"pop"],[426,31,398,27],[426,32,398,28],[426,33,398,29],[427,12,399,8],[428,12,400,8,"newGame"],[428,19,400,15],[428,20,400,16,"moves"],[428,25,400,21],[428,27,400,23],[429,12,401,8,"resetCycleOnProgress"],[429,32,401,28],[429,33,401,29],[429,34,401,30],[429,35,401,31],[429,36,401,32],[430,12,402,8,"Haptics"],[430,19,402,15],[430,20,402,16,"notificationAsync"],[430,37,402,33],[430,38,402,34,"Haptics"],[430,45,402,41],[430,46,402,42,"NotificationFeedbackType"],[430,70,402,66],[430,71,402,67,"Success"],[430,78,402,74],[430,79,402,75],[431,10,403,6],[431,11,403,7],[431,17,403,13],[432,12,404,8,"Haptics"],[432,19,404,15],[432,20,404,16,"notificationAsync"],[432,37,404,33],[432,38,404,34,"Haptics"],[432,45,404,41],[432,46,404,42,"NotificationFeedbackType"],[432,70,404,66],[432,71,404,67,"Error"],[432,76,404,72],[432,77,404,73],[433,10,405,6],[434,10,407,6,"newGame"],[434,17,407,13],[434,18,407,14,"selected"],[434,26,407,22],[434,29,407,25],[434,33,407,29],[435,10,408,6],[435,17,408,13,"newGame"],[435,24,408,20],[436,8,409,4],[436,9,409,5],[436,10,409,6],[437,6,410,2],[437,7,410,3],[438,6,410,3],[438,22,335,8,"handleCardPress"],[438,37,335,23,"handleCardPress"],[438,38,335,23,"_x5"],[438,41,335,23],[438,43,335,23,"_x6"],[438,46,335,23],[438,48,335,23,"_x7"],[438,51,335,23],[439,8,335,23],[439,15,335,23,"_ref4"],[439,20,335,23],[439,21,335,23,"apply"],[439,26,335,23],[439,33,335,23,"arguments"],[439,42,335,23],[440,6,335,23],[441,4,335,23],[441,7,410,3],[442,4,412,2],[442,8,412,8,"handleEmptySpacePress"],[442,29,412,29],[443,6,412,29],[443,10,412,29,"_ref5"],[443,15,412,29],[443,22,412,29,"_asyncToGenerator"],[443,39,412,29],[443,40,412,29,"default"],[443,47,412,29],[443,49,412,32],[443,60,412,39,"target"],[443,66,412,45],[443,68,412,47,"targetType"],[443,78,412,57],[443,80,412,62],[444,8,413,4],[444,12,413,8],[444,13,413,9,"game"],[444,17,413,13],[444,18,413,14,"selected"],[444,26,413,22],[444,30,413,26,"isAutoCompleting"],[444,46,413,42],[444,48,413,44],[445,8,415,4],[445,14,415,10,"Haptics"],[445,21,415,17],[445,22,415,18,"impactAsync"],[445,33,415,29],[445,34,415,30,"Haptics"],[445,41,415,37],[445,42,415,38,"ImpactFeedbackStyle"],[445,61,415,57],[445,62,415,58,"Light"],[445,67,415,63],[445,68,415,64],[446,8,417,4,"setGame"],[446,15,417,11],[446,16,417,13,"prevGame"],[446,24,417,21],[446,28,417,26],[447,10,418,6],[447,14,418,12,"newGame"],[447,21,418,19],[447,24,418,22],[448,12,418,24],[448,15,418,27,"prevGame"],[449,10,418,36],[449,11,418,37],[450,10,419,6],[450,14,419,6,"_newGame$selected2"],[450,32,419,6],[450,35,419,63,"newGame"],[450,42,419,70],[450,43,419,71,"selected"],[450,51,419,79],[451,12,419,21,"selectedCards"],[451,25,419,34],[451,28,419,34,"_newGame$selected2"],[451,46,419,34],[451,47,419,14,"cards"],[451,52,419,19],[452,12,419,44,"selectedSource"],[452,26,419,58],[452,29,419,58,"_newGame$selected2"],[452,47,419,58],[452,48,419,36,"source"],[452,54,419,42],[453,10,420,6],[453,14,420,10,"canMove"],[453,21,420,17],[453,24,420,20],[453,29,420,25],[454,10,422,6],[454,14,422,10,"targetType"],[454,24,422,20],[454,29,422,25],[454,41,422,37],[454,45,422,41,"selectedCards"],[454,58,422,54],[454,59,422,55,"length"],[454,65,422,61],[454,70,422,66],[454,71,422,67],[454,73,422,69],[455,12,423,8],[455,16,423,12,"canMoveTo"],[455,25,423,21],[455,26,423,22,"selectedCards"],[455,39,423,35],[455,40,423,36],[455,41,423,37],[455,42,423,38],[455,44,423,40,"target"],[455,50,423,46],[455,52,423,48],[455,64,423,60],[455,65,423,61],[455,67,423,63],[456,14,424,10,"saveGameState"],[456,27,424,23],[456,28,424,24,"prevGame"],[456,36,424,32],[456,37,424,33],[457,14,425,10],[457,18,425,16,"newFoundations"],[457,32,425,30],[457,35,425,33],[457,36,425,34],[457,39,425,37,"newGame"],[457,46,425,44],[457,47,425,45,"foundations"],[457,58,425,56],[457,59,425,57],[458,14,426,10],[458,18,426,16,"foundationIndex"],[458,33,426,31],[458,36,426,34,"newGame"],[458,43,426,41],[458,44,426,42,"foundations"],[458,55,426,53],[458,56,426,54,"indexOf"],[458,63,426,61],[458,64,426,62,"target"],[458,70,426,68],[458,71,426,69],[459,14,427,10,"newFoundations"],[459,28,427,24],[459,29,427,25,"foundationIndex"],[459,44,427,40],[459,45,427,41],[459,48,427,44],[459,49,427,45],[459,52,427,48,"target"],[459,58,427,54],[459,60,427,56,"selectedCards"],[459,73,427,69],[459,74,427,70],[459,75,427,71],[459,76,427,72],[459,77,427,73],[460,14,428,10,"newGame"],[460,21,428,17],[460,22,428,18,"foundations"],[460,33,428,29],[460,36,428,32,"newFoundations"],[460,50,428,46],[461,14,429,10,"canMove"],[461,21,429,17],[461,24,429,20],[461,28,429,24],[462,14,430,10,"newGame"],[462,21,430,17],[462,22,430,18,"score"],[462,27,430,23],[462,31,430,27],[462,33,430,29],[463,12,431,8],[464,10,432,6],[464,11,432,7],[464,17,432,13],[464,21,432,17,"targetType"],[464,31,432,27],[464,36,432,32],[464,45,432,41],[464,47,432,43],[465,12,433,8],[465,16,433,12,"canMoveTo"],[465,25,433,21],[465,26,433,22,"selectedCards"],[465,39,433,35],[465,40,433,36],[465,41,433,37],[465,42,433,38],[465,44,433,40,"target"],[465,50,433,46],[465,52,433,48],[465,61,433,57],[465,62,433,58],[465,64,433,60],[466,14,434,10,"saveGameState"],[466,27,434,23],[466,28,434,24,"prevGame"],[466,36,434,32],[466,37,434,33],[467,14,435,10],[467,18,435,16,"newTableau"],[467,28,435,26],[467,31,435,29],[467,32,435,30],[467,35,435,33,"newGame"],[467,42,435,40],[467,43,435,41,"tableau"],[467,50,435,48],[467,51,435,49],[468,14,436,10],[468,18,436,16,"tableauIndex"],[468,30,436,28],[468,33,436,31,"newGame"],[468,40,436,38],[468,41,436,39,"tableau"],[468,48,436,46],[468,49,436,47,"indexOf"],[468,56,436,54],[468,57,436,55,"target"],[468,63,436,61],[468,64,436,62],[469,14,437,10,"newTableau"],[469,24,437,20],[469,25,437,21,"tableauIndex"],[469,37,437,33],[469,38,437,34],[469,41,437,37],[469,42,437,38],[469,45,437,41,"target"],[469,51,437,47],[469,53,437,49],[469,56,437,52,"selectedCards"],[469,69,437,65],[469,70,437,66],[470,14,438,10,"newGame"],[470,21,438,17],[470,22,438,18,"tableau"],[470,29,438,25],[470,32,438,28,"newTableau"],[470,42,438,38],[471,14,439,10,"canMove"],[471,21,439,17],[471,24,439,20],[471,28,439,24],[472,14,440,10,"newGame"],[472,21,440,17],[472,22,440,18,"score"],[472,27,440,23],[472,31,440,27],[472,32,440,28],[473,12,441,8],[474,10,442,6],[475,10,444,6],[475,14,444,10,"canMove"],[475,21,444,17],[475,23,444,19],[476,12,445,8],[476,16,445,12,"selectedSource"],[476,30,445,26],[476,31,445,27,"type"],[476,35,445,31],[476,40,445,36],[476,49,445,45],[476,51,445,47],[477,14,446,10],[477,18,446,16,"sourceIndex"],[477,29,446,27],[477,32,446,30,"newGame"],[477,39,446,37],[477,40,446,38,"tableau"],[477,47,446,45],[477,48,446,46,"indexOf"],[477,55,446,53],[477,56,446,54,"selectedSource"],[477,70,446,68],[477,71,446,69,"column"],[477,77,446,75],[477,78,446,76],[478,14,447,10],[478,18,447,16,"newSourceColumn"],[478,33,447,31],[478,36,447,34],[478,37,447,35],[478,40,447,38,"selectedSource"],[478,54,447,52],[478,55,447,53,"column"],[478,61,447,59],[478,62,447,60],[479,14,448,10,"newSourceColumn"],[479,29,448,25],[479,30,448,26,"splice"],[479,36,448,32],[479,37,448,33],[479,38,448,34,"selectedCards"],[479,51,448,47],[479,52,448,48,"length"],[479,58,448,54],[479,59,448,55],[480,14,449,10,"newGame"],[480,21,449,17],[480,22,449,18,"tableau"],[480,29,449,25],[480,30,449,26,"sourceIndex"],[480,41,449,37],[480,42,449,38],[480,45,449,41,"newSourceColumn"],[480,60,449,56],[481,14,451,10],[481,18,451,16,"topCard"],[481,25,451,23],[481,28,451,26,"newSourceColumn"],[481,43,451,41],[481,44,451,42,"newSourceColumn"],[481,59,451,57],[481,60,451,58,"length"],[481,66,451,64],[481,69,451,67],[481,70,451,68],[481,71,451,69],[482,14,452,10],[482,18,452,14,"topCard"],[482,25,452,21],[482,29,452,25],[482,30,452,26,"topCard"],[482,37,452,33],[482,38,452,34,"faceUp"],[482,44,452,40],[482,46,452,42],[483,16,453,12,"topCard"],[483,23,453,19],[483,24,453,20,"faceUp"],[483,30,453,26],[483,33,453,29],[483,37,453,33],[484,16,454,12,"newGame"],[484,23,454,19],[484,24,454,20,"score"],[484,29,454,25],[484,33,454,29],[484,34,454,30],[485,14,455,10],[486,12,456,8],[486,13,456,9],[486,19,456,15],[486,23,456,19,"selectedSource"],[486,37,456,33],[486,38,456,34,"type"],[486,42,456,38],[486,47,456,43],[486,54,456,50],[486,56,456,52],[487,14,457,10,"newGame"],[487,21,457,17],[487,22,457,18,"waste"],[487,27,457,23],[487,30,457,26],[487,31,457,27],[487,34,457,30,"newGame"],[487,41,457,37],[487,42,457,38,"waste"],[487,47,457,43],[487,48,457,44],[488,14,458,10,"newGame"],[488,21,458,17],[488,22,458,18,"waste"],[488,27,458,23],[488,28,458,24,"pop"],[488,31,458,27],[488,32,458,28],[488,33,458,29],[489,12,459,8],[490,12,460,8,"newGame"],[490,19,460,15],[490,20,460,16,"moves"],[490,25,460,21],[490,27,460,23],[491,12,461,8,"resetCycleOnProgress"],[491,32,461,28],[491,33,461,29],[491,34,461,30],[491,35,461,31],[491,36,461,32],[492,12,462,8,"Haptics"],[492,19,462,15],[492,20,462,16,"notificationAsync"],[492,37,462,33],[492,38,462,34,"Haptics"],[492,45,462,41],[492,46,462,42,"NotificationFeedbackType"],[492,70,462,66],[492,71,462,67,"Success"],[492,78,462,74],[492,79,462,75],[493,10,463,6],[493,11,463,7],[493,17,463,13],[494,12,464,8,"Haptics"],[494,19,464,15],[494,20,464,16,"notificationAsync"],[494,37,464,33],[494,38,464,34,"Haptics"],[494,45,464,41],[494,46,464,42,"NotificationFeedbackType"],[494,70,464,66],[494,71,464,67,"Error"],[494,76,464,72],[494,77,464,73],[495,10,465,6],[496,10,467,6,"newGame"],[496,17,467,13],[496,18,467,14,"selected"],[496,26,467,22],[496,29,467,25],[496,33,467,29],[497,10,468,6],[497,17,468,13,"newGame"],[497,24,468,20],[498,8,469,4],[498,9,469,5],[498,10,469,6],[499,6,470,2],[499,7,470,3],[500,6,470,3],[500,22,412,8,"handleEmptySpacePress"],[500,43,412,29,"handleEmptySpacePress"],[500,44,412,29,"_x8"],[500,47,412,29],[500,49,412,29,"_x9"],[500,52,412,29],[501,8,412,29],[501,15,412,29,"_ref5"],[501,20,412,29],[501,21,412,29,"apply"],[501,26,412,29],[501,33,412,29,"arguments"],[501,42,412,29],[502,6,412,29],[503,4,412,29],[503,7,470,3],[504,4,472,2],[504,8,472,8,"handleStockPress"],[504,24,472,24],[505,6,472,24],[505,10,472,24,"_ref6"],[505,15,472,24],[505,22,472,24,"_asyncToGenerator"],[505,39,472,24],[505,40,472,24,"default"],[505,47,472,24],[505,49,472,27],[505,62,472,39],[506,8,473,4],[506,12,473,8,"isAutoCompleting"],[506,28,473,24],[506,30,473,26],[507,8,475,4],[507,14,475,10,"Haptics"],[507,21,475,17],[507,22,475,18,"impactAsync"],[507,33,475,29],[507,34,475,30,"Haptics"],[507,41,475,37],[507,42,475,38,"ImpactFeedbackStyle"],[507,61,475,57],[507,62,475,58,"Medium"],[507,68,475,64],[507,69,475,65],[508,8,477,4,"setGame"],[508,15,477,11],[508,16,477,13,"prevGame"],[508,24,477,21],[508,28,477,26],[509,10,478,6],[509,14,478,12,"newGame"],[509,21,478,19],[509,24,478,22],[510,12,479,8],[510,15,479,11,"prevGame"],[510,23,479,19],[511,12,480,8,"stock"],[511,17,480,13],[511,19,480,15],[511,20,480,16],[511,23,480,19,"prevGame"],[511,31,480,27],[511,32,480,28,"stock"],[511,37,480,33],[511,38,480,34],[512,12,481,8,"waste"],[512,17,481,13],[512,19,481,15],[512,20,481,16],[512,23,481,19,"prevGame"],[512,31,481,27],[512,32,481,28,"waste"],[512,37,481,33],[512,38,481,34],[513,12,482,8,"selected"],[513,20,482,16],[513,22,482,18],[514,10,483,6],[514,11,483,7],[515,10,485,6],[515,14,485,10,"newGame"],[515,21,485,17],[515,22,485,18,"stock"],[515,27,485,23],[515,28,485,24,"length"],[515,34,485,30],[515,37,485,33],[515,38,485,34],[515,40,485,36],[516,12,486,8],[517,12,487,8,"saveGameState"],[517,25,487,21],[517,26,487,22,"prevGame"],[517,34,487,30],[517,35,487,31],[518,12,488,8],[518,16,488,14,"cardsToDraw"],[518,27,488,25],[518,30,488,28,"Math"],[518,34,488,32],[518,35,488,33,"min"],[518,38,488,36],[518,39,488,37],[518,40,488,38],[518,42,488,40,"newGame"],[518,49,488,47],[518,50,488,48,"stock"],[518,55,488,53],[518,56,488,54,"length"],[518,62,488,60],[518,63,488,61],[519,12,489,8],[519,17,489,13],[519,21,489,17,"i"],[519,22,489,18],[519,25,489,21],[519,26,489,22],[519,28,489,24,"i"],[519,29,489,25],[519,32,489,28,"cardsToDraw"],[519,43,489,39],[519,45,489,41,"i"],[519,46,489,42],[519,48,489,44],[519,50,489,46],[520,14,490,10],[520,18,490,16,"drawnCard"],[520,27,490,25],[520,30,490,28],[521,16,490,30],[521,19,490,33,"newGame"],[521,26,490,40],[521,27,490,41,"stock"],[521,32,490,46],[521,33,490,47,"pop"],[521,36,490,50],[521,37,490,51],[522,14,490,53],[522,15,490,54],[523,14,491,10,"drawnCard"],[523,23,491,19],[523,24,491,20,"faceUp"],[523,30,491,26],[523,33,491,29],[523,37,491,33],[524,14,492,10,"newGame"],[524,21,492,17],[524,22,492,18,"waste"],[524,27,492,23],[524,28,492,24,"push"],[524,32,492,28],[524,33,492,29,"drawnCard"],[524,42,492,38],[524,43,492,39],[525,12,493,8],[526,12,494,8,"Haptics"],[526,19,494,15],[526,20,494,16,"notificationAsync"],[526,37,494,33],[526,38,494,34,"Haptics"],[526,45,494,41],[526,46,494,42,"NotificationFeedbackType"],[526,70,494,66],[526,71,494,67,"Success"],[526,78,494,74],[526,79,494,75],[527,10,495,6],[527,11,495,7],[527,17,495,13],[527,21,495,17,"newGame"],[527,28,495,24],[527,29,495,25,"waste"],[527,34,495,30],[527,35,495,31,"length"],[527,41,495,37],[527,44,495,40],[527,45,495,41],[527,47,495,43],[528,12,496,8],[529,12,497,8,"saveGameState"],[529,25,497,21],[529,26,497,22,"prevGame"],[529,34,497,30],[529,35,497,31],[530,12,498,8,"newGame"],[530,19,498,15],[530,20,498,16,"stock"],[530,25,498,21],[530,28,498,24,"newGame"],[530,35,498,31],[530,36,498,32,"waste"],[530,41,498,37],[530,42,499,11,"map"],[530,45,499,14],[530,46,499,16,"card"],[530,50,499,20],[530,55,499,26],[531,14,499,28],[531,17,499,31,"card"],[531,21,499,35],[532,14,499,37,"faceUp"],[532,20,499,43],[532,22,499,45],[533,12,499,51],[533,13,499,52],[533,14,499,53],[533,15,499,54],[533,16,500,11,"reverse"],[533,23,500,18],[533,24,500,19],[533,25,500,20],[534,12,501,8,"newGame"],[534,19,501,15],[534,20,501,16,"waste"],[534,25,501,21],[534,28,501,24],[534,30,501,26],[535,12,502,8,"newGame"],[535,19,502,15],[535,20,502,16,"score"],[535,25,502,21],[535,28,502,24,"Math"],[535,32,502,28],[535,33,502,29,"max"],[535,36,502,32],[535,37,502,33],[535,38,502,34],[535,40,502,36,"newGame"],[535,47,502,43],[535,48,502,44,"score"],[535,53,502,49],[535,56,502,52],[535,58,502,54],[535,59,502,55],[536,12,503,8,"setStockCycles"],[536,26,503,22],[536,27,503,24,"prev"],[536,31,503,28],[536,35,503,33,"prev"],[536,39,503,37],[536,42,503,40],[536,43,503,41],[536,44,503,42],[537,12,504,8,"Haptics"],[537,19,504,15],[537,20,504,16,"notificationAsync"],[537,37,504,33],[537,38,504,34,"Haptics"],[537,45,504,41],[537,46,504,42,"NotificationFeedbackType"],[537,70,504,66],[537,71,504,67,"Warning"],[537,78,504,74],[537,79,504,75],[538,10,505,6],[539,10,507,6],[539,17,507,13,"newGame"],[539,24,507,20],[540,8,508,4],[540,9,508,5],[540,10,508,6],[541,6,509,2],[541,7,509,3],[542,6,509,3],[542,22,472,8,"handleStockPress"],[542,38,472,24,"handleStockPress"],[542,39,472,24],[543,8,472,24],[543,15,472,24,"_ref6"],[543,20,472,24],[543,21,472,24,"apply"],[543,26,472,24],[543,33,472,24,"arguments"],[543,42,472,24],[544,6,472,24],[545,4,472,24],[545,7,509,3],[546,4,511,2],[546,8,511,8,"resetGame"],[546,17,511,17],[547,6,511,17],[547,10,511,17,"_ref7"],[547,15,511,17],[547,22,511,17,"_asyncToGenerator"],[547,39,511,17],[547,40,511,17,"default"],[547,47,511,17],[547,49,511,20],[547,62,511,32],[548,8,512,4],[548,14,512,10,"Haptics"],[548,21,512,17],[548,22,512,18,"impactAsync"],[548,33,512,29],[548,34,512,30,"Haptics"],[548,41,512,37],[548,42,512,38,"ImpactFeedbackStyle"],[548,61,512,57],[548,62,512,58,"Heavy"],[548,67,512,63],[548,68,512,64],[549,8,513,4,"setGame"],[549,15,513,11],[549,16,513,12,"generatePlayableGame"],[549,36,513,32],[549,37,513,33],[549,38,513,34],[549,39,513,35],[550,8,514,4,"setGameHistory"],[550,22,514,18],[550,23,514,19],[550,25,514,21],[550,26,514,22],[551,8,515,4,"setStockCycles"],[551,22,515,18],[551,23,515,19],[551,24,515,20],[551,25,515,21],[552,8,516,4,"setIsAutoCompleting"],[552,27,516,23],[552,28,516,24],[552,33,516,29],[552,34,516,30],[553,6,517,2],[553,7,517,3],[554,6,517,3],[554,22,511,8,"resetGame"],[554,31,511,17,"resetGame"],[554,32,511,17],[555,8,511,17],[555,15,511,17,"_ref7"],[555,20,511,17],[555,21,511,17,"apply"],[555,26,511,17],[555,33,511,17,"arguments"],[555,42,511,17],[556,6,511,17],[557,4,511,17],[557,7,517,3],[558,4,519,2],[558,8,519,8,"isSelected"],[558,18,519,18],[558,21,519,22,"card"],[558,25,519,26],[558,29,519,31],[559,6,520,4],[559,13,520,11,"game"],[559,17,520,15],[559,18,520,16,"selected"],[559,26,520,24],[559,28,520,26,"cards"],[559,33,520,31],[559,34,520,32,"some"],[559,38,520,36],[559,39,520,38,"c"],[559,40,520,39],[559,44,520,44,"c"],[559,45,520,45],[559,46,520,46,"id"],[559,48,520,48],[559,53,520,53,"card"],[559,57,520,57],[559,58,520,58,"id"],[559,60,520,60],[559,61,520,61],[559,65,520,65],[559,70,520,70],[560,4,521,2],[560,5,521,3],[561,4,523,2],[561,11,523,9],[562,6,524,4,"game"],[562,10,524,8],[563,6,525,4,"resetGame"],[563,15,525,13],[564,6,526,4,"undoLastMove"],[564,18,526,16],[565,6,527,4,"canUndo"],[565,13,527,11],[565,15,527,13,"gameHistory"],[565,26,527,24],[565,27,527,25,"length"],[565,33,527,31],[565,36,527,34],[565,37,527,35],[566,6,528,4,"stockCycles"],[566,17,528,15],[567,6,528,17],[568,6,529,4,"isAutoCompleting"],[568,22,529,20],[569,6,530,4,"handleCardPress"],[569,21,530,19],[570,6,531,4,"handleEmptySpacePress"],[570,27,531,25],[571,6,532,4,"handleStockPress"],[571,22,532,20],[572,6,533,4,"isSelected"],[572,16,533,14],[573,6,534,4,"tryAutoPlaceInSafeZone"],[574,4,535,2],[574,5,535,3],[575,2,536,0],[575,3,536,1],[576,2,536,2,"_s"],[576,4,536,2],[576,5,92,13,"useSolitaireGame"],[576,21,92,29],[577,0,92,29],[577,3]],"functionMap":{"names":["<global>","localCanMoveTo","localGetMovableCards","hasAnyMoves","generatePlayableGame","useSolitaireGame","resetCycleOnProgress","saveGameState","setGameHistory$argument_0","currentGame.foundations.map$argument_0","currentGame.tableau.map$argument_0","canAutoComplete","gameState.foundations.every$argument_0","canMoveTo","getMovableCards","autoCompleteGame","currentGame.foundations.every$argument_0","Promise$argument_0","useEffect$argument_0","game.foundations.every$argument_0","onPress","undoLastMove","tryAutoPlaceInSafeZone","setGame$argument_0","handleCardPress","handleEmptySpacePress","handleStockPress","newGame.waste.map$argument_0","setStockCycles$argument_0","resetGame","isSelected","game.selected.cards.some$argument_0"],"mappings":"AAA;uBCQ;CDY;6BEE;CFe;oBGE;CHuC;6BIK;CJM;gCKE;+BCO,uBD;wBEG;mBCC;iDCI,aD;yCEC,aF;KDK;GFC;0BMG;oCCU,sBD;GNE;oBQE;GRY;0BSE;GTgB;2BUE;qCCS,sBD;0BEwD,qCF;GVK;YaG;+BCE,sBD;sCEU,iBF;4CEY,4BF;GbI;uBgBS;mBbQ,2Ba;GhBE;iCiBG;gBCM;SDkC;GjBO;0BmBE;YDgB;KC0D;GnBC;gCoBE;YFK;KEoD;GpBC;2BqBE;YHK;eIsB,sCJ;uBKI,kBL;KGK;GrBC;oBwBE;GxBM;qByBE;qCCC,uBD;GzBC;CLe"},"hasCjsExports":false},"type":"js/module"}]}