{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"setupGame\", {\n    enumerable: true,\n    get: function () {\n      return setupGame;\n    }\n  });\n  var createCard = (suit, value, color) => ({\n    id: `${suit}${value}`,\n    suit,\n    value,\n    color,\n    faceUp: false\n  });\n  var createDeck = () => {\n    var deck = [];\n    var suits = [\"♠\", \"♥\", \"♦\", \"♣\"];\n    var colors = [\"black\", \"red\", \"red\", \"black\"];\n    var values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    suits.forEach((suit, suitIndex) => {\n      values.forEach((value, valueIndex) => {\n        deck.push({\n          ...createCard(suit, value, colors[suitIndex]),\n          numValue: valueIndex + 1\n        });\n      });\n    });\n\n    // Shuffle\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [deck[j], deck[i]];\n      deck[i] = _ref[0];\n      deck[j] = _ref[1];\n    }\n    return deck;\n  };\n  var setupGame = () => {\n    var attempts = 0;\n    var maxAttempts = 10;\n    while (attempts < maxAttempts) {\n      attempts++;\n      var _deck = createDeck();\n      var _index = 0;\n\n      // Setup tableau (7 columns)\n      var _tableau = [];\n      for (var col = 0; col < 7; col++) {\n        var column = [];\n        for (var row = 0; row <= col; row++) {\n          var card = {\n            ..._deck[_index++]\n          };\n          card.faceUp = row === col; // Only top card face up\n          column.push(card);\n        }\n        _tableau.push(column);\n      }\n\n      // Remaining cards go to stock\n      var _stock = _deck.slice(_index).map(card => ({\n        ...card,\n        faceUp: false\n      }));\n      var gameState = {\n        tableau: _tableau,\n        stock: _stock,\n        waste: [],\n        foundations: [[], [], [], []],\n        selected: null,\n        score: 0,\n        moves: 0\n      };\n\n      // Basic solvability check - ensure we have some good sequences\n      if (isLikelyWinnable(gameState)) {\n        return gameState;\n      }\n    }\n\n    // If all attempts fail, just return the last one\n    var deck = createDeck();\n    var index = 0;\n    var tableau = [];\n    for (var _col = 0; _col < 7; _col++) {\n      var _column = [];\n      for (var _row = 0; _row <= _col; _row++) {\n        var _card = {\n          ...deck[index++]\n        };\n        _card.faceUp = _row === _col;\n        _column.push(_card);\n      }\n      tableau.push(_column);\n    }\n    var stock = deck.slice(index).map(card => ({\n      ...card,\n      faceUp: false\n    }));\n    return {\n      tableau,\n      stock,\n      waste: [],\n      foundations: [[], [], [], []],\n      selected: null,\n      score: 0,\n      moves: 0\n    };\n  };\n\n  // Basic check to see if game is likely winnable\n  var isLikelyWinnable = gameState => {\n    var goodMoves = 0;\n\n    // Check for kings that can be moved to empty spaces\n    for (var col = 0; col < gameState.tableau.length; col++) {\n      var column = gameState.tableau[col];\n      if (column.length > 0) {\n        var topCard = column[column.length - 1];\n        if (topCard.faceUp && topCard.value === \"K\") {\n          // Kings can always potentially be moved\n          goodMoves++;\n        }\n      }\n    }\n\n    // Check for aces that can go to foundations\n    for (var _col2 = 0; _col2 < gameState.tableau.length; _col2++) {\n      var _column2 = gameState.tableau[_col2];\n      if (_column2.length > 0) {\n        var _topCard = _column2[_column2.length - 1];\n        if (_topCard.faceUp && _topCard.value === \"A\") {\n          goodMoves++;\n        }\n      }\n    }\n\n    // Check for immediate tableau moves\n    for (var fromCol = 0; fromCol < gameState.tableau.length; fromCol++) {\n      var fromColumn = gameState.tableau[fromCol];\n      if (fromColumn.length === 0) continue;\n      var _topCard2 = fromColumn[fromColumn.length - 1];\n      if (!_topCard2.faceUp) continue;\n      for (var toCol = 0; toCol < gameState.tableau.length; toCol++) {\n        if (fromCol === toCol) continue;\n        var toColumn = gameState.tableau[toCol];\n        if (canPlaceOnTableau(_topCard2, toColumn)) {\n          goodMoves++;\n        }\n      }\n    }\n\n    // Game is likely winnable if we have at least 2 good moves available\n    return goodMoves >= 2;\n  };\n\n  // Helper function to check if a card can be placed on a tableau column\n  var canPlaceOnTableau = (card, column) => {\n    if (column.length === 0) {\n      return card.value === \"K\"; // Only kings on empty columns\n    }\n    var topCard = column[column.length - 1];\n    if (!topCard.faceUp) return false;\n    var cardValue = getCardNumValue(card.value);\n    var topValue = getCardNumValue(topCard.value);\n    return cardValue === topValue - 1 && card.color !== topCard.color;\n  };\n  var getCardNumValue = value => {\n    var values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    return values.indexOf(value) + 1;\n  };\n});","lineCount":177,"map":[[7,2,47,0,"Object"],[7,8,47,0],[7,9,47,0,"defineProperty"],[7,23,47,0],[7,24,47,0,"exports"],[7,31,47,0],[8,4,47,0,"enumerable"],[8,14,47,0],[9,4,47,0,"get"],[9,7,47,0],[9,18,47,0,"get"],[9,19,47,0],[10,6,47,0],[10,13,47,0,"setupGame"],[10,22,47,0],[11,4,47,0],[12,2,47,0],[13,2,1,0],[13,6,1,6,"createCard"],[13,16,1,16],[13,19,1,19,"createCard"],[13,20,1,20,"suit"],[13,24,1,24],[13,26,1,26,"value"],[13,31,1,31],[13,33,1,33,"color"],[13,38,1,38],[13,44,1,44],[14,4,2,2,"id"],[14,6,2,4],[14,8,2,6],[14,11,2,9,"suit"],[14,15,2,13],[14,18,2,16,"value"],[14,23,2,21],[14,25,2,23],[15,4,3,2,"suit"],[15,8,3,6],[16,4,4,2,"value"],[16,9,4,7],[17,4,5,2,"color"],[17,9,5,7],[18,4,6,2,"faceUp"],[18,10,6,8],[18,12,6,10],[19,2,7,0],[19,3,7,1],[19,4,7,2],[20,2,9,0],[20,6,9,6,"createDeck"],[20,16,9,16],[20,19,9,19,"createDeck"],[20,20,9,19],[20,25,9,25],[21,4,10,2],[21,8,10,8,"deck"],[21,12,10,12],[21,15,10,15],[21,17,10,17],[22,4,11,2],[22,8,11,8,"suits"],[22,13,11,13],[22,16,11,16],[22,17,11,17],[22,20,11,20],[22,22,11,22],[22,25,11,25],[22,27,11,27],[22,30,11,30],[22,32,11,32],[22,35,11,35],[22,36,11,36],[23,4,12,2],[23,8,12,8,"colors"],[23,14,12,14],[23,17,12,17],[23,18,12,18],[23,25,12,25],[23,27,12,27],[23,32,12,32],[23,34,12,34],[23,39,12,39],[23,41,12,41],[23,48,12,48],[23,49,12,49],[24,4,13,2],[24,8,13,8,"values"],[24,14,13,14],[24,17,13,17],[24,18,14,4],[24,21,14,7],[24,23,15,4],[24,26,15,7],[24,28,16,4],[24,31,16,7],[24,33,17,4],[24,36,17,7],[24,38,18,4],[24,41,18,7],[24,43,19,4],[24,46,19,7],[24,48,20,4],[24,51,20,7],[24,53,21,4],[24,56,21,7],[24,58,22,4],[24,61,22,7],[24,63,23,4],[24,67,23,8],[24,69,24,4],[24,72,24,7],[24,74,25,4],[24,77,25,7],[24,79,26,4],[24,82,26,7],[24,83,27,3],[25,4,29,2,"suits"],[25,9,29,7],[25,10,29,8,"forEach"],[25,17,29,15],[25,18,29,16],[25,19,29,17,"suit"],[25,23,29,21],[25,25,29,23,"suitIndex"],[25,34,29,32],[25,39,29,37],[26,6,30,4,"values"],[26,12,30,10],[26,13,30,11,"forEach"],[26,20,30,18],[26,21,30,19],[26,22,30,20,"value"],[26,27,30,25],[26,29,30,27,"valueIndex"],[26,39,30,37],[26,44,30,42],[27,8,31,6,"deck"],[27,12,31,10],[27,13,31,11,"push"],[27,17,31,15],[27,18,31,16],[28,10,32,8],[28,13,32,11,"createCard"],[28,23,32,21],[28,24,32,22,"suit"],[28,28,32,26],[28,30,32,28,"value"],[28,35,32,33],[28,37,32,35,"colors"],[28,43,32,41],[28,44,32,42,"suitIndex"],[28,53,32,51],[28,54,32,52],[28,55,32,53],[29,10,33,8,"numValue"],[29,18,33,16],[29,20,33,18,"valueIndex"],[29,30,33,28],[29,33,33,31],[30,8,34,6],[30,9,34,7],[30,10,34,8],[31,6,35,4],[31,7,35,5],[31,8,35,6],[32,4,36,2],[32,5,36,3],[32,6,36,4],[34,4,38,2],[35,4,39,2],[35,9,39,7],[35,13,39,11,"i"],[35,14,39,12],[35,17,39,15,"deck"],[35,21,39,19],[35,22,39,20,"length"],[35,28,39,26],[35,31,39,29],[35,32,39,30],[35,34,39,32,"i"],[35,35,39,33],[35,38,39,36],[35,39,39,37],[35,41,39,39,"i"],[35,42,39,40],[35,44,39,42],[35,46,39,44],[36,6,40,4],[36,10,40,10,"j"],[36,11,40,11],[36,14,40,14,"Math"],[36,18,40,18],[36,19,40,19,"floor"],[36,24,40,24],[36,25,40,25,"Math"],[36,29,40,29],[36,30,40,30,"random"],[36,36,40,36],[36,37,40,37],[36,38,40,38],[36,42,40,42,"i"],[36,43,40,43],[36,46,40,46],[36,47,40,47],[36,48,40,48],[36,49,40,49],[37,6,40,50],[37,10,40,50,"_ref"],[37,14,40,50],[37,17,41,25],[37,18,41,26,"deck"],[37,22,41,30],[37,23,41,31,"j"],[37,24,41,32],[37,25,41,33],[37,27,41,35,"deck"],[37,31,41,39],[37,32,41,40,"i"],[37,33,41,41],[37,34,41,42],[37,35,41,43],[38,6,41,5,"deck"],[38,10,41,9],[38,11,41,10,"i"],[38,12,41,11],[38,13,41,12],[38,16,41,12,"_ref"],[38,20,41,12],[39,6,41,14,"deck"],[39,10,41,18],[39,11,41,19,"j"],[39,12,41,20],[39,13,41,21],[39,16,41,21,"_ref"],[39,20,41,21],[40,4,42,2],[41,4,44,2],[41,11,44,9,"deck"],[41,15,44,13],[42,2,45,0],[42,3,45,1],[43,2,47,7],[43,6,47,13,"setupGame"],[43,15,47,22],[43,18,47,25,"setupGame"],[43,19,47,25],[43,24,47,31],[44,4,48,2],[44,8,48,6,"attempts"],[44,16,48,14],[44,19,48,17],[44,20,48,18],[45,4,49,2],[45,8,49,8,"maxAttempts"],[45,19,49,19],[45,22,49,22],[45,24,49,24],[46,4,51,2],[46,11,51,9,"attempts"],[46,19,51,17],[46,22,51,20,"maxAttempts"],[46,33,51,31],[46,35,51,33],[47,6,52,4,"attempts"],[47,14,52,12],[47,16,52,14],[48,6,54,4],[48,10,54,10,"deck"],[48,15,54,14],[48,18,54,17,"createDeck"],[48,28,54,27],[48,29,54,28],[48,30,54,29],[49,6,55,4],[49,10,55,8,"index"],[49,16,55,13],[49,19,55,16],[49,20,55,17],[51,6,57,4],[52,6,58,4],[52,10,58,10,"tableau"],[52,18,58,17],[52,21,58,20],[52,23,58,22],[53,6,59,4],[53,11,59,9],[53,15,59,13,"col"],[53,18,59,16],[53,21,59,19],[53,22,59,20],[53,24,59,22,"col"],[53,27,59,25],[53,30,59,28],[53,31,59,29],[53,33,59,31,"col"],[53,36,59,34],[53,38,59,36],[53,40,59,38],[54,8,60,6],[54,12,60,12,"column"],[54,18,60,18],[54,21,60,21],[54,23,60,23],[55,8,61,6],[55,13,61,11],[55,17,61,15,"row"],[55,20,61,18],[55,23,61,21],[55,24,61,22],[55,26,61,24,"row"],[55,29,61,27],[55,33,61,31,"col"],[55,36,61,34],[55,38,61,36,"row"],[55,41,61,39],[55,43,61,41],[55,45,61,43],[56,10,62,8],[56,14,62,14,"card"],[56,18,62,18],[56,21,62,21],[57,12,62,23],[57,15,62,26,"deck"],[57,20,62,30],[57,21,62,31,"index"],[57,27,62,36],[57,29,62,38],[58,10,62,40],[58,11,62,41],[59,10,63,8,"card"],[59,14,63,12],[59,15,63,13,"faceUp"],[59,21,63,19],[59,24,63,22,"row"],[59,27,63,25],[59,32,63,30,"col"],[59,35,63,33],[59,36,63,34],[59,37,63,35],[60,10,64,8,"column"],[60,16,64,14],[60,17,64,15,"push"],[60,21,64,19],[60,22,64,20,"card"],[60,26,64,24],[60,27,64,25],[61,8,65,6],[62,8,66,6,"tableau"],[62,16,66,13],[62,17,66,14,"push"],[62,21,66,18],[62,22,66,19,"column"],[62,28,66,25],[62,29,66,26],[63,6,67,4],[65,6,69,4],[66,6,70,4],[66,10,70,10,"stock"],[66,16,70,15],[66,19,70,18,"deck"],[66,24,70,22],[66,25,70,23,"slice"],[66,30,70,28],[66,31,70,29,"index"],[66,37,70,34],[66,38,70,35],[66,39,70,36,"map"],[66,42,70,39],[66,43,70,41,"card"],[66,47,70,45],[66,52,70,51],[67,8,70,53],[67,11,70,56,"card"],[67,15,70,60],[68,8,70,62,"faceUp"],[68,14,70,68],[68,16,70,70],[69,6,70,76],[69,7,70,77],[69,8,70,78],[69,9,70,79],[70,6,72,4],[70,10,72,10,"gameState"],[70,19,72,19],[70,22,72,22],[71,8,73,6,"tableau"],[71,15,73,13],[71,17,73,6,"tableau"],[71,25,73,13],[72,8,74,6,"stock"],[72,13,74,11],[72,15,74,6,"stock"],[72,21,74,11],[73,8,75,6,"waste"],[73,13,75,11],[73,15,75,13],[73,17,75,15],[74,8,76,6,"foundations"],[74,19,76,17],[74,21,76,19],[74,22,76,20],[74,24,76,22],[74,26,76,24],[74,28,76,26],[74,30,76,28],[74,32,76,30],[74,34,76,32],[74,36,76,34],[74,37,76,35],[75,8,77,6,"selected"],[75,16,77,14],[75,18,77,16],[75,22,77,20],[76,8,78,6,"score"],[76,13,78,11],[76,15,78,13],[76,16,78,14],[77,8,79,6,"moves"],[77,13,79,11],[77,15,79,13],[78,6,80,4],[78,7,80,5],[80,6,82,4],[81,6,83,4],[81,10,83,8,"isLikelyWinnable"],[81,26,83,24],[81,27,83,25,"gameState"],[81,36,83,34],[81,37,83,35],[81,39,83,37],[82,8,84,6],[82,15,84,13,"gameState"],[82,24,84,22],[83,6,85,4],[84,4,86,2],[86,4,88,2],[87,4,89,2],[87,8,89,8,"deck"],[87,12,89,12],[87,15,89,15,"createDeck"],[87,25,89,25],[87,26,89,26],[87,27,89,27],[88,4,90,2],[88,8,90,6,"index"],[88,13,90,11],[88,16,90,14],[88,17,90,15],[89,4,92,2],[89,8,92,8,"tableau"],[89,15,92,15],[89,18,92,18],[89,20,92,20],[90,4,93,2],[90,9,93,7],[90,13,93,11,"col"],[90,17,93,14],[90,20,93,17],[90,21,93,18],[90,23,93,20,"col"],[90,27,93,23],[90,30,93,26],[90,31,93,27],[90,33,93,29,"col"],[90,37,93,32],[90,39,93,34],[90,41,93,36],[91,6,94,4],[91,10,94,10,"column"],[91,17,94,16],[91,20,94,19],[91,22,94,21],[92,6,95,4],[92,11,95,9],[92,15,95,13,"row"],[92,19,95,16],[92,22,95,19],[92,23,95,20],[92,25,95,22,"row"],[92,29,95,25],[92,33,95,29,"col"],[92,37,95,32],[92,39,95,34,"row"],[92,43,95,37],[92,45,95,39],[92,47,95,41],[93,8,96,6],[93,12,96,12,"card"],[93,17,96,16],[93,20,96,19],[94,10,96,21],[94,13,96,24,"deck"],[94,17,96,28],[94,18,96,29,"index"],[94,23,96,34],[94,25,96,36],[95,8,96,38],[95,9,96,39],[96,8,97,6,"card"],[96,13,97,10],[96,14,97,11,"faceUp"],[96,20,97,17],[96,23,97,20,"row"],[96,27,97,23],[96,32,97,28,"col"],[96,36,97,31],[97,8,98,6,"column"],[97,15,98,12],[97,16,98,13,"push"],[97,20,98,17],[97,21,98,18,"card"],[97,26,98,22],[97,27,98,23],[98,6,99,4],[99,6,100,4,"tableau"],[99,13,100,11],[99,14,100,12,"push"],[99,18,100,16],[99,19,100,17,"column"],[99,26,100,23],[99,27,100,24],[100,4,101,2],[101,4,103,2],[101,8,103,8,"stock"],[101,13,103,13],[101,16,103,16,"deck"],[101,20,103,20],[101,21,103,21,"slice"],[101,26,103,26],[101,27,103,27,"index"],[101,32,103,32],[101,33,103,33],[101,34,103,34,"map"],[101,37,103,37],[101,38,103,39,"card"],[101,42,103,43],[101,47,103,49],[102,6,103,51],[102,9,103,54,"card"],[102,13,103,58],[103,6,103,60,"faceUp"],[103,12,103,66],[103,14,103,68],[104,4,103,74],[104,5,103,75],[104,6,103,76],[104,7,103,77],[105,4,105,2],[105,11,105,9],[106,6,106,4,"tableau"],[106,13,106,11],[107,6,107,4,"stock"],[107,11,107,9],[108,6,108,4,"waste"],[108,11,108,9],[108,13,108,11],[108,15,108,13],[109,6,109,4,"foundations"],[109,17,109,15],[109,19,109,17],[109,20,109,18],[109,22,109,20],[109,24,109,22],[109,26,109,24],[109,28,109,26],[109,30,109,28],[109,32,109,30],[109,34,109,32],[109,35,109,33],[110,6,110,4,"selected"],[110,14,110,12],[110,16,110,14],[110,20,110,18],[111,6,111,4,"score"],[111,11,111,9],[111,13,111,11],[111,14,111,12],[112,6,112,4,"moves"],[112,11,112,9],[112,13,112,11],[113,4,113,2],[113,5,113,3],[114,2,114,0],[114,3,114,1],[116,2,116,0],[117,2,117,0],[117,6,117,6,"isLikelyWinnable"],[117,22,117,22],[117,25,117,26,"gameState"],[117,34,117,35],[117,38,117,40],[118,4,118,2],[118,8,118,6,"goodMoves"],[118,17,118,15],[118,20,118,18],[118,21,118,19],[120,4,120,2],[121,4,121,2],[121,9,121,7],[121,13,121,11,"col"],[121,16,121,14],[121,19,121,17],[121,20,121,18],[121,22,121,20,"col"],[121,25,121,23],[121,28,121,26,"gameState"],[121,37,121,35],[121,38,121,36,"tableau"],[121,45,121,43],[121,46,121,44,"length"],[121,52,121,50],[121,54,121,52,"col"],[121,57,121,55],[121,59,121,57],[121,61,121,59],[122,6,122,4],[122,10,122,10,"column"],[122,16,122,16],[122,19,122,19,"gameState"],[122,28,122,28],[122,29,122,29,"tableau"],[122,36,122,36],[122,37,122,37,"col"],[122,40,122,40],[122,41,122,41],[123,6,123,4],[123,10,123,8,"column"],[123,16,123,14],[123,17,123,15,"length"],[123,23,123,21],[123,26,123,24],[123,27,123,25],[123,29,123,27],[124,8,124,6],[124,12,124,12,"topCard"],[124,19,124,19],[124,22,124,22,"column"],[124,28,124,28],[124,29,124,29,"column"],[124,35,124,35],[124,36,124,36,"length"],[124,42,124,42],[124,45,124,45],[124,46,124,46],[124,47,124,47],[125,8,125,6],[125,12,125,10,"topCard"],[125,19,125,17],[125,20,125,18,"faceUp"],[125,26,125,24],[125,30,125,28,"topCard"],[125,37,125,35],[125,38,125,36,"value"],[125,43,125,41],[125,48,125,46],[125,51,125,49],[125,53,125,51],[126,10,126,8],[127,10,127,8,"goodMoves"],[127,19,127,17],[127,21,127,19],[128,8,128,6],[129,6,129,4],[130,4,130,2],[132,4,132,2],[133,4,133,2],[133,9,133,7],[133,13,133,11,"col"],[133,18,133,14],[133,21,133,17],[133,22,133,18],[133,24,133,20,"col"],[133,29,133,23],[133,32,133,26,"gameState"],[133,41,133,35],[133,42,133,36,"tableau"],[133,49,133,43],[133,50,133,44,"length"],[133,56,133,50],[133,58,133,52,"col"],[133,63,133,55],[133,65,133,57],[133,67,133,59],[134,6,134,4],[134,10,134,10,"column"],[134,18,134,16],[134,21,134,19,"gameState"],[134,30,134,28],[134,31,134,29,"tableau"],[134,38,134,36],[134,39,134,37,"col"],[134,44,134,40],[134,45,134,41],[135,6,135,4],[135,10,135,8,"column"],[135,18,135,14],[135,19,135,15,"length"],[135,25,135,21],[135,28,135,24],[135,29,135,25],[135,31,135,27],[136,8,136,6],[136,12,136,12,"topCard"],[136,20,136,19],[136,23,136,22,"column"],[136,31,136,28],[136,32,136,29,"column"],[136,40,136,35],[136,41,136,36,"length"],[136,47,136,42],[136,50,136,45],[136,51,136,46],[136,52,136,47],[137,8,137,6],[137,12,137,10,"topCard"],[137,20,137,17],[137,21,137,18,"faceUp"],[137,27,137,24],[137,31,137,28,"topCard"],[137,39,137,35],[137,40,137,36,"value"],[137,45,137,41],[137,50,137,46],[137,53,137,49],[137,55,137,51],[138,10,138,8,"goodMoves"],[138,19,138,17],[138,21,138,19],[139,8,139,6],[140,6,140,4],[141,4,141,2],[143,4,143,2],[144,4,144,2],[144,9,144,7],[144,13,144,11,"fromCol"],[144,20,144,18],[144,23,144,21],[144,24,144,22],[144,26,144,24,"fromCol"],[144,33,144,31],[144,36,144,34,"gameState"],[144,45,144,43],[144,46,144,44,"tableau"],[144,53,144,51],[144,54,144,52,"length"],[144,60,144,58],[144,62,144,60,"fromCol"],[144,69,144,67],[144,71,144,69],[144,73,144,71],[145,6,145,4],[145,10,145,10,"fromColumn"],[145,20,145,20],[145,23,145,23,"gameState"],[145,32,145,32],[145,33,145,33,"tableau"],[145,40,145,40],[145,41,145,41,"fromCol"],[145,48,145,48],[145,49,145,49],[146,6,146,4],[146,10,146,8,"fromColumn"],[146,20,146,18],[146,21,146,19,"length"],[146,27,146,25],[146,32,146,30],[146,33,146,31],[146,35,146,33],[147,6,148,4],[147,10,148,10,"topCard"],[147,19,148,17],[147,22,148,20,"fromColumn"],[147,32,148,30],[147,33,148,31,"fromColumn"],[147,43,148,41],[147,44,148,42,"length"],[147,50,148,48],[147,53,148,51],[147,54,148,52],[147,55,148,53],[148,6,149,4],[148,10,149,8],[148,11,149,9,"topCard"],[148,20,149,16],[148,21,149,17,"faceUp"],[148,27,149,23],[148,29,149,25],[149,6,151,4],[149,11,151,9],[149,15,151,13,"toCol"],[149,20,151,18],[149,23,151,21],[149,24,151,22],[149,26,151,24,"toCol"],[149,31,151,29],[149,34,151,32,"gameState"],[149,43,151,41],[149,44,151,42,"tableau"],[149,51,151,49],[149,52,151,50,"length"],[149,58,151,56],[149,60,151,58,"toCol"],[149,65,151,63],[149,67,151,65],[149,69,151,67],[150,8,152,6],[150,12,152,10,"fromCol"],[150,19,152,17],[150,24,152,22,"toCol"],[150,29,152,27],[150,31,152,29],[151,8,154,6],[151,12,154,12,"toColumn"],[151,20,154,20],[151,23,154,23,"gameState"],[151,32,154,32],[151,33,154,33,"tableau"],[151,40,154,40],[151,41,154,41,"toCol"],[151,46,154,46],[151,47,154,47],[152,8,155,6],[152,12,155,10,"canPlaceOnTableau"],[152,29,155,27],[152,30,155,28,"topCard"],[152,39,155,35],[152,41,155,37,"toColumn"],[152,49,155,45],[152,50,155,46],[152,52,155,48],[153,10,156,8,"goodMoves"],[153,19,156,17],[153,21,156,19],[154,8,157,6],[155,6,158,4],[156,4,159,2],[158,4,161,2],[159,4,162,2],[159,11,162,9,"goodMoves"],[159,20,162,18],[159,24,162,22],[159,25,162,23],[160,2,163,0],[160,3,163,1],[162,2,165,0],[163,2,166,0],[163,6,166,6,"canPlaceOnTableau"],[163,23,166,23],[163,26,166,26,"canPlaceOnTableau"],[163,27,166,27,"card"],[163,31,166,31],[163,33,166,33,"column"],[163,39,166,39],[163,44,166,44],[164,4,167,2],[164,8,167,6,"column"],[164,14,167,12],[164,15,167,13,"length"],[164,21,167,19],[164,26,167,24],[164,27,167,25],[164,29,167,27],[165,6,168,4],[165,13,168,11,"card"],[165,17,168,15],[165,18,168,16,"value"],[165,23,168,21],[165,28,168,26],[165,31,168,29],[165,32,168,30],[165,33,168,31],[166,4,169,2],[167,4,171,2],[167,8,171,8,"topCard"],[167,15,171,15],[167,18,171,18,"column"],[167,24,171,24],[167,25,171,25,"column"],[167,31,171,31],[167,32,171,32,"length"],[167,38,171,38],[167,41,171,41],[167,42,171,42],[167,43,171,43],[168,4,172,2],[168,8,172,6],[168,9,172,7,"topCard"],[168,16,172,14],[168,17,172,15,"faceUp"],[168,23,172,21],[168,25,172,23],[168,32,172,30],[168,37,172,35],[169,4,174,2],[169,8,174,8,"cardValue"],[169,17,174,17],[169,20,174,20,"getCardNumValue"],[169,35,174,35],[169,36,174,36,"card"],[169,40,174,40],[169,41,174,41,"value"],[169,46,174,46],[169,47,174,47],[170,4,175,2],[170,8,175,8,"topValue"],[170,16,175,16],[170,19,175,19,"getCardNumValue"],[170,34,175,34],[170,35,175,35,"topCard"],[170,42,175,42],[170,43,175,43,"value"],[170,48,175,48],[170,49,175,49],[171,4,177,2],[171,11,177,9,"cardValue"],[171,20,177,18],[171,25,177,23,"topValue"],[171,33,177,31],[171,36,177,34],[171,37,177,35],[171,41,177,39,"card"],[171,45,177,43],[171,46,177,44,"color"],[171,51,177,49],[171,56,177,54,"topCard"],[171,63,177,61],[171,64,177,62,"color"],[171,69,177,67],[172,2,178,0],[172,3,178,1],[173,2,180,0],[173,6,180,6,"getCardNumValue"],[173,21,180,21],[173,24,180,25,"value"],[173,29,180,30],[173,33,180,35],[174,4,181,2],[174,8,181,8,"values"],[174,14,181,14],[174,17,181,17],[174,18,182,4],[174,21,182,7],[174,23,183,4],[174,26,183,7],[174,28,184,4],[174,31,184,7],[174,33,185,4],[174,36,185,7],[174,38,186,4],[174,41,186,7],[174,43,187,4],[174,46,187,7],[174,48,188,4],[174,51,188,7],[174,53,189,4],[174,56,189,7],[174,58,190,4],[174,61,190,7],[174,63,191,4],[174,67,191,8],[174,69,192,4],[174,72,192,7],[174,74,193,4],[174,77,193,7],[174,79,194,4],[174,82,194,7],[174,83,195,3],[175,4,196,2],[175,11,196,9,"values"],[175,17,196,15],[175,18,196,16,"indexOf"],[175,25,196,23],[175,26,196,24,"value"],[175,31,196,29],[175,32,196,30],[175,35,196,33],[175,36,196,34],[176,2,197,0],[176,3,197,1],[177,0,197,2],[177,3]],"functionMap":{"names":["<global>","createCard","createDeck","suits.forEach$argument_0","values.forEach$argument_0","setupGame","deck.slice.map$argument_0","isLikelyWinnable","canPlaceOnTableau","getCardNumValue"],"mappings":"AAA,mBC;EDM;mBEE;gBCoB;mBCC;KDK;GDC;CFS;yBKE;wCCuB,sCD;sCCiC,sCD;CLW;yBOG;CP8C;0BQG;CRY;wBSE;CTiB"},"hasCjsExports":false},"type":"js/module"}]}